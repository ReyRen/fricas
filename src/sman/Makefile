## ---------------------------------
## -- Standard Autoconf variables --
## ---------------------------------

SHELL = /bin/bash

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
# sbindir = ${exec_prefix}/sbin
# libexecdir = ${exec_prefix}/libexec
# datarootdir = ${prefix}/share
# datadir = ${datarootdir}
# sysconfdir = ${prefix}/etc
# sharedstatedir = ${prefix}/com
# localstatedir = ${prefix}/var
# includedir = ${prefix}/include
# oldincludedir = /usr/include
# docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
# infodir = ${datarootdir}/info
# htmldir = ${docdir}
# dvidir = ${docdir}
# pdfdir = ${docdir}
# psdir = ${docdir}
libdir = ${exec_prefix}/lib
# lispdir = @lispdir@
# localedir = ${datarootdir}/locale


host = x86_64-linux-gnu
host_alias = 
build = x86_64-linux-gnu
build_alias = 
target = x86_64-linux-gnu
target_alias = 

srcdir = .
abs_srcdir = /git/fricas/src/sman
top_srcdir = ../..
abs_top_srcdir = /git/fricas

# Notice that there is a bug in Autoconf 2.59 whereby the variable
# top_builddir is not defined.  So avoid to use it directly.  Use
# abs_top_builddir.
builddir = .
abs_builddir = /git/fricas/src/sman
top_builddir = ../..
abs_top_builddir = /git/fricas
datadir = ${datarootdir}


AR = ar
CC = gcc
CFLAGS = -g -O2
OBJEXT = o
EXEEXT = 

AUTOCONF = autoconf
AWK = gawk
TARGET_AWK = /usr/bin/gawk
INSTALL = /usr/bin/install -c
install_sh = @install_sh@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_script = $(install_sh) -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
## FIXME:  The test done with Autoconf-2.60 and later concludes
##         that "ln -s" is unusable on msys, and therefore defaults to
##         "cp -p", but that default is unusable for us.  For our
##         purpose "ln -s" is just fine on that platform.  Consequently
##         we are explicitly overrding that value here.
LN_S = ln -s
mkinstalldirs = $(top_srcdir)/config/mkinstalldirs
PATCH = @PATCH@
RANLIB = ranlib
TAR = tar
TOUCH = touch

# The list of make targets made recursively, by walking sub-directories
# Normally, this is a template generated by Automake, but we don't
# use Automake yet; so, we must do it the hard way.
# See the corresponding rules in setup-dep.mk
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
		html-recursive info-recursive install-data-recursive \
		install-exec-recursive install-info-recursive \
		install-recursive installcheck-recursive \
		installdirs-recursive pdf-recursive ps-recursive \
		uninstall-info-recursive uninstall-recursive


## Normally, Automake will substitute the value for this variable.
## But, we don't have Automake yet.  So we punt on it.
MKDIR_P = mkdir -p

STAMP = echo timestamp >

## ---------------------
## -- Axiom variables --
## ---------------------

## Absolute path to the toplevel source directory for Axiom.  This is
## almost like Autoconf-standard abs_top_srcdir except that, it retains
## the same syntactic values in subdirectories.

## Where The Axiom distribution main source files are kept.
## Notice, this is the src/ directory within the toplevel source
## directory

fricas_top_srcdir = /git/fricas

fricas_src_srcdir = $(fricas_top_srcdir)/src
fricas_src_datadir = $(fricas_src_srcdir)/share
fricas_src_algdir = $(fricas_src_srcdir)/algebra

## Where tools for the build machine are built
fricas_builddir = /git/fricas/build/x86_64-linux-gnu
fricas_build_bindir = /git/fricas/build/x86_64-linux-gnu/bin
fricas_build_libdir = $(fricas_builddir)/lib
fricas_build_mandir = $(fricas_builddir)/man

fricas_configdir = $(abs_top_builddir)/config
fricas_c_macros = $(fricas_configdir)/fricas_c_macros.h

LATEX = /usr/bin/latex

## Staging directory for the target DESTDIR
fricas_targetdir = /git/fricas/target/x86_64-linux-gnu
fricas_target_bindir = $(fricas_targetdir)/bin
fricas_target_libdir = $(fricas_targetdir)/lib
fricas_target_srcdir = $(fricas_targetdir)/src
fricas_target_docdir = $(fricas_targetdir)/doc
fricas_target_datadir = $(fricas_targetdir)/share
fricas_target_texdir = $(fricas_target_datadir)/texmf/tex


FRICAS_X11_CFLAGS = 
FRICAS_X11_LDFLAGS =  -lXpm  -lSM -lICE -lX11 

fricas_includes = -I$(fricas_src_srcdir)/include -I$(fricas_configdir)

fricas_build_helper = $(abs_top_srcdir)/src/scripts/build_helper

## Where the staging build directory is found
AXIOM = /git/fricas/target/x86_64-linux-gnu
export AXIOM
BASE = 
export BASE

TMP=$(fricas_builddir)

## Old Axiom ENV variables

VERSION = FriCAS 2018-03-10

CCF=-O2 -Wall -D_GNU_SOURCE
LDF=-g

## -------------------------------------------
## -- Files generated for the build machine --
## -------------------------------------------
unpack_file = $(fricas_src_srcdir)/scripts/unpack_file

FRICAS_LISP = /usr/local/bin/sbcl
# Extension of the output file name returned by compile-file
LISPOBJEXT = fasl
FASLEXT = fasl


##

##
AXIOMXLROOT=${AXIOM}/compiler

## GCL command to end a session.
BYE=quit

## Clear suffix-based implicit rule table.
.SUFFIXES:

PREGENERATED=
PACKAGE_VERSION = 2018-03-10
PACKAGE_TARNAME = fricas
fricas_c_runtime_extra =  -lutil

subdir = src/sman/

# this is where to put the various commands
OUT=	$(fricas_target_bindir)
OUTLIB=	$(fricas_target_libdir)

build_libdir = $(abs_top_builddir)/src/lib

bin_PROGRAMS = session$(EXEEXT) \
		spadclient$(EXEEXT) \
		sman$(EXEEXT)

session_sources = session.c
session_objects = $(session_sources:.c=.$(OBJEXT))
session_LDADD = -L$(build_libdir) -lspad $(fricas_c_runtime_extra)
session_DEPENDENCIES = $(build_libdir)/libspad.a

spadclient_sources = spadclient.c
spadclient_objects = $(spadclient_sources:.c=.$(OBJEXT))
spadclient_LDADD = -L$(build_libdir) -lspad $(fricas_c_runtime_extra)
spadclient_DEPENDENCIES = $(build_libdir)/libspad.a

sman_sources = sman.c
sman_objects = $(sman_sources:.c=.$(OBJEXT))
sman_LDADD = -L$(build_libdir) -lspad $(fricas_c_runtime_extra)
sman_DEPENDENCIES = $(build_libdir)/libspad.a



.PHONY: all all-sman

all: all-ax

all-ax all-sman: stamp

stamp:	$(OUTLIB)/session$(EXEEXT) \
		$(OUTLIB)/spadclient$(EXEEXT) \
		$(OUT)/sman$(EXEEXT)
	-rm -f stamp
	$(STAMP) stamp

.PRECIOUS: %.$(OBJEXT)

%.$(OBJEXT): $(srcdir)/%.c
	$(CC) -c ${CCF} $(fricas_includes) -I$(srcdir) -o $@ $<

${OUTLIB}/session$(EXEEXT): $(session_objects) $(session_DEPENDENCIES)
	$(CC) $(session_objects) -o $@ $(session_LDADD) ${LDF} -o $@

${OUTLIB}/spadclient$(EXEEXT): $(spadclient_objects) $(spadclient_DEPENDENCIES)
	$(CC) $(spadclient_objects) $(spadclient_LDADD) ${LDF} -o $@

spadclient.$(OBJEXT): $(fricas_configdir)/fricas_c_macros.h

${OUT}/sman$(EXEEXT): $(sman_objects) $(sman_DEPENDENCIES)
	$(CC) $(sman_objects) $(sman_LDADD) ${LDF} -o $@

$(sman_objects): $(srcdir)/sman.h $(fricas_c_macros)

mostlyclean-local:
	-rm -f $(session_objects) $(sman_objects) $(spadclient_objects)
	-rm -f stamp

clean-local: mostlyclean-local
	-rm -f $(OUTLIB)/session$(EXEEXT)
	-rm -f $(OUTLIB)/spadclient$(EXEEXT)
	-rm -f $(OUT)/sman$(EXEEXT)

distclean-local: clean-local
## ---------------------------------------
## -- Standard boilerplate dependencies --
## ---------------------------------------

# Recursive rules, usually automatically generated by Automake.
# Since we do not use (yet) Automake, we mimic the behaviour as
# close as possible.
# Recursive wall of sub-directories is based on the variable
# SUBDIRS.  That variable usually contains the of sub-directories
# to be made in depth-first postfix.  However, that order can
# be changed to depth-first prefix by explicitly including "."
# in SUBDIRS.  Rules ending with '-ax' are those specific to the
# the current directory.  Notice that the '-ax' rules are similar
# to Automake generated '-am'.
.PHONY: $(RECURSIVE_TARGETS)
$(RECURSIVE_TARGETS):
	failcmd='exit 1'; \
	for f in $$MAKEFLAGS; do \
	   case $$f in \
	      *=* | --[!k]*) ;; \
	      *k*) failcmd='fail=yes';; \
	   esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; list='$(SUBDIRS)'; \
	for subdir in $$list; do \
	   echo "Making $$target in $$subdir"; \
	   if test "$$subdir" = "."; then \
	      dot_seen=yes; \
	      local_target="$$target-ax"; \
	   else \
	      local_target="$$target"; \
	   fi; \
	   (cd $$subdir && $(MAKE) $$local_target) || eval $$failcmd; \
	done; \
	if test "$$dot_seen" = "no"; then \
	   $(MAKE) "$$target-ax" || exit 1; \
	fi; test -z "$$fail"

# Recursive cleanup is done in reverse, postfix order of ordinary build.
.PHONY: mostlyclean-recursive
.PHONY: clean-recursive
.PHONY: distclean-recursive
.PHONY: maintainer-clean-recursive
mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcmd='exit 1'; \
	for f in $$MAKEFLAGS; do \
	   case $$f in \
	      *=* | --[!k]*) ;; \
	      *k*) failcmd='fail=yes';; \
	   esac; \
	done; \
	dot_seen=no; \
	list='$(SUBDIRS)' ; \
	rev=''; \
	for subdir in $$list; do \
	   if test "$$subdir" != "."; then \
	      rev="$$subdir $$rev"; \
	   fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	   echo "Making $$target in $$subdir"; \
	   if test "$$subdir" = "."; then \
	      local_target="$$target-ax"; \
	   else \
	      local_target="$$target"; \
	   fi; \
	   (cd $$subdir && $(MAKE) $$local_target) || eval $$failcmd; \
	done && test -z "$$fail"

## Rules to make DVI files from pamphlets

.PRECIOUS: %.tex
.PRECIOUS: %.dvi

.PHONY: dvi
dvi: dvi-recursive

$(top_srcdir)/configure: $(top_srcdir)/configure.ac \
			 $(top_srcdir)/config/fricas.m4
	cd $(top_srcdir) && $(AUTOCONF)


.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_srcdir)/config/var-def.mk \
	  $(top_srcdir)/config/setup-dep.mk \
	  $(abs_top_builddir)/config.status
	cd $(abs_top_builddir) && $(SHELL) ./config.status $(subdir)$@

## Cleanup.
##   Each Makefile is responsible of defining targets named
##   mostlyclean-local, clean-local, and distclean-local.
.PHONY: mostlyclean-generic mostlyclean-local mostlyclean mostlyclean-ax
mostlyclean-generic:
	-rm -f *~
	-rm -f *.log *.aux *.toc

mostlyclean: mostlyclean-recursive
mostlyclean-ax: mostlyclean-generic mostlyclean-local

.PHONY: clean-generic clean-local clean clean-ax
clean-generic: mostlyclean-generic
	-rm -f *.dvi

clean: clean-recursive
clean-ax: clean-generic clean-local

.PHONY: distclean-generic distclean-local distclean distclean-ax
distclean-generic: clean-generic
	-rm -rf $(fricas_target_docdir)/$(subdir)

distclean: distclean-recursive
	-rm Makefile

distclean-ax: distclean-generic distclean-local
