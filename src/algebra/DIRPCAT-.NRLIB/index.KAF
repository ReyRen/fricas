6451                (|DirectProductCategory&| S |dim| R)
|domain|
(((|DirectProductCategory&| |#1| |#2| |#3|)
  (CATEGORY |domain| (SIGNATURE |coerce| (|#1| |#3|))
   (SIGNATURE |coerce| (|#1| (|Fraction| (|Integer|))))
   (SIGNATURE |coerce| (|#1| (|Integer|)))
   (SIGNATURE |coerce| ((|OutputForm|) |#1|))
   (SIGNATURE |differentiate| (|#1| |#1| (|Mapping| |#3| |#3|)))
   (SIGNATURE |differentiate|
    (|#1| |#1| (|Mapping| |#3| |#3|) (|NonNegativeInteger|)))
   (SIGNATURE |differentiate|
    (|#1| |#1| (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))))
   (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|) (|NonNegativeInteger|)))
   (SIGNATURE |differentiate| (|#1| |#1| (|List| (|Symbol|))))
   (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|)))
   (SIGNATURE |differentiate| (|#1| |#1| (|NonNegativeInteger|)))
   (SIGNATURE |differentiate| (|#1| |#1|))
   (SIGNATURE |characteristic| ((|NonNegativeInteger|)))
   (SIGNATURE |reducedSystem| ((|Matrix| |#3|) (|Matrix| |#1|)))
   (SIGNATURE |reducedSystem|
    ((|Record| (|:| |mat| (|Matrix| |#3|)) (|:| |vec| (|Vector| |#3|)))
     (|Matrix| |#1|) (|Vector| |#1|)))
   (SIGNATURE |reducedSystem|
    ((|Record| (|:| |mat| (|Matrix| (|Integer|)))
               (|:| |vec| (|Vector| (|Integer|))))
     (|Matrix| |#1|) (|Vector| |#1|)))
   (SIGNATURE |reducedSystem| ((|Matrix| (|Integer|)) (|Matrix| |#1|)))
   (SIGNATURE |size| ((|NonNegativeInteger|)))
   (SIGNATURE |index| (|#1| (|PositiveInteger|)))
   (SIGNATURE |lookup| ((|PositiveInteger|) |#1|))
   (SIGNATURE |coerce| (|#1| |#1|)) (SIGNATURE / (|#1| |#1| |#3|))
   (SIGNATURE |dimension| ((|CardinalNumber|)))
   (SIGNATURE |coerce| ((|Vector| |#3|) |#1|)))
  (|DirectProductCategory| |#2| |#3|) (|NonNegativeInteger|) (|Type|))
 (T |DirectProductCategory&|))
(CATEGORY |domain| (SIGNATURE |coerce| (|#1| |#3|))
 (SIGNATURE |coerce| (|#1| (|Fraction| (|Integer|))))
 (SIGNATURE |coerce| (|#1| (|Integer|)))
 (SIGNATURE |coerce| ((|OutputForm|) |#1|))
 (SIGNATURE |differentiate| (|#1| |#1| (|Mapping| |#3| |#3|)))
 (SIGNATURE |differentiate|
  (|#1| |#1| (|Mapping| |#3| |#3|) (|NonNegativeInteger|)))
 (SIGNATURE |differentiate|
  (|#1| |#1| (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))))
 (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|) (|NonNegativeInteger|)))
 (SIGNATURE |differentiate| (|#1| |#1| (|List| (|Symbol|))))
 (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|)))
 (SIGNATURE |differentiate| (|#1| |#1| (|NonNegativeInteger|)))
 (SIGNATURE |differentiate| (|#1| |#1|))
 (SIGNATURE |characteristic| ((|NonNegativeInteger|)))
 (SIGNATURE |reducedSystem| ((|Matrix| |#3|) (|Matrix| |#1|)))
 (SIGNATURE |reducedSystem|
  ((|Record| (|:| |mat| (|Matrix| |#3|)) (|:| |vec| (|Vector| |#3|)))
   (|Matrix| |#1|) (|Vector| |#1|)))
 (SIGNATURE |reducedSystem|
  ((|Record| (|:| |mat| (|Matrix| (|Integer|)))
             (|:| |vec| (|Vector| (|Integer|))))
   (|Matrix| |#1|) (|Vector| |#1|)))
 (SIGNATURE |reducedSystem| ((|Matrix| (|Integer|)) (|Matrix| |#1|)))
 (SIGNATURE |size| ((|NonNegativeInteger|)))
 (SIGNATURE |index| (|#1| (|PositiveInteger|)))
 (SIGNATURE |lookup| ((|PositiveInteger|) |#1|))
 (SIGNATURE |coerce| (|#1| |#1|)) (SIGNATURE / (|#1| |#1| |#3|))
 (SIGNATURE |dimension| ((|CardinalNumber|)))
 (SIGNATURE |coerce| ((|Vector| |#3|) |#1|)))
"/git/fricas/src/algebra/DIRPCAT.spad"
((|dimension| (*1 *2)
  (AND (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|CardinalNumber|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 (|size| (*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 (|characteristic| (*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5)))))
((|size| (((|NonNegativeInteger|)) 51))
 (|reducedSystem| (((|Matrix| (|Integer|)) (|Matrix| $)) NIL)
  (((|Record| (|:| |mat| (|Matrix| (|Integer|)))
              (|:| |vec| (|Vector| (|Integer|))))
    (|Matrix| $) (|Vector| $))
   NIL)
  (((|Record| (|:| |mat| (|Matrix| |#3|)) (|:| |vec| (|Vector| |#3|)))
    (|Matrix| $) (|Vector| $))
   43)
  (((|Matrix| |#3|) (|Matrix| $)) 35))
 (|lookup| (((|PositiveInteger|) $) 59)) (|index| (($ (|PositiveInteger|)) 56))
 (|dimension| (((|CardinalNumber|)) 49))
 (|differentiate| (($ $) NIL) (($ $ (|NonNegativeInteger|)) NIL)
  (($ $ (|Symbol|)) NIL) (($ $ (|List| (|Symbol|))) NIL)
  (($ $ (|Symbol|) (|NonNegativeInteger|)) NIL)
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) NIL)
  (($ $ (|Mapping| |#3| |#3|) (|NonNegativeInteger|)) NIL)
  (($ $ (|Mapping| |#3| |#3|)) 18))
 (|coerce| (((|Vector| |#3|) $) NIL) (($ $) NIL) (((|OutputForm|) $) NIL)
           (($ (|Integer|)) 12) (($ (|Fraction| (|Integer|))) NIL)
           (($ |#3|) NIL))
 (|characteristic| (((|NonNegativeInteger|)) 15)) (/ (($ $ |#3|) 46)))
((|HasCategory| |#3| '(|Field|))
 (|HasCategory| |#3| '(|OrderedAbelianMonoidSup|))
 (|HasCategory| |#3| '(|OrderedSet|)) (|HasCategory| |#3| '(|unitsKnown|))
 (|HasCategory| |#3| '(|CommutativeRing|)) (|HasCategory| |#3| '(|Finite|))
 (|HasCategory| |#3| '(|SemiGroup|)) (|HasCategory| |#3| '(|SemiRng|))
 (|HasCategory| |#3| '(|Monoid|)) (|HasCategory| |#3| '(|AbelianMonoid|))
 (|HasCategory| |#3| '(|Ring|)) (|HasCategory| |#3| '(|SetCategory|)))
DIRPCAT-
((|constructor|
  (NIL
   "\\indented{2}{This category represents a finite cartesian product of a given type.} Many categorical properties are preserved under this construction."))
 (*
  (($ $ |#3|)
   "\\spad{y * r} multiplies each component of the vector \\spad{y} by the element \\spad{r}.")
  (($ |#3| $)
   "\\spad{r * y} multiplies the element \\spad{r} times each component of the vector \\spad{y}."))
 (|dot|
  ((|#3| $ $)
   "\\spad{dot(x,{} y)} computes the inner product of the vectors \\spad{x} and \\spad{y}."))
 (|unitVector|
  (($ (|PositiveInteger|))
   "\\spad{unitVector(n)} produces a vector with 1 in position \\spad{n} and zero elsewhere."))
 (|directProduct|
  (($ (|Vector| |#3|))
   "\\spad{directProduct(v)} converts the vector \\spad{v} to a direct product. Error: if the length of \\spad{v} is different from dim.")))
(("documentation" 0 5606) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 5597) ("predicates" 0 5146) ("superDomain" 0 NIL)
 ("operationAlist" 0 4067) ("modemaps" 0 3339) ("sourceFile" 0 3300)
 ("constructorCategory" 0 1786) ("constructorModemap" 0 66)
 ("constructorKind" 0 57) ("constructorForm" 0 20))