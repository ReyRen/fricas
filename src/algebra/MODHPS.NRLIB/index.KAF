7856                (|ModularHermitePadeSolver| F S)
|package|
(((|ModularHermitePadeSolver| |#1| |#2|)
  (CATEGORY |package|
   (SIGNATURE |HP_solve|
    ((|Union| (|Matrix| (|SparseUnivariatePolynomial| |#2|)) (|Boolean|))
     (|List| (|List| |#1|)) (|List| (|Integer|)) (|Symbol|) (|Symbol|)
     (|NonNegativeInteger|)
     (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
                (|Integer|))
     (|Mapping| (|Union| #1="good" #2="reject" #3="no_solution")
                (|List| (|SparseUnivariatePolynomial| |#2|)))))
   (SIGNATURE |gen_Monte_Carlo_check|
    ((|Mapping| (|Union| #1# #2# #3#)
                (|List| (|SparseUnivariatePolynomial| |#2|)))
     (|Mapping| (|Union| #1# #2# #3#)
                (|List| (|SparseUnivariatePolynomial| |#2|)))
     (|List| (|List| |#1|)) (|Symbol|) (|Symbol|) (|NonNegativeInteger|)
     (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
                (|Integer|))))
   (SIGNATURE |LLF_to_LPA|
    ((|Union| (|List| (|U32Vector|)) "failed") (|List| (|List| |#1|))
     (|Integer|) (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|)))
   (SIGNATURE |VSUPS_to_VPA|
    ((|Vector| (|U32Vector|)) (|Vector| (|SparseUnivariatePolynomial| |#2|))
     (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|))))
  (|CommutativeRing|) (|CommutativeRing|))
 (T |ModularHermitePadeSolver|))
(CATEGORY |package|
 (SIGNATURE |HP_solve|
  ((|Union| (|Matrix| (|SparseUnivariatePolynomial| |#2|)) (|Boolean|))
   (|List| (|List| |#1|)) (|List| (|Integer|)) (|Symbol|) (|Symbol|)
   (|NonNegativeInteger|)
   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
              (|Integer|))
   (|Mapping| (|Union| #1="good" #2="reject" #3="no_solution")
              (|List| (|SparseUnivariatePolynomial| |#2|)))))
 (SIGNATURE |gen_Monte_Carlo_check|
  ((|Mapping| (|Union| #1# #2# #3#)
              (|List| (|SparseUnivariatePolynomial| |#2|)))
   (|Mapping| (|Union| #1# #2# #3#)
              (|List| (|SparseUnivariatePolynomial| |#2|)))
   (|List| (|List| |#1|)) (|Symbol|) (|Symbol|) (|NonNegativeInteger|)
   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
              (|Integer|))))
 (SIGNATURE |LLF_to_LPA|
  ((|Union| (|List| (|U32Vector|)) "failed") (|List| (|List| |#1|)) (|Integer|)
   (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|)))
 (SIGNATURE |VSUPS_to_VPA|
  ((|Vector| (|U32Vector|)) (|Vector| (|SparseUnivariatePolynomial| |#2|))
   (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|))))
"/git/fricas/src/algebra/MODHPS.spad"
((|VSUPS_to_VPA| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
       (|ofCategory| *7 (|CommutativeRing|))))
 (|LLF_to_LPA| (*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| *7)))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
   (|ofCategory| *8 (|CommutativeRing|))))
 (|gen_Monte_Carlo_check| (*1 *2 *2 *3 *4 *4 *5 *6)
  (AND
   (|isDomain| *2
               (|Mapping| (|Union| #1="good" #2="reject" #3="no_solution")
                          (|List| (|SparseUnivariatePolynomial| *8))))
   (|isDomain| *3 (|List| (|List| *7))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *6
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))))
 (|HP_solve| (*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| *9)))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| #1# #2# #3#)
                              (|List| (|SparseUnivariatePolynomial| *10))))
       (|ofCategory| *9 (|CommutativeRing|))
       (|ofCategory| *10 (|CommutativeRing|))
       (|isDomain| *2
                   (|Union| (|Matrix| (|SparseUnivariatePolynomial| *10))
                            (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *9 *10)))))
((|gen_Monte_Carlo_check|
  (((|Mapping| (|Union| #1="good" #2="reject" #3="no_solution")
               (|List| (|SparseUnivariatePolynomial| |#2|)))
    (|Mapping| (|Union| #1# #2# #3#)
               (|List| (|SparseUnivariatePolynomial| |#2|)))
    (|List| (|List| |#1|)) (|Symbol|) (|Symbol|) (|NonNegativeInteger|)
    (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
               (|Integer|)))
   36))
 (|VSUPS_to_VPA|
  (((|Vector| (|U32Vector|)) (|Vector| (|SparseUnivariatePolynomial| |#2|))
    (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|))
   31))
 (|LLF_to_LPA|
  (((|Union| (|List| (|U32Vector|)) "failed") (|List| (|List| |#1|))
    (|Integer|) (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|))
   26))
 (|HP_solve|
  (((|Union| (|Matrix| (|SparseUnivariatePolynomial| |#2|)) (|Boolean|))
    (|List| (|List| |#1|)) (|List| (|Integer|)) (|Symbol|) (|Symbol|)
    (|NonNegativeInteger|)
    (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
               (|Integer|))
    (|Mapping| (|Union| #1# #2# #3#)
               (|List| (|SparseUnivariatePolynomial| |#2|))))
   21)))
MODHPS
((|constructor|
  (NIL
   "This package provides generic interface to modular \\indented{1}{Hermite-Pade solver.}"))
 (|VSUPS_to_VPA|
  (((|Vector| (|U32Vector|)) (|Vector| (|SparseUnivariatePolynomial| |#2|))
    (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|))
   "modular reduction"))
 (|LLF_to_LPA|
  (((|Union| (|List| (|U32Vector|)) "failed") (|List| (|List| |#1|))
    (|Integer|) (|List| (|Symbol|)) (|List| (|Integer|)) (|Integer|))
   "modular reduction"))
 (|gen_Monte_Carlo_check|
  (((|Mapping| (|Union| #1="good" #2="reject" #3="no_solution")
               (|List| (|SparseUnivariatePolynomial| |#2|)))
    (|Mapping| (|Union| #1# #2# #3#)
               (|List| (|SparseUnivariatePolynomial| |#2|)))
    (|List| (|List| |#1|)) (|Symbol|) (|Symbol|) (|NonNegativeInteger|)
    (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
               (|Integer|)))
   "\\spad{gen_Monte_Carlo_check(check,{} l,{} kind,{} qvar,{} sigma,{} gen)} returns Monte Carlo \\spad{check} for solutions to guessing problem. If Monte Carlo \\spad{check} is unavailable returns \\spad{check}."))
 (|HP_solve|
  (((|Union| (|Matrix| (|SparseUnivariatePolynomial| |#2|)) (|Boolean|))
    (|List| (|List| |#1|)) (|List| (|Integer|)) (|Symbol|) (|Symbol|)
    (|NonNegativeInteger|)
    (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|)) (|Integer|)
               (|Integer|))
    (|Mapping| (|Union| #1# #2# #3#)
               (|List| (|SparseUnivariatePolynomial| |#2|))))
   "\\spad{HP_solve(l,{} degs,{} kind,{} sigma,{} gen check)} finds a \\spad{sigma} basis with degree bounds given by \\spad{degs}. It returns \\spad{false} if there is no interpolating vector that is correct up to (and including) \\spad{z^}(\\spad{sigma}-1) with \\spad{sigma} \\spad{>=} |degs+[1,{} 1,{} ...,{} 1]| or if check rejects all solutions. It returns \\spad{true} if it can not handle given problem.")))
(("documentation" 0 5941) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 5934) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 4786) ("modemaps" 0 2588) ("sourceFile" 0 2550)
 ("constructorCategory" 0 1388) ("constructorModemap" 0 63)
 ("constructorKind" 0 53) ("constructorForm" 0 20))