7737                (|JetDifferential| JB D)
|domain|
(((|JetDifferential| |#1| |#2|)
  (|Join| (|Module| |#2|)
          (CATEGORY |domain| (SIGNATURE |d| ($ |#1|))
           (SIGNATURE |dX| ($ (|PositiveInteger|)))
           (SIGNATURE |dU| ($ (|PositiveInteger|)))
           (SIGNATURE |dP|
            ($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))))
           (SIGNATURE |d| ($ |#2|))
           (SIGNATURE |coefficients| ((|List| |#2|) $))
           (SIGNATURE |differentials| ((|List| |#1|) $))
           (SIGNATURE |coefficient| (|#2| $ |#1|)) (SIGNATURE |copy| ($ $))
           (SIGNATURE |lie| ($ (|JetVectorField| |#1| |#2|) $))
           (SIGNATURE |contract| (|#2| (|JetVectorField| |#1| |#2|) $))
           (SIGNATURE |eval| (|#2| $ (|JetVectorField| |#1| |#2|)))))
  (|JetBundleCategory|) (|JetBundleFunctionCategory| |#1|))
 (T |JetDifferential|))
(|Join| (|Module| |#2|)
        (CATEGORY |domain| (SIGNATURE |d| ($ |#1|))
         (SIGNATURE |dX| ($ (|PositiveInteger|)))
         (SIGNATURE |dU| ($ (|PositiveInteger|)))
         (SIGNATURE |dP|
          ($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))))
         (SIGNATURE |d| ($ |#2|)) (SIGNATURE |coefficients| ((|List| |#2|) $))
         (SIGNATURE |differentials| ((|List| |#1|) $))
         (SIGNATURE |coefficient| (|#2| $ |#1|)) (SIGNATURE |copy| ($ $))
         (SIGNATURE |lie| ($ (|JetVectorField| |#1| |#2|) $))
         (SIGNATURE |contract| (|#2| (|JetVectorField| |#1| |#2|) $))
         (SIGNATURE |eval| (|#2| $ (|JetVectorField| |#1| |#2|)))))
"/git/fricas/src/algebra/JDIFF.spad"
((|d| (*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|dX| (*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|dU| (*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|dP| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 (|d| (*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 (|coefficients| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|differentials| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|coefficient| (*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 (|copy| (*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|lie| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|JetVectorField| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))))
 (|contract| (*1 *2 *3 *1)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))
 (|eval| (*1 *2 *1 *3)
         (AND (|isDomain| *3 (|JetVectorField| *4 *2))
              (|ofCategory| *4 (|JetBundleCategory|))
              (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
              (|isDomain| *1 (|JetDifferential| *4 *2)))))
((~= (((|Boolean|) $ $) NIL))
 (|zero?| (((|Boolean|) $) 48 (|has| |#2| (|AbelianMonoid|))))
 (|subtractIfCan|
  (((|Union| $ "failed") $ $) NIL (|has| |#2| (|AbelianGroup|))))
 (|sample| (($) NIL (|has| |#2| (|AbelianMonoid|)) CONST))
 (|opposite?| (((|Boolean|) $ $) NIL (|has| |#2| (|AbelianMonoid|))))
 (|lie| (($ (|JetVectorField| |#1| |#2|) $) NIL))
 (|latex| (((|String|) $) NIL))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|eval| ((|#2| $ (|JetVectorField| |#1| |#2|)) 67))
 (|differentials| (((|List| |#1|) $) 39)) (|dX| (($ (|PositiveInteger|)) 13))
 (|dU| (($ (|PositiveInteger|)) 15))
 (|dP| (($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))) 18))
 (|d| (($ |#1|) 10) (($ |#2|) 62)) (|copy| (($ $) 45))
 (|contract| ((|#2| (|JetVectorField| |#1| |#2|) $) 68))
 (|coerce| (((|OutputForm|) $) 33)) (|coefficients| (((|List| |#2|) $) 36))
 (|coefficient| ((|#2| $ |#1|) 44))
 (|Zero| (($) 47 (|has| |#2| (|AbelianMonoid|)) CONST))
 (= (((|Boolean|) $ $) NIL))
 (- (($ $) 50 (|has| |#2| (|AbelianGroup|)))
    (($ $ $) NIL (|has| |#2| (|AbelianGroup|))))
 (+ (($ $ $) 57))
 (* (($ (|PositiveInteger|) $) NIL) (($ |#2| $) 59)
    (($ (|NonNegativeInteger|) $) NIL (|has| |#2| (|AbelianMonoid|)))
    (($ (|Integer|) $) NIL (|has| |#2| (|AbelianGroup|))) (($ $ |#2|) NIL)))
((|HasCategory| |#2| '(|AbelianGroup|)) (|HasCategory| |#2| '(|AbelianMonoid|))
 (OR (|HasCategory| |#2| '(|AbelianGroup|))
     (|HasCategory| |#2| '(|AbelianMonoid|))))
JDIFF
(((|Module| |#2|) . T))
(((|AbelianGroup|) |has| |t#1| (|AbelianGroup|))
 ((|AbelianMonoid|) |has| |t#1| (|AbelianMonoid|)) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|CancellationAbelianMonoid|) |has| |t#1| (|AbelianGroup|))
 ((|CoercibleTo| (|OutputForm|)) . T) ((|LeftModule| |t#1|) . T)
 ((|Module| |#2|) . T) ((|RightModule| |t#2|) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "\\spad{JetDifferential(JB,{} D)} implements differentials (one-forms) \\indented{1}{over the jet bundle \\spad{JB} with coefficients from \\spad{D}.} \\indented{1}{The differentials operate on \\spad{JetVectorField(JB,{} D)}.}"))
 (|eval|
  ((|#2| $ (|JetVectorField| |#1| |#2|))
   "\\spad{eval(om,{} v)} applies the differential \\spad{om} to the vector field \\spad{v}."))
 (|contract|
  ((|#2| (|JetVectorField| |#1| |#2|) $)
   "\\spad{contract(v,{} om)} computes the interior derivative of \\spad{om} with respect to \\spad{v}."))
 (|lie|
  (($ (|JetVectorField| |#1| |#2|) $)
   "\\spad{lie(v,{} om)} calculates the Lie derivative of \\spad{om} with respect to \\spad{v}."))
 (|copy|
  (($ $) "\\spad{copy(om)} returns a copy of the differential \\spad{om}."))
 (|coefficient|
  ((|#2| $ |#1|)
   "\\spad{coefficient(om,{} jb)} returns the coefficient of \\spad{om} for the differential of \\spad{jb}."))
 (|differentials|
  (((|List| |#1|) $)
   "\\spad{directions(om)} yields the differentials where \\spad{om} has non-vanishing coefficients."))
 (|coefficients|
  (((|List| |#2|) $)
   "\\spad{coefficients(om)} yields the coefficients of \\spad{om}."))
 (|dP|
  (($ (|PositiveInteger|) (|List| (|NonNegativeInteger|)))
   "\\spad{dP(i,{} mu)} returns the differential of \\spad{P(i,{} mu)}."))
 (|dU|
  (($ (|PositiveInteger|))
   "\\spad{dU(i)} returns the differential of \\spad{U(i)}."))
 (|dX|
  (($ (|PositiveInteger|))
   "\\spad{dX(i)} returns the differential of \\spad{X(i)}."))
 (|d| (($ |#2|) "\\spad{d(f)} computes the differential of \\spad{f}.")
  (($ |#1|) "\\spad{d(jb)} returns the differential of \\spad{jb}.")))
(("documentation" 0 6068) ("ancestors" 0 5688) ("parents" 0 5664)
 ("abbreviation" 0 5658) ("predicates" 0 5487) ("superDomain" 0 NIL)
 ("operationAlist" 0 4149) ("modemaps" 0 1594) ("sourceFile" 0 1557)
 ("constructorCategory" 0 881) ("constructorModemap" 0 54)
 ("constructorKind" 0 45) ("constructorForm" 0 20))