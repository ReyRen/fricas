4484                (MAKEPROP '|PrincipalIdealDomain| 'NILADIC T)
(|PrincipalIdealDomain|)
|category|
(((|PrincipalIdealDomain|) (|Category|)) (T |PrincipalIdealDomain|))
(|Join| (|GcdDomain|)
        (CATEGORY |domain|
         (SIGNATURE |principalIdeal|
          ((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)))
         (SIGNATURE |expressIdealMember|
          ((|Union| (|List| $) "failed") (|List| $) $))))
"/git/fricas/src/algebra/PID.spad"
((|principalIdeal| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|PrincipalIdealDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| *1)) (|:| |generator| *1)))))
 (|expressIdealMember| (*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PrincipalIdealDomain|)))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6))
 (|unitCanonical| (($ $) 6)) (|unit?| (((|Boolean|) $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|recip| (((|Union| $ #1#) $) 6))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)) 6))
 (|opposite?| (((|Boolean|) $ $) 6)) (|one?| (((|Boolean|) $) 6))
 (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) 6))
 (|lcm| (($ $ $) 6) (($ (|List| $)) 6)) (|latex| (((|String|) $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   6))
 (|gcd| (($ $ $) 6) (($ (|List| $)) 6))
 (|exquo| (((|Union| $ "failed") $ $) 6))
 (|expressIdealMember| (((|Union| (|List| $) "failed") (|List| $) $) 6))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ (|Integer|)) 6) (($ $) 6))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|associator| (($ $ $ $) 6))
 (|associates?| (((|Boolean|) $ $) 6)) (|antiCommutator| (($ $ $) 6))
 (|annihilate?| (((|Boolean|) $ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST)) (= (((|Boolean|) $ $) 6))
 (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6)))
PID
(((|GcdDomain|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| $) . T) ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CoercibleTo| (|OutputForm|)) . T) ((|CommutativeRing|) . T)
 ((|CommutativeStar|) . T) ((|EntireRing|) . T) ((|GcdDomain|) . T)
 ((|IntegralDomain|) . T) ((|LeftModule| |t#1|) . T) ((|LeftOreRing|) . T)
 ((|Magma|) . T) ((|MagmaWithUnit|) . T) ((|Module| |t#1|) . T)
 ((|Monoid|) . T) ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|TwoSidedRecip|) . T) ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "The category of constructive principal ideal domains,{} \\spadignore{i.e.} where a single generator can be constructively found for any ideal given by a finite set of generators. Note that this constructive definition only implies that finitely generated ideals are principal. It is not clear what we would mean by an infinitely generated ideal."))
 (|expressIdealMember|
  (((|Union| (|List| $) "failed") (|List| $) $)
   "\\spad{expressIdealMember([f1,{} ...,{} fn],{} h)} returns a representation of \\spad{h} as a linear combination of the \\spad{fi} or \"failed\" if \\spad{h} is not in the ideal generated by the \\spad{fi}."))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $))
   "\\spad{principalIdeal([f1,{} ...,{} fn])} returns a record whose generator component is a generator of the ideal generated by \\spad{[f1,{} ...,{} fn]} whose coef component satisfies \\spad{generator = sum (input.i * coef.i)}")))
(("documentation" 0 3499) ("ancestors" 0 2670) ("parents" 0 2648)
 ("abbreviation" 0 2644) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 810) ("modemaps" 0 470) ("sourceFile" 0 435)
 ("constructorCategory" 0 171) ("constructorModemap" 0 102)
 ("constructorKind" 0 91) ("constructorForm" 0 66) ("NILADIC" 0 20))