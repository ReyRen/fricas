3890                (|InnerMatrixQuotientFieldFunctions| R |Row| |Col| M QF
                                                         |Row2| |Col2| M2)
|package|
(((|InnerMatrixQuotientFieldFunctions| |#1| |#2| |#3| |#4| |#5| |#6| |#7| |#8|)
  (CATEGORY |package| (SIGNATURE |rowEchelon| (|#8| |#4|))
   (SIGNATURE |inverse| ((|Union| |#8| "failed") |#4|))
   (IF (|has| |#7| (|shallowlyMutable|))
       (SIGNATURE |nullSpace| ((|List| |#3|) |#4|))
       |noBranch|))
  (|IntegralDomain|) (|FiniteLinearAggregate| |#1|)
  (|FiniteLinearAggregate| |#1|) (|MatrixCategory| |#1| |#2| |#3|)
  (|QuotientFieldCategory| |#1|) (|FiniteLinearAggregate| |#5|)
  (|FiniteLinearAggregate| |#5|) (|MatrixCategory| |#5| |#6| |#7|))
 (T |InnerMatrixQuotientFieldFunctions|))
(CATEGORY |package| (SIGNATURE |rowEchelon| (|#8| |#4|))
 (SIGNATURE |inverse| ((|Union| |#8| "failed") |#4|))
 (IF (|has| |#7| (|shallowlyMutable|))
     (SIGNATURE |nullSpace| ((|List| |#3|) |#4|))
     |noBranch|))
"/git/fricas/src/algebra/IMATQF.spad"
((|nullSpace| (*1 *2 *3)
  (AND (|ofCategory| *9 (|shallowlyMutable|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *10))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *10 (|MatrixCategory| *7 *8 *9))))
 (|inverse| (*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|FiniteLinearAggregate| *4))
   (|ofCategory| *6 (|FiniteLinearAggregate| *4))
   (|ofCategory| *7 (|QuotientFieldCategory| *4))
   (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
   (|isDomain| *1
               (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
   (|ofCategory| *8 (|FiniteLinearAggregate| *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 (|rowEchelon| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *2))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7)))))
((|rowEchelon| ((|#8| |#4|) 20))
 (|nullSpace| (((|List| |#3|) |#4|) 29 (|has| |#7| (|shallowlyMutable|))))
 (|inverse| (((|Union| |#8| "failed") |#4|) 23)))
((|HasCategory| |#7| '(|shallowlyMutable|)))
IMATQF
((|constructor|
  (NIL
   "\\spadtype{InnerMatrixQuotientFieldFunctions} provides functions on matrices over an integral domain which involve the quotient field of that integral domain. The functions rowEchelon and inverse return matrices with entries in the quotient field."))
 (|nullSpace|
  (((|List| |#3|) |#4|)
   "\\spad{nullSpace(m)} returns a basis for the null space of the matrix \\spad{m}."))
 (|inverse|
  (((|Union| |#8| "failed") |#4|)
   "\\spad{inverse(m)} returns the inverse of the matrix \\spad{m}. If the matrix is not invertible,{} \"failed\" is returned. Error: if the matrix is not square. Note: the result will have entries in the quotient field."))
 (|rowEchelon|
  ((|#8| |#4|)
   "\\spad{rowEchelon(m)} returns the row echelon form of the matrix \\spad{m}. the result will have entries in the quotient field.")))
(("documentation" 0 3050) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 3043) ("predicates" 0 2998) ("superDomain" 0 NIL)
 ("operationAlist" 0 2840) ("modemaps" 0 1018) ("sourceFile" 0 980)
 ("constructorCategory" 0 762) ("constructorModemap" 0 161)
 ("constructorKind" 0 151) ("constructorForm" 0 20))