)abbrev package ICDEN InnerCommonDenominator
--% InnerCommonDenominator
++ Author: Manuel Bronstein
++ Date Created: 2 May 1988
++ Description: InnerCommonDenominator provides functions to compute
++ the common denominator of a finite linear aggregate of elements
++ of the quotient field of an integral domain.
++ Keywords: gcd, quotient, common, denominator.
InnerCommonDenominator(R, Q, A, B) : Exports == Implementation where
  R : IntegralDomain
  Q : QuotientFieldCategory R
  A : Join(LinearAggregate R, finiteAggregate)
  B : Join(LinearAggregate Q, finiteAggregate)

  Exports ==> with
    commonDenominator : B -> R
      ++ commonDenominator([q1, ..., qn]) returns a common denominator
      ++ d for q1, ..., qn.
    clearDenominator : B -> A
      ++ clearDenominator([q1, ..., qn]) returns \spad{[p1, ..., pn]} such that
      ++ \spad{qi = pi/d} where d is a common denominator for the qi's.
    splitDenominator : B -> Record(num : A, den : R)
      ++ splitDenominator([q1, ..., qn]) returns
      ++ \spad{[[p1, ..., pn], d]} such that
      ++ \spad{qi = pi/d} and d is a common denominator for the qi's.

  Implementation ==> add
    import from FiniteLinearAggregateFunctions2(Q, B, R, A)

    clearDenominator l ==
      d := commonDenominator l
      map(x +-> numer(d*x), l)

    splitDenominator l ==
      d := commonDenominator l
      [map(x +-> numer(d*x), l), d]

    if R has GcdDomain then
      commonDenominator l == reduce(lcm, map(denom, l), 1)
    else
      commonDenominator l == reduce("*", map(denom, l), 1)

