3231                (|InfiniteTuple| S)
|domain|
(((|InfiniteTuple| |#1|)
  (|Join| (|CoercibleTo| (|OutputForm|))
          (CATEGORY |domain| (SIGNATURE |map| ($ (|Mapping| |#1| |#1|) $))
           (SIGNATURE |filterWhile| ($ (|Mapping| (|Boolean|) |#1|) $))
           (SIGNATURE |filterUntil| ($ (|Mapping| (|Boolean|) |#1|) $))
           (SIGNATURE |select| ($ (|Mapping| (|Boolean|) |#1|) $))
           (SIGNATURE |stream| ($ (|Mapping| |#1| |#1|) |#1|))
           (SIGNATURE |construct| ((|Stream| |#1|) $))))
  (|Type|))
 (T |InfiniteTuple|))
(|Join| (|CoercibleTo| (|OutputForm|))
        (CATEGORY |domain| (SIGNATURE |map| ($ (|Mapping| |#1| |#1|) $))
         (SIGNATURE |filterWhile| ($ (|Mapping| (|Boolean|) |#1|) $))
         (SIGNATURE |filterUntil| ($ (|Mapping| (|Boolean|) |#1|) $))
         (SIGNATURE |select| ($ (|Mapping| (|Boolean|) |#1|) $))
         (SIGNATURE |stream| ($ (|Mapping| |#1| |#1|) |#1|))
         (SIGNATURE |construct| ((|Stream| |#1|) $))))
"/git/fricas/src/algebra/ITUPLE.spad"
((|map| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 (|filterWhile| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 (|filterUntil| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 (|select| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 (|stream| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 (|construct| (*1 *2 *1)
              (AND (|isDomain| *2 (|Stream| *3))
                   (|isDomain| *1 (|InfiniteTuple| *3))
                   (|ofCategory| *3 (|Type|)))))
((|stream| (($ (|Mapping| |#1| |#1|) |#1|) 9))
 (|select| (($ (|Mapping| (|Boolean|) |#1|) $) 16))
 (|map| (($ (|Mapping| |#1| |#1|) $) NIL))
 (|filterWhile| (($ (|Mapping| (|Boolean|) |#1|) $) 12))
 (|filterUntil| (($ (|Mapping| (|Boolean|) |#1|) $) 14))
 (|construct| (((|Stream| |#1|) $) 17)) (|coerce| (((|OutputForm|) $) NIL)))
ITUPLE
(((|CoercibleTo| (|OutputForm|)) . T))
(((|CoercibleTo| (|OutputForm|)) . T))
((|constructor|
  (NIL
   "\\indented{1}{This package implements 'infinite tuples' for the interpreter.} The representation is a stream."))
 (|construct|
  (((|Stream| |#1|) $)
   "\\spad{construct(t)} converts an infinite tuple to a stream."))
 (|stream|
  (($ (|Mapping| |#1| |#1|) |#1|)
   "\\spad{stream(f,{} s)} returns \\spad{[s,{} f(s),{} f(f(s)),{} ...]}."))
 (|select|
  (($ (|Mapping| (|Boolean|) |#1|) $)
   "\\spad{select(p,{} t)} returns \\spad{[x for x in t | p(x)]}."))
 (|filterUntil|
  (($ (|Mapping| (|Boolean|) |#1|) $)
   "\\spad{filterUntil(p,{} t)} returns \\spad{[x for x in t while not p(x)]}."))
 (|filterWhile|
  (($ (|Mapping| (|Boolean|) |#1|) $)
   "\\spad{filterWhile(p,{} t)} returns \\spad{[x for x in t while p(x)]}."))
 (|map|
  (($ (|Mapping| |#1| |#1|) $)
   "\\spad{map(f,{} t)} replaces the tuple \\spad{t} by \\spad{[f(x) for x in t]}.")))
(("documentation" 0 2352) ("ancestors" 0 2313) ("parents" 0 2274)
 ("abbreviation" 0 2267) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1934) ("modemaps" 0 1026) ("sourceFile" 0 988)
 ("constructorCategory" 0 555) ("constructorModemap" 0 49)
 ("constructorKind" 0 40) ("constructorForm" 0 20))