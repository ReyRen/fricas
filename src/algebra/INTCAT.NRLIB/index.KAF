8942                (|IntervalCategory| R)
|category|
(((|IntervalCategory| |#1|) (|Category|)
  (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|)))
 (T |IntervalCategory|))
(|Join| (|GcdDomain|) (|OrderedSet|) (|TranscendentalFunctionCategory|)
        (|RadicalCategory|) (|RetractableTo| (|Integer|)) (|Approximate|)
        (CATEGORY |domain| (SIGNATURE |interval| ($ |t#1| |t#1|))
         (SIGNATURE |qinterval| ($ |t#1| |t#1|))
         (SIGNATURE |interval| ($ |t#1|))
         (SIGNATURE |interval| ($ (|Fraction| (|Integer|))))
         (SIGNATURE |inf| (|t#1| $)) (SIGNATURE |sup| (|t#1| $))
         (SIGNATURE |width| (|t#1| $)) (SIGNATURE |positive?| ((|Boolean|) $))
         (SIGNATURE |negative?| ((|Boolean|) $))
         (SIGNATURE |contains?| ((|Boolean|) $ |t#1|))))
"/git/fricas/src/algebra/INTCAT.spad"
((|interval| (*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 (|qinterval| (*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 (|interval| (*1 *1 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 (|interval| (*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 (|inf| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 (|sup| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 (|width| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 (|positive?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 (|negative?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 (|contains?| (*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|)))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|width| ((|#1| $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6))
 (|unitCanonical| (($ $) 6)) (|unit?| (((|Boolean|) $) 6)) (|tanh| (($ $) 6))
 (|tan| (($ $) 6)) (|sup| ((|#1| $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|sqrt| (($ $) 6))
 (|smaller?| (((|Boolean|) $ $) 6)) (|sinh| (($ $) 6)) (|sin| (($ $) 6))
 (|sech| (($ $) 6)) (|sec| (($ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|retractIfCan| (((|Union| (|Integer|) "failed") $) 6))
 (|retract| (((|Integer|) $) 6)) (|recip| (((|Union| $ #1#) $) 6))
 (|qinterval| (($ |#1| |#1|) 6)) (|positive?| (((|Boolean|) $) 6))
 (|pi| (($) 6)) (|opposite?| (((|Boolean|) $ $) 6))
 (|one?| (((|Boolean|) $) 6)) (|nthRoot| (($ $ (|Integer|)) 6))
 (|negative?| (((|Boolean|) $) 6)) (|min| (($ $ $) 6)) (|max| (($ $ $) 6))
 (|log| (($ $) 6)) (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) 6))
 (|lcm| (($ $ $) 6) (($ (|List| $)) 6)) (|latex| (((|String|) $) 6))
 (|interval| (($ |#1| |#1|) 6) (($ |#1|) 6) (($ (|Fraction| (|Integer|))) 6))
 (|inf| ((|#1| $) 6)) (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   6))
 (|gcd| (($ $ $) 6) (($ (|List| $)) 6))
 (|exquo| (((|Union| $ "failed") $ $) 6)) (|exp| (($ $) 6)) (|csch| (($ $) 6))
 (|csc| (($ $) 6)) (|coth| (($ $) 6)) (|cot| (($ $) 6)) (|cosh| (($ $) 6))
 (|cos| (($ $) 6)) (|contains?| (((|Boolean|) $ |#1|) 6))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ $) 6) (($ (|Integer|)) 6))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|atanh| (($ $) 6))
 (|atan| (($ $) 6)) (|associator| (($ $ $ $) 6))
 (|associates?| (((|Boolean|) $ $) 6)) (|asinh| (($ $) 6)) (|asin| (($ $) 6))
 (|asech| (($ $) 6)) (|asec| (($ $) 6)) (|antiCommutator| (($ $ $) 6))
 (|annihilate?| (((|Boolean|) $ $) 6)) (|acsch| (($ $) 6)) (|acsc| (($ $) 6))
 (|acoth| (($ $) 6)) (|acot| (($ $) 6)) (|acosh| (($ $) 6)) (|acos| (($ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6) (($ $ $) 6)
  (($ $ (|Fraction| (|Integer|))) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST)) (>= (((|Boolean|) $ $) 6))
 (> (((|Boolean|) $ $) 6)) (= (((|Boolean|) $ $) 6)) (<= (((|Boolean|) $ $) 6))
 (< (((|Boolean|) $ $) 6)) (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6)))
INTCAT
(((|GcdDomain|) . T) ((|OrderedSet|) . T)
 ((|TranscendentalFunctionCategory|) . T) ((|RadicalCategory|) . T)
 ((|RetractableTo| (|Integer|)) . T) ((|Approximate|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| $) . T) ((|Approximate|) . T)
 ((|ArcHyperbolicFunctionCategory|) . T)
 ((|ArcTrigonometricFunctionCategory|) . T) ((|BasicType|) . T)
 ((|BiModule| |t#1| |t#1|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CommutativeRing|) . T) ((|CommutativeStar|) . T) ((|Comparable|) . T)
 ((|ElementaryFunctionCategory|) . T) ((|EntireRing|) . T) ((|GcdDomain|) . T)
 ((|HyperbolicFunctionCategory|) . T) ((|IntegralDomain|) . T)
 ((|LeftModule| |t#1|) . T) ((|LeftOreRing|) . T) ((|Magma|) . T)
 ((|MagmaWithUnit|) . T) ((|Module| |t#1|) . T) ((|Monoid|) . T)
 ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|OrderedSet|) . T) ((|PartialOrder|) . T) ((|RadicalCategory|) . T)
 ((|RetractableTo| (|Integer|)) . T) ((|RightModule| |t#2|) . T) ((|Ring|) . T)
 ((|Rng|) . T) ((|SemiGroup|) . T) ((|SemiRing|) . T) ((|SemiRng|) . T)
 ((|SetCategory|) . T) ((|TranscendentalFunctionCategory|) . T)
 ((|TrigonometricFunctionCategory|) . T) ((|TwoSidedRecip|) . T)
 ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "\\indented{1}{+ Author: Mike Dewar} + Date Created: November 1996 + Basic Functions: + Related Constructors: + Also See: + AMS Classifications: + Keywords: + References: + Description: + This category implements of interval arithmetic and transcendental + functions over intervals."))
 (|contains?|
  (((|Boolean|) $ |#1|)
   "\\spad{contains?(i,{} f)} returns \\spad{true} if \\spad{f} is contained within the interval \\spad{i},{} \\spad{false} otherwise."))
 (|negative?|
  (((|Boolean|) $)
   "\\spad{negative?(u)} returns \\spad{true} if every element of \\spad{u} is negative,{} \\spad{false} otherwise."))
 (|positive?|
  (((|Boolean|) $)
   "\\spad{positive?(u)} returns \\spad{true} if every element of \\spad{u} is positive,{} \\spad{false} otherwise."))
 (|width| ((|#1| $) "\\spad{width(u)} returns \\spad{sup(u) - inf(u)}."))
 (|sup| ((|#1| $) "\\spad{sup(u)} returns the supremum of \\spad{u}."))
 (|inf| ((|#1| $) "\\spad{inf(u)} returns the infinum of \\spad{u}."))
 (|qinterval|
  (($ |#1| |#1|)
   "\\spad{qinterval(inf,{} sup)} creates a new interval \\spad{[inf,{} sup]},{} without checking the ordering on the elements."))
 (|interval|
  (($ (|Fraction| (|Integer|)))
   "\\spad{interval(f)} creates a new interval around \\spad{f}.")
  (($ |#1|) "\\spad{interval(f)} creates a new interval around \\spad{f}.")
  (($ |#1| |#1|)
   "\\spad{interval(inf,{} sup)} creates a new interval,{} either \\spad{[inf,{} sup]} if \\spad{inf <= sup} or \\spad{[sup,{} inf]} otherwise.")))
(("documentation" 0 7418) ("ancestors" 0 6195) ("parents" 0 6025)
 ("abbreviation" 0 6018) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 3177) ("modemaps" 0 843) ("sourceFile" 0 805)
 ("constructorCategory" 0 191) ("constructorModemap" 0 54)
 ("constructorKind" 0 43) ("constructorForm" 0 20))