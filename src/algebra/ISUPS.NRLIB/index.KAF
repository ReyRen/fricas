47365               (|InnerSparseUnivariatePowerSeries| |Coef|)
|domain|
(((|InnerSparseUnivariatePowerSeries| |#1|)
  (|Join| (|UnivariatePowerSeriesCategory| |#1| (|Integer|))
          (CATEGORY |domain|
           (SIGNATURE |makeSeries|
            ($ (|Reference| (|OrderedCompletion| (|Integer|)))
             (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))))
           (SIGNATURE |getRef|
            ((|Reference| (|OrderedCompletion| (|Integer|))) $))
           (SIGNATURE |getStream|
            ((|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))) $))
           (SIGNATURE |series|
            ($ (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))))
           (SIGNATURE |monomial?| ((|Boolean|) $))
           (SIGNATURE |multiplyCoefficients|
            ($ (|Mapping| |#1| (|Integer|)) $))
           (SIGNATURE |iExquo| ((|Union| $ "failed") $ $ (|Boolean|)))
           (SIGNATURE |taylorQuoByVar| ($ $)) (SIGNATURE |iCompose| ($ $ $))
           (SIGNATURE |seriesToOutputForm|
            ((|OutputForm|)
             (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))
             (|Reference| (|OrderedCompletion| (|Integer|))) (|Symbol|) |#1|
             (|Fraction| (|Integer|))))
           (IF (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))
               (PROGN
                (SIGNATURE |integrate| ($ $))
                (SIGNATURE |cPower| ($ $ |#1|))
                (SIGNATURE |cRationalPower| ($ $ (|Fraction| (|Integer|))))
                (SIGNATURE |cExp| ($ $))
                (SIGNATURE |cLog| ($ $))
                (SIGNATURE |cSin| ($ $))
                (SIGNATURE |cCos| ($ $))
                (SIGNATURE |cTan| ($ $))
                (SIGNATURE |cCot| ($ $))
                (SIGNATURE |cSec| ($ $))
                (SIGNATURE |cCsc| ($ $))
                (SIGNATURE |cAsin| ($ $))
                (SIGNATURE |cAcos| ($ $))
                (SIGNATURE |cAtan| ($ $))
                (SIGNATURE |cAcot| ($ $))
                (SIGNATURE |cAsec| ($ $))
                (SIGNATURE |cAcsc| ($ $))
                (SIGNATURE |cSinh| ($ $))
                (SIGNATURE |cCosh| ($ $))
                (SIGNATURE |cTanh| ($ $))
                (SIGNATURE |cCoth| ($ $))
                (SIGNATURE |cSech| ($ $))
                (SIGNATURE |cCsch| ($ $))
                (SIGNATURE |cAsinh| ($ $))
                (SIGNATURE |cAcosh| ($ $))
                (SIGNATURE |cAtanh| ($ $))
                (SIGNATURE |cAcoth| ($ $))
                (SIGNATURE |cAsech| ($ $))
                (SIGNATURE |cAcsch| ($ $)))
               |noBranch|)))
  (|Ring|))
 (T |InnerSparseUnivariatePowerSeries|))
(|Join| (|UnivariatePowerSeriesCategory| |#1| (|Integer|))
        (CATEGORY |domain|
         (SIGNATURE |makeSeries|
          ($ (|Reference| (|OrderedCompletion| (|Integer|)))
           (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))))
         (SIGNATURE |getRef|
          ((|Reference| (|OrderedCompletion| (|Integer|))) $))
         (SIGNATURE |getStream|
          ((|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))) $))
         (SIGNATURE |series|
          ($ (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))))
         (SIGNATURE |monomial?| ((|Boolean|) $))
         (SIGNATURE |multiplyCoefficients| ($ (|Mapping| |#1| (|Integer|)) $))
         (SIGNATURE |iExquo| ((|Union| $ "failed") $ $ (|Boolean|)))
         (SIGNATURE |taylorQuoByVar| ($ $)) (SIGNATURE |iCompose| ($ $ $))
         (SIGNATURE |seriesToOutputForm|
          ((|OutputForm|)
           (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))
           (|Reference| (|OrderedCompletion| (|Integer|))) (|Symbol|) |#1|
           (|Fraction| (|Integer|))))
         (IF (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))
             (PROGN
              (SIGNATURE |integrate| ($ $))
              (SIGNATURE |cPower| ($ $ |#1|))
              (SIGNATURE |cRationalPower| ($ $ (|Fraction| (|Integer|))))
              (SIGNATURE |cExp| ($ $))
              (SIGNATURE |cLog| ($ $))
              (SIGNATURE |cSin| ($ $))
              (SIGNATURE |cCos| ($ $))
              (SIGNATURE |cTan| ($ $))
              (SIGNATURE |cCot| ($ $))
              (SIGNATURE |cSec| ($ $))
              (SIGNATURE |cCsc| ($ $))
              (SIGNATURE |cAsin| ($ $))
              (SIGNATURE |cAcos| ($ $))
              (SIGNATURE |cAtan| ($ $))
              (SIGNATURE |cAcot| ($ $))
              (SIGNATURE |cAsec| ($ $))
              (SIGNATURE |cAcsc| ($ $))
              (SIGNATURE |cSinh| ($ $))
              (SIGNATURE |cCosh| ($ $))
              (SIGNATURE |cTanh| ($ $))
              (SIGNATURE |cCoth| ($ $))
              (SIGNATURE |cSech| ($ $))
              (SIGNATURE |cCsch| ($ $))
              (SIGNATURE |cAsinh| ($ $))
              (SIGNATURE |cAcosh| ($ $))
              (SIGNATURE |cAtanh| ($ $))
              (SIGNATURE |cAcoth| ($ $))
              (SIGNATURE |cAsech| ($ $))
              (SIGNATURE |cAcsch| ($ $)))
             |noBranch|)))
"/git/fricas/src/algebra/ISUPS.spad"
((|monomial?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 (|makeSeries| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *4))))
 (|getRef| (*1 *2 *1)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 (|getStream| (*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 (|series| (*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 (|multiplyCoefficients| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 (|iExquo| (*1 *1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
   (|ofCategory| *3 (|Ring|))))
 (|taylorQuoByVar| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 (|iCompose| (*1 *1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 (|seriesToOutputForm| (*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *6))))
       (|isDomain| *4 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *6))))
 (|integrate| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cPower| (*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cRationalPower| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Algebra| *2)) (|ofCategory| *3 (|Ring|))))
 (|cExp| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cLog| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cSin| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cCos| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cTan| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cCot| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cSec| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cCsc| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAsin| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAcos| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAtan| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAcot| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAsec| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAcsc| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cSinh| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cCosh| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cTanh| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cCoth| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cSech| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cCsch| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAsinh| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAcosh| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAtanh| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAcoth| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAsech| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 (|cAcsch| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|)))))
((~= (((|Boolean|) $ $) NIL))
 (|zero?|
  (((|Boolean|) $) 65
   (OR (|has| $ (|AbelianMonoid|))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|CommutativeRing|)))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|IntegralDomain|)))
       (|has| |#1| (|AbelianMonoid|))
       (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (|variable| (((|Symbol|) $) NIL))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) NIL
   (AND (|has| $ (|VariablesCommuteWithCoefficients|))
        (|has| |#1| (|IntegralDomain|)))))
 (|unitCanonical|
  (($ $) NIL
   (AND (|has| $ (|VariablesCommuteWithCoefficients|))
        (|has| |#1| (|IntegralDomain|)))))
 (|unit?|
  (((|Boolean|) $) NIL
   (AND (|has| $ (|VariablesCommuteWithCoefficients|))
        (|has| |#1| (|IntegralDomain|)))))
 (|truncate| (($ $ (|Integer|)) 55) (($ $ (|Integer|) (|Integer|)) 56))
 (|terms| (((|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))) $) 62))
 (|taylorQuoByVar| (($ $) 101))
 (|subtractIfCan|
  (((|Union| $ "failed") $ $) NIL
   (OR (|has| $ (|AbelianGroup|))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|CommutativeRing|)))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|IntegralDomain|)))
       (|has| |#1| (|CancellationAbelianMonoid|))
       (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (|seriesToOutputForm|
  (((|OutputForm|) (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))
    (|Reference| (|OrderedCompletion| (|Integer|))) (|Symbol|) |#1|
    (|Fraction| (|Integer|)))
   210))
 (|series| (($ (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))) 36))
 (|sample|
  (($) NIL
   (OR (|has| $ (|AbelianMonoid|))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|CommutativeRing|)))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|IntegralDomain|)))
       (|has| |#1| (|AbelianMonoid|))
       (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))
   CONST))
 (|rightRecip|
  (((|Union| $ #1="failed") $) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))))
 (|reductum| (($ $) NIL))
 (|recip|
  (((|Union| $ #1#) $) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))))
 (|pole?| (((|Boolean|) $) NIL))
 (|order| (((|Integer|) $) 60) (((|Integer|) $ (|Integer|)) 61))
 (|opposite?|
  (((|Boolean|) $ $) NIL
   (OR (|has| $ (|AbelianMonoid|))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|CommutativeRing|)))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|IntegralDomain|)))
       (|has| |#1| (|AbelianMonoid|))
       (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (|one?|
  (((|Boolean|) $) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))))
 (|multiplyExponents| (($ $ (|PositiveInteger|)) 78))
 (|multiplyCoefficients| (($ (|Mapping| |#1| (|Integer|)) $) 75))
 (|monomial?| (((|Boolean|) $) 25)) (|monomial| (($ |#1| (|Integer|)) 22))
 (|map| (($ (|Mapping| |#1| |#1|) $) 69))
 (|makeSeries|
  (($ (|Reference| (|OrderedCompletion| (|Integer|)))
    (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))))
   11))
 (|leftRecip|
  (((|Union| $ #1#) $) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))))
 (|leadingMonomial| (($ $) NIL)) (|leadingCoefficient| ((|#1| $) NIL))
 (|latex| (((|String|) $) NIL))
 (|integrate| (($ $) 112 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|iExquo| (((|Union| $ "failed") $ $ (|Boolean|)) 100))
 (|iCompose| (($ $ $) 108))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|getStream|
  (((|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))) $) 13))
 (|getRef| (((|Reference| (|OrderedCompletion| (|Integer|))) $) 12))
 (|extend| (($ $ (|Integer|)) 47))
 (|exquo|
  (((|Union| $ "failed") $ $) NIL
   (AND (|has| $ (|VariablesCommuteWithCoefficients|))
        (|has| |#1| (|IntegralDomain|)))))
 (|eval|
  (((|Stream| |#1|) $ |#1|) NIL
   (|has| |#1| (SIGNATURE ^ (|#1| |#1| (|Integer|))))))
 (|elt| ((|#1| $ (|Integer|)) 58)
  (($ $ $) NIL (|has| (|Integer|) (|SemiGroup|))))
 (|differentiate|
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|List| (|Symbol|))) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|Symbol|)) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|NonNegativeInteger|)) NIL
   (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))
  (($ $) 72 (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
 (|degree| (((|Integer|) $) NIL)) (|complete| (($ $) 48))
 (|commutator|
  (($ $ $) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (|Ring|)) (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (|coerce| (((|OutputForm|) $) NIL)
           (($ (|Fraction| (|Integer|))) NIL
            (|has| |#1| (|Algebra| (|Fraction| (|Integer|)))))
           (($ |#1|) 27
            (AND (|has| $ (|VariablesCommuteWithCoefficients|))
                 (|has| |#1| (|CommutativeRing|))))
           (($ $) NIL
            (OR
             (AND (|has| $ (|VariablesCommuteWithCoefficients|))
                  (|has| |#1| (|CommutativeRing|)))
             (AND (|has| $ (|VariablesCommuteWithCoefficients|))
                  (|has| |#1| (|IntegralDomain|)))))
           (($ (|Integer|)) 28
            (OR
             (AND (|has| $ (|VariablesCommuteWithCoefficients|))
                  (|has| |#1| (|CommutativeRing|)))
             (AND (|has| $ (|VariablesCommuteWithCoefficients|))
                  (|has| |#1| (|IntegralDomain|)))
             (|has| |#1| (|Ring|))
             (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (|coefficient| ((|#1| $ (|Integer|)) 57))
 (|charthRoot|
  (((|Union| $ "failed") $) NIL (|has| |#1| (|CharacteristicNonZero|))))
 (|characteristic|
  (((|NonNegativeInteger|)) 39
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (|Ring|)) (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (|center| ((|#1| $) NIL))
 (|cTanh| (($ $) 173 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cTan| (($ $) 150 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cSinh| (($ $) 170 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cSin| (($ $) 147 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cSech| (($ $) 175 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cSec| (($ $) 153 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cRationalPower|
  (($ $ (|Fraction| (|Integer|))) 140
   (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cPower| (($ $ |#1|) 119 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cLog| (($ $) 144 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cExp| (($ $) 142 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cCsch| (($ $) 176 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cCsc| (($ $) 154 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cCoth| (($ $) 174 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cCot| (($ $) 152 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cCosh| (($ $) 171 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cCos| (($ $) 148 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAtanh| (($ $) 181 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAtan| (($ $) 161 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAsinh| (($ $) 178 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAsin| (($ $) 157 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAsech| (($ $) 185 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAsec| (($ $) 165 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAcsch| (($ $) 187 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAcsc| (($ $) 167 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAcoth| (($ $) 183 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAcot| (($ $) 163 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAcosh| (($ $) 180 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|cAcos| (($ $) 159 (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
 (|associator|
  (($ $ $ $) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (|Ring|)) (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (|associates?|
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|VariablesCommuteWithCoefficients|))
        (|has| |#1| (|IntegralDomain|)))))
 (|approximate|
  ((|#1| $ (|Integer|)) NIL
   (AND (|has| |#1| (SIGNATURE ^ (|#1| |#1| (|Integer|))))
        (|has| |#1| (SIGNATURE |coerce| (|#1| (|Symbol|)))))))
 (|antiCommutator| (($ $ $) NIL))
 (|annihilate?|
  (((|Boolean|) $ $) NIL
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (|Ring|)) (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (^ (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) 106
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))))
 (|Zero|
  (($) 29
   (OR (|has| $ (|AbelianMonoid|))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|CommutativeRing|)))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|IntegralDomain|)))
       (|has| |#1| (|AbelianMonoid|))
       (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))
   CONST))
 (|One|
  (($) 40
   (OR
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|CommutativeRing|)))
    (AND (|has| $ (|VariablesCommuteWithCoefficients|))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))
    (|has| |#1| (|SemiRing|)))
   CONST))
 (D
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|List| (|Symbol|))) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|Symbol|)) NIL
   (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
        (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ (|NonNegativeInteger|)) NIL
   (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))
  (($ $) NIL (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
 (= (((|Boolean|) $ $) 67)) (/ (($ $ |#1|) NIL (|has| |#1| (|Field|))))
 (-
  (($ $) 86
   (OR (|has| $ (|AbelianGroup|))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|CommutativeRing|)))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|IntegralDomain|)))
       (|has| |#1| (|AbelianGroup|))
       (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
  (($ $ $) 66
   (OR (|has| $ (|AbelianGroup|))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|CommutativeRing|)))
       (AND (|has| $ (|VariablesCommuteWithCoefficients|))
            (|has| |#1| (|IntegralDomain|)))
       (|has| |#1| (|AbelianGroup|))
       (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|))))))
 (+ (($ $ $) 83))
 (* (($ (|PositiveInteger|) $) 91) (($ $ $) 97) (($ $ |#1|) NIL)
    (($ |#1| $) 115)
    (($ (|Fraction| (|Integer|)) $) NIL
     (|has| |#1| (|Algebra| (|Fraction| (|Integer|)))))
    (($ $ (|Fraction| (|Integer|))) NIL
     (|has| |#1| (|Algebra| (|Fraction| (|Integer|)))))
    (($ (|NonNegativeInteger|) $) 89
     (OR (|has| $ (|AbelianMonoid|))
         (AND (|has| $ (|VariablesCommuteWithCoefficients|))
              (|has| |#1| (|CommutativeRing|)))
         (AND (|has| $ (|VariablesCommuteWithCoefficients|))
              (|has| |#1| (|IntegralDomain|)))
         (|has| |#1| (|AbelianMonoid|))
         (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))
    (($ (|Integer|) $) 87
     (OR (|has| $ (|AbelianGroup|))
         (AND (|has| $ (|VariablesCommuteWithCoefficients|))
              (|has| |#1| (|CommutativeRing|)))
         (AND (|has| $ (|VariablesCommuteWithCoefficients|))
              (|has| |#1| (|IntegralDomain|)))
         (|has| |#1| (|AbelianGroup|))
         (|has| |#1| (SIGNATURE * (|#1| (|Integer|) |#1|)))))))
((|HasCategory| |#1| (LIST '|Algebra| (LIST '|Fraction| '(|Integer|))))
 (|HasCategory| |#1| '(|IntegralDomain|))
 (|HasCategory| |#1| '(|CharacteristicNonZero|))
 (|HasCategory| |#1| '(|CharacteristicZero|))
 (|HasCategory| |#1| '(|CommutativeRing|))
 (OR (|HasCategory| |#1| '(|CommutativeRing|))
     (|HasCategory| |#1| '(|IntegralDomain|)))
 (|HasSignature| |#1|
                 (LIST '*
                       (LIST (|devaluate| |#1|) '(|Integer|)
                             (|devaluate| |#1|))))
 (AND (|HasCategory| |#1| (LIST '|PartialDifferentialRing| '(|Symbol|)))
      (|HasSignature| |#1|
                      (LIST '*
                            (LIST (|devaluate| |#1|) '(|Integer|)
                                  (|devaluate| |#1|)))))
 (|HasCategory| (|Integer|) '(|SemiGroup|)) (|HasCategory| |#1| '(|Field|))
 (|HasSignature| |#1|
                 (LIST '^
                       (LIST (|devaluate| |#1|) (|devaluate| |#1|)
                             '(|Integer|))))
 (AND
  (|HasSignature| |#1|
                  (LIST '^
                        (LIST (|devaluate| |#1|) (|devaluate| |#1|)
                              '(|Integer|))))
  (|HasSignature| |#1| (LIST '|coerce| (LIST (|devaluate| |#1|) '(|Symbol|)))))
 (|HasCategory| |#1| '(|SemiRing|))
 (OR (|HasCategory| |#1| '(|SemiRing|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|)))))
 (|HasCategory| |#1| '(|Ring|))
 (OR (|HasCategory| |#1| '(|Ring|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|)))))
 (OR (|HasCategory| |#1| (LIST '|Algebra| (LIST '|Fraction| '(|Integer|))))
     (|HasCategory| |#1| '(|CharacteristicNonZero|))
     (|HasCategory| |#1| '(|CharacteristicZero|))
     (|HasCategory| |#1| '(|CommutativeRing|))
     (|HasCategory| |#1| '(|IntegralDomain|)) (|HasCategory| |#1| '(|Ring|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|)))))
 (|HasCategory| |#1| '(|AbelianMonoid|))
 (|HasCategory| |#1| '(|CancellationAbelianMonoid|))
 (|HasCategory| |#1| '(|AbelianGroup|))
 (OR
  (AND (|HasCategory| |#1| (LIST '|Algebra| (LIST '|Fraction| '(|Integer|))))
       (|HasCategory| (|Fraction| (|Integer|)) '(|AbelianMonoid|)))
  (|HasCategory| |#1| '(|AbelianGroup|))
  (|HasCategory| |#1| '(|AbelianMonoid|))
  (|HasCategory| |#1| '(|CancellationAbelianMonoid|))
  (|HasSignature| |#1|
                  (LIST '*
                        (LIST (|devaluate| |#1|) '(|Integer|)
                              (|devaluate| |#1|)))))
 (OR (|HasCategory| |#1| '(|AbelianGroup|))
     (|HasCategory| |#1| '(|CancellationAbelianMonoid|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|)))))
 (OR (|HasCategory| |#1| '(|AbelianGroup|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|)))))
 (AND (|HasCategory| |#1| '(|IntegralDomain|))
      (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
 (AND (|HasCategory| |#1| '(|CommutativeRing|))
      (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
 (OR
  (AND (|HasCategory| |#1| '(|CommutativeRing|))
       (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
  (AND (|HasCategory| |#1| '(|IntegralDomain|))
       (|HasCategory| $ '(|VariablesCommuteWithCoefficients|))))
 (OR
  (AND (|HasCategory| |#1| '(|CommutativeRing|))
       (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
  (AND (|HasCategory| |#1| '(|IntegralDomain|))
       (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
  (|HasCategory| |#1| '(|SemiRing|))
  (|HasSignature| |#1|
                  (LIST '*
                        (LIST (|devaluate| |#1|) '(|Integer|)
                              (|devaluate| |#1|)))))
 (OR
  (AND (|HasCategory| |#1| '(|CommutativeRing|))
       (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
  (AND (|HasCategory| |#1| '(|IntegralDomain|))
       (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
  (|HasCategory| |#1| '(|Ring|))
  (|HasSignature| |#1|
                  (LIST '*
                        (LIST (|devaluate| |#1|) '(|Integer|)
                              (|devaluate| |#1|)))))
 (OR (|HasCategory| |#1| '(|AbelianMonoid|))
     (AND (|HasCategory| |#1| '(|CommutativeRing|))
          (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
     (AND (|HasCategory| |#1| '(|IntegralDomain|))
          (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
     (|HasCategory| $ '(|AbelianMonoid|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|)))))
 (OR (|HasCategory| |#1| '(|CancellationAbelianMonoid|))
     (AND (|HasCategory| |#1| '(|CommutativeRing|))
          (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
     (AND (|HasCategory| |#1| '(|IntegralDomain|))
          (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
     (|HasCategory| $ '(|AbelianGroup|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|)))))
 (OR (|HasCategory| |#1| '(|AbelianGroup|))
     (AND (|HasCategory| |#1| '(|CommutativeRing|))
          (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
     (AND (|HasCategory| |#1| '(|IntegralDomain|))
          (|HasCategory| $ '(|VariablesCommuteWithCoefficients|)))
     (|HasCategory| $ '(|AbelianGroup|))
     (|HasSignature| |#1|
                     (LIST '*
                           (LIST (|devaluate| |#1|) '(|Integer|)
                                 (|devaluate| |#1|))))))
ISUPS
(((|UnivariatePowerSeriesCategory| |#1| (|Integer|)) . T))
(((|AbelianGroup|) OR (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|AbelianGroup|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|AbelianMonoid|) OR (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|AbelianMonoid|))
  (AND (|has| |t#1| (|AbelianGroup|)) (|has| |t#1| (|SemiRing|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|AbelianMonoidRing| |t#1| |t#2|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) |has| |t#1|
  (|Algebra| (|Fraction| (|Integer|))))
 ((|Algebra| $) OR
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|Algebra| |t#1|) AND (|has| $ (|VariablesCommuteWithCoefficients|))
  (|has| |t#1| (|CommutativeRing|)))
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) OR
  (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|CancellationAbelianMonoid|))
  (AND (|has| |t#1| (|AbelianGroup|)) (|has| |t#1| (|SemiRing|)))
  (AND (|has| |t#1| (|AbelianGroup|)) (|has| |t#1| (|Ring|)))
  (AND (|has| |t#1| (|AbelianGroup|)) (|has| |t#1| (|CharacteristicZero|)))
  (AND (|has| |t#1| (|AbelianGroup|)) (|has| |t#1| (|CharacteristicNonZero|)))
  (AND (|has| |t#1| (|AbelianGroup|))
       (|has| |t#1| (|Algebra| (|Fraction| (|Integer|)))))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|CharacteristicNonZero|) |has| |t#1| (|CharacteristicNonZero|))
 ((|CharacteristicZero|) |has| |t#1| (|CharacteristicZero|))
 ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CommutativeRing|) OR
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|CommutativeStar|) OR
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|DifferentialRing|) |has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
 ((|Eltable| $ $) |has| |t#2| (|SemiGroup|))
 ((|EntireRing|) AND (|has| $ (|VariablesCommuteWithCoefficients|))
  (|has| |t#1| (|IntegralDomain|)))
 ((|IntegralDomain|) AND (|has| $ (|VariablesCommuteWithCoefficients|))
  (|has| |t#1| (|IntegralDomain|)))
 ((|LeftModule| |t#1|) . T) ((|Magma|) . T)
 ((|MagmaWithUnit|) OR (|has| |t#1| (|SemiRing|))
  (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|Module| |t#1|) OR (|has| |t#1| (|Algebra| (|Fraction| (|Integer|))))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|Monoid|) OR (|has| |t#1| (|SemiRing|))
  (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|NonAssociativeRing|) OR (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|Ring|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|NonAssociativeRng|) OR (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|Ring|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|NonAssociativeSemiRing|) OR (|has| |t#1| (|SemiRing|))
  (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|NonAssociativeSemiRng|) . T)
 ((|PartialDifferentialRing| (|Symbol|)) AND
  (|has| |t#1| (|PartialDifferentialRing| (|Symbol|)))
  (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|))))
 ((|PowerSeriesCategory| |t#1| |t#2| (|SingletonAsOrderedSet|)) . T)
 ((|RightModule| |t#2|) . T)
 ((|Ring|) OR (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|Ring|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|Rng|) OR (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|Ring|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|SemiGroup|) . T)
 ((|SemiRing|) OR (|has| |t#1| (|SemiRing|))
  (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|TwoSidedRecip|) OR
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|UnivariatePowerSeriesCategory| |#1| (|Integer|)) . T)
 ((|VariablesCommuteWithCoefficients|) . T)
 ((|noZeroDivisors|) AND (|has| $ (|VariablesCommuteWithCoefficients|))
  (|has| |t#1| (|IntegralDomain|)))
 ((|unitsKnown|) OR (|has| |t#1| (SIGNATURE * (|t#1| |t#2| |t#1|)))
  (|has| |t#1| (|Ring|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|)))))
((|constructor|
  (NIL
   "InnerSparseUnivariatePowerSeries is an internal domain \\indented{2}{used for creating sparse Taylor and Laurent series.}"))
 (|cAcsch|
  (($ $)
   "\\spad{cAcsch(f)} computes the inverse hyperbolic cosecant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAsech|
  (($ $)
   "\\spad{cAsech(f)} computes the inverse hyperbolic secant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAcoth|
  (($ $)
   "\\spad{cAcoth(f)} computes the inverse hyperbolic cotangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAtanh|
  (($ $)
   "\\spad{cAtanh(f)} computes the inverse hyperbolic tangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAcosh|
  (($ $)
   "\\spad{cAcosh(f)} computes the inverse hyperbolic cosine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAsinh|
  (($ $)
   "\\spad{cAsinh(f)} computes the inverse hyperbolic sine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cCsch|
  (($ $)
   "\\spad{cCsch(f)} computes the hyperbolic cosecant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cSech|
  (($ $)
   "\\spad{cSech(f)} computes the hyperbolic secant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cCoth|
  (($ $)
   "\\spad{cCoth(f)} computes the hyperbolic cotangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cTanh|
  (($ $)
   "\\spad{cTanh(f)} computes the hyperbolic tangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cCosh|
  (($ $)
   "\\spad{cCosh(f)} computes the hyperbolic cosine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cSinh|
  (($ $)
   "\\spad{cSinh(f)} computes the hyperbolic sine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAcsc|
  (($ $)
   "\\spad{cAcsc(f)} computes the arccosecant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAsec|
  (($ $)
   "\\spad{cAsec(f)} computes the arcsecant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAcot|
  (($ $)
   "\\spad{cAcot(f)} computes the arccotangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAtan|
  (($ $)
   "\\spad{cAtan(f)} computes the arctangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAcos|
  (($ $)
   "\\spad{cAcos(f)} computes the arccosine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cAsin|
  (($ $)
   "\\spad{cAsin(f)} computes the arcsine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cCsc|
  (($ $)
   "\\spad{cCsc(f)} computes the cosecant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cSec|
  (($ $)
   "\\spad{cSec(f)} computes the secant of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cCot|
  (($ $)
   "\\spad{cCot(f)} computes the cotangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cTan|
  (($ $)
   "\\spad{cTan(f)} computes the tangent of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cCos|
  (($ $)
   "\\spad{cCos(f)} computes the cosine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cSin|
  (($ $)
   "\\spad{cSin(f)} computes the sine of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cLog|
  (($ $)
   "\\spad{cLog(f)} computes the logarithm of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cExp|
  (($ $)
   "\\spad{cExp(f)} computes the exponential of the power series \\spad{f}. For use when the coefficient ring is commutative."))
 (|cRationalPower|
  (($ $ (|Fraction| (|Integer|)))
   "\\spad{cRationalPower(f,{} r)} computes \\spad{f^r}. For use when the coefficient ring is commutative."))
 (|cPower|
  (($ $ |#1|)
   "\\spad{cPower(f,{} r)} computes \\spad{f^r},{} where \\spad{f} has constant coefficient 1. For use when the coefficient ring is commutative."))
 (|integrate|
  (($ $)
   "\\spad{integrate(f(x))} returns an anti-derivative of the power series \\spad{f(x)} with constant coefficient 0. Warning: function does not check for a term of degree \\spad{-1}."))
 (|seriesToOutputForm|
  (((|OutputForm|) (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|)))
    (|Reference| (|OrderedCompletion| (|Integer|))) (|Symbol|) |#1|
    (|Fraction| (|Integer|)))
   "\\spad{seriesToOutputForm(st,{} refer,{} var,{} cen,{} r)} prints the series \\spad{f((var - cen)^r)}."))
 (|iCompose|
  (($ $ $)
   "\\spad{iCompose(f,{} g)} returns \\spad{f(g(x))}. This is an internal function which should only be called for Taylor series \\spad{f(x)} and \\spad{g(x)} such that the constant coefficient of \\spad{g(x)} is zero."))
 (|taylorQuoByVar|
  (($ $)
   "\\spad{taylorQuoByVar(a0 + a1 x + a2 x^2 + ...)} returns \\spad{a1 + a2 x + a3 x^2 + ...}"))
 (|iExquo|
  (((|Union| $ "failed") $ $ (|Boolean|))
   "\\spad{iExquo(f,{} g,{} taylor?)} is the quotient of the power series \\spad{f} and \\spad{g}. If \\spad{taylor?} is \\spad{true},{} then we must have \\spad{order(f) >= order(g)}."))
 (|multiplyCoefficients|
  (($ (|Mapping| |#1| (|Integer|)) $)
   "\\spad{multiplyCoefficients(fn,{} f)} returns the series \\spad{sum(fn(n) * an * x^n,{} n = n0..)},{} where \\spad{f} is the series \\spad{sum(an * x^n,{} n = n0..)}."))
 (|monomial?|
  (((|Boolean|) $)
   "\\spad{monomial?(f)} tests if \\spad{f} is a single monomial."))
 (|series|
  (($ (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))))
   "\\spad{series(st)} creates a series from a stream of non-zero terms,{} where a term is an exponent-coefficient pair. The terms in the stream should be ordered by increasing order of exponents."))
 (|getStream|
  (((|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))) $)
   "\\spad{getStream(f)} returns the stream of terms representing the series \\spad{f}."))
 (|getRef|
  (((|Reference| (|OrderedCompletion| (|Integer|))) $)
   "\\spad{getRef(f)} returns a reference containing the order to which the terms of \\spad{f} have been computed."))
 (|makeSeries|
  (($ (|Reference| (|OrderedCompletion| (|Integer|)))
    (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| |#1|))))
   "\\spad{makeSeries(refer,{} str)} creates a power series from the reference \\spad{refer} and the stream \\spad{str}.")))
(("documentation" 0 40556) ("ancestors" 0 34044) ("parents" 0 33985)
 ("abbreviation" 0 33979) ("predicates" 0 27844) ("superDomain" 0 NIL)
 ("operationAlist" 0 12452) ("modemaps" 0 5099) ("sourceFile" 0 5062)
 ("constructorCategory" 0 2674) ("constructorModemap" 0 73)
 ("constructorKind" 0 64) ("constructorForm" 0 20))