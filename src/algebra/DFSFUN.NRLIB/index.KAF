16111               (MAKEPROP '|DoubleFloatSpecialFunctions| 'NILADIC T)
(|DoubleFloatSpecialFunctions|)
|package|
(((|DoubleFloatSpecialFunctions|)
  (CATEGORY |package| (SIGNATURE |Gamma| ((|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |Gamma|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
   (SIGNATURE |Beta| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |Beta|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
     (|Complex| (|DoubleFloat|))))
   (SIGNATURE |logGamma| ((|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |logGamma|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
   (SIGNATURE |digamma| ((|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |digamma|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
   (SIGNATURE |polygamma|
    ((|DoubleFloat|) (|NonNegativeInteger|) (|DoubleFloat|)))
   (SIGNATURE |polygamma|
    ((|Complex| (|DoubleFloat|)) (|NonNegativeInteger|)
     (|Complex| (|DoubleFloat|))))
   (SIGNATURE |besselJ| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |besselJ|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
     (|Complex| (|DoubleFloat|))))
   (SIGNATURE |besselY| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |besselY|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
     (|Complex| (|DoubleFloat|))))
   (SIGNATURE |besselI| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |besselI|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
     (|Complex| (|DoubleFloat|))))
   (SIGNATURE |besselK| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |besselK|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
     (|Complex| (|DoubleFloat|))))
   (SIGNATURE |airyAi|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
   (SIGNATURE |airyAi| ((|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |airyBi| ((|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |airyBi|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
   (SIGNATURE |hypergeometric0F1|
    ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (SIGNATURE |hypergeometric0F1|
    ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
     (|Complex| (|DoubleFloat|))))))
 (T |DoubleFloatSpecialFunctions|))
(CATEGORY |package| (SIGNATURE |Gamma| ((|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |Gamma| ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
 (SIGNATURE |Beta| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |Beta|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
   (|Complex| (|DoubleFloat|))))
 (SIGNATURE |logGamma| ((|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |logGamma|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
 (SIGNATURE |digamma| ((|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |digamma|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
 (SIGNATURE |polygamma|
  ((|DoubleFloat|) (|NonNegativeInteger|) (|DoubleFloat|)))
 (SIGNATURE |polygamma|
  ((|Complex| (|DoubleFloat|)) (|NonNegativeInteger|)
   (|Complex| (|DoubleFloat|))))
 (SIGNATURE |besselJ| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |besselJ|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
   (|Complex| (|DoubleFloat|))))
 (SIGNATURE |besselY| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |besselY|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
   (|Complex| (|DoubleFloat|))))
 (SIGNATURE |besselI| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |besselI|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
   (|Complex| (|DoubleFloat|))))
 (SIGNATURE |besselK| ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |besselK|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
   (|Complex| (|DoubleFloat|))))
 (SIGNATURE |airyAi| ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
 (SIGNATURE |airyAi| ((|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |airyBi| ((|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |airyBi| ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))))
 (SIGNATURE |hypergeometric0F1|
  ((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
 (SIGNATURE |hypergeometric0F1|
  ((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
   (|Complex| (|DoubleFloat|)))))
"/git/fricas/src/algebra/DFSFUN.spad"
((|hypergeometric0F1| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|hypergeometric0F1| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|airyBi| (*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|airyBi| (*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|airyAi| (*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|airyAi| (*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselK| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselK| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselI| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselI| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselY| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselY| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselJ| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|besselJ| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|polygamma| (*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|polygamma| (*1 *2 *3 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|digamma| (*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|digamma| (*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|logGamma| (*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|logGamma| (*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|Beta| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|Beta| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|Gamma| (*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 (|Gamma| (*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))))
((|polygamma|
  (((|Complex| (|DoubleFloat|)) (|NonNegativeInteger|)
    (|Complex| (|DoubleFloat|)))
   11)
  (((|DoubleFloat|) (|NonNegativeInteger|) (|DoubleFloat|)) 12))
 (|logGamma| (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))) 13)
  (((|DoubleFloat|) (|DoubleFloat|)) 14))
 (|hypergeometric0F1|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   19)
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) 22))
 (|digamma| (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))) 25)
  (((|DoubleFloat|) (|DoubleFloat|)) 24))
 (|besselY|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   43)
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) 35))
 (|besselK|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   48)
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) 45))
 (|besselJ|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   15)
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) 16))
 (|besselI|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   17)
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) 18))
 (|airyBi| (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))) 60)
  (((|DoubleFloat|) (|DoubleFloat|)) 59))
 (|airyAi| (((|DoubleFloat|) (|DoubleFloat|)) 54)
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))) 58))
 (|Gamma| (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))) 7)
  (((|DoubleFloat|) (|DoubleFloat|)) 9))
 (|Beta|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   30)
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) 26)))
DFSFUN
((|constructor|
  (NIL
   "This package provides special functions for double precision real and complex floating point."))
 (|hypergeometric0F1|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   "\\spad{hypergeometric0F1(c,{} z)} is the hypergeometric function \\spad{0F1(; c; z)}.")
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))
   "\\spad{hypergeometric0F1(c,{} z)} is the hypergeometric function \\spad{0F1(; c; z)}."))
 (|airyBi|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|)))
   "\\spad{airyBi(x)} is the Airy function \\spad{\\spad{Bi}(x)}. This function satisfies the differential equation: \\indented{2}{\\spad{\\spad{Bi}''(x) - x * \\spad{Bi}(x) = 0}.}")
  (((|DoubleFloat|) (|DoubleFloat|))
   "\\spad{airyBi(x)} is the Airy function \\spad{\\spad{Bi}(x)}. This function satisfies the differential equation: \\indented{2}{\\spad{\\spad{Bi}''(x) - x * \\spad{Bi}(x) = 0}.}"))
 (|airyAi|
  (((|DoubleFloat|) (|DoubleFloat|))
   "\\spad{airyAi(x)} is the Airy function \\spad{\\spad{Ai}(x)}. This function satisfies the differential equation: \\indented{2}{\\spad{\\spad{Ai}''(x) - x * \\spad{Ai}(x) = 0}.}")
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|)))
   "\\spad{airyAi(x)} is the Airy function \\spad{\\spad{Ai}(x)}. This function satisfies the differential equation: \\indented{2}{\\spad{\\spad{Ai}''(x) - x * \\spad{Ai}(x) = 0}.}"))
 (|besselK|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   "\\spad{besselK(v,{} x)} is the modified Bessel function of the second kind,{} \\spad{K(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) - (x^2+v^2)w(x) = 0}.} Note: The default implementation uses the relation \\indented{2}{\\spad{K(v,{} x) = \\%pi/2*(I(-v,{} x) - I(v,{} x))/sin(v*\\%\\spad{pi})}} so is not valid for integer values of \\spad{v}.")
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))
   "\\spad{besselK(v,{} x)} is the modified Bessel function of the second kind,{} \\spad{K(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) - (x^2+v^2)w(x) = 0}.} Note: The default implementation uses the relation \\indented{2}{\\spad{K(v,{} x) = \\%pi/2*(I(-v,{} x) - I(v,{} x))/sin(v*\\%\\spad{pi})}.} so is not valid for integer values of \\spad{v}."))
 (|besselI|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   "\\spad{besselI(v,{} x)} is the modified Bessel function of the first kind,{} \\spad{I(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) - (x^2+v^2)w(x) = 0}.}")
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))
   "\\spad{besselI(v,{} x)} is the modified Bessel function of the first kind,{} \\spad{I(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) - (x^2+v^2)w(x) = 0}.}"))
 (|besselY|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   "\\spad{besselY(v,{} x)} is the Bessel function of the second kind,{} \\spad{Y(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) + (x^2-v^2)w(x) = 0}.} Note: The default implementation uses the relation \\indented{2}{\\spad{Y(v,{} x) = (J(v,{} x) cos(v*\\%\\spad{pi}) - J(-v,{} x))/sin(v*\\%\\spad{pi})}} so is not valid for integer values of \\spad{v}.")
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))
   "\\spad{besselY(v,{} x)} is the Bessel function of the second kind,{} \\spad{Y(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) + (x^2-v^2)w(x) = 0}.} Note: The default implementation uses the relation \\indented{2}{\\spad{Y(v,{} x) = (J(v,{} x) cos(v*\\%\\spad{pi}) - J(-v,{} x))/sin(v*\\%\\spad{pi})}} so is not valid for integer values of \\spad{v}."))
 (|besselJ|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   "\\spad{besselJ(v,{} x)} is the Bessel function of the first kind,{} \\spad{J(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) + (x^2-v^2)w(x) = 0}.}")
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))
   "\\spad{besselJ(v,{} x)} is the Bessel function of the first kind,{} \\spad{J(v,{} x)}. This function satisfies the differential equation: \\indented{2}{\\spad{x^2 w''(x) + x w'(x) + (x^2-v^2)w(x) = 0}.}"))
 (|polygamma|
  (((|Complex| (|DoubleFloat|)) (|NonNegativeInteger|)
    (|Complex| (|DoubleFloat|)))
   "\\spad{polygamma(n,{} x)} is the \\spad{n}-th derivative of \\spad{digamma(x)}.")
  (((|DoubleFloat|) (|NonNegativeInteger|) (|DoubleFloat|))
   "\\spad{polygamma(n,{} x)} is the \\spad{n}-th derivative of \\spad{digamma(x)}."))
 (|digamma|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|)))
   "\\spad{digamma(x)} is the function,{} \\spad{psi(x)},{} defined by \\indented{2}{\\spad{psi(x) = Gamma'(x)/Gamma(x)}.}")
  (((|DoubleFloat|) (|DoubleFloat|))
   "\\spad{digamma(x)} is the function,{} \\spad{psi(x)},{} defined by \\indented{2}{\\spad{psi(x) = Gamma'(x)/Gamma(x)}.}"))
 (|logGamma|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|)))
   "\\spad{logGamma(x)} is the natural log of \\spad{Gamma(x)}. This can often be computed even if \\spad{Gamma(x)} cannot.")
  (((|DoubleFloat|) (|DoubleFloat|))
   "\\spad{logGamma(x)} is the natural log of \\spad{Gamma(x)}. This can often be computed even if \\spad{Gamma(x)} cannot."))
 (|Beta|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|))
    (|Complex| (|DoubleFloat|)))
   "\\spad{Beta(x,{} y)} is the Euler beta function,{} \\spad{B(x,{} y)},{} defined by \\indented{2}{\\spad{Beta(x,{} y) = integrate(t^(x-1)*(1-t)^(y-1),{} t=0..1)}.} This is related to \\spad{Gamma(x)} by \\indented{2}{\\spad{Beta(x,{} y) = Gamma(x)*Gamma(y) / Gamma(x + y)}.}")
  (((|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))
   "\\spad{Beta(x,{} y)} is the Euler beta function,{} \\spad{B(x,{} y)},{} defined by \\indented{2}{\\spad{Beta(x,{} y) = integrate(t^(x-1)*(1-t)^(y-1),{} t=0..1)}.} This is related to \\spad{Gamma(x)} by \\indented{2}{\\spad{Beta(x,{} y) = Gamma(x)*Gamma(y) / Gamma(x + y)}.}"))
 (|Gamma|
  (((|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|)))
   "\\spad{Gamma(x)} is the Euler gamma function,{} \\spad{Gamma(x)},{} defined by \\indented{2}{\\spad{Gamma(x) = integrate(t^(x-1)*exp(-t),{} t=0..\\%infinity)}.}")
  (((|DoubleFloat|) (|DoubleFloat|))
   "\\spad{Gamma(x)} is the Euler gamma function,{} \\spad{Gamma(x)},{} defined by \\indented{2}{\\spad{Gamma(x) = integrate(t^(x-1)*exp(-t),{} t=0..\\%infinity)}.}")))
(("documentation" 0 9331) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 9324) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 7542) ("modemaps" 0 4402) ("sourceFile" 0 4364)
 ("constructorCategory" 0 2323) ("constructorModemap" 0 115)
 ("constructorKind" 0 105) ("constructorForm" 0 73) ("NILADIC" 0 20))