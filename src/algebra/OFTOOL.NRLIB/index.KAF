6273                (MAKEPROP '|OutputFormTools| 'NILADIC T)
(|OutputFormTools|)
|package|
(((|OutputFormTools|)
  (CATEGORY |package| (SIGNATURE |atom?| ((|Boolean|) (|OutputForm|)))
   (SIGNATURE |integer?| ((|Boolean|) (|OutputForm|)))
   (SIGNATURE |integer| ((|Integer|) (|OutputForm|)))
   (SIGNATURE |symbol?| ((|Boolean|) (|OutputForm|)))
   (SIGNATURE |symbol| ((|Symbol|) (|OutputForm|)))
   (SIGNATURE |string?| ((|Boolean|) (|OutputForm|)))
   (SIGNATURE |string| ((|String|) (|OutputForm|)))
   (SIGNATURE |operator| ((|OutputForm|) (|OutputForm|)))
   (SIGNATURE |arguments| ((|List| (|OutputForm|)) (|OutputForm|)))
   (SIGNATURE |has_op?| ((|Boolean|) (|OutputForm|) (|Symbol|)))
   (SIGNATURE |is_symbol?| ((|Boolean|) (|OutputForm|) (|Symbol|)))
   (SIGNATURE |construct|
    ((|OutputForm|) (|OutputForm|) (|List| (|OutputForm|))))
   (SIGNATURE |precondition| ((|OutputForm|) (|OutputForm|)))))
 (T |OutputFormTools|))
(CATEGORY |package| (SIGNATURE |atom?| ((|Boolean|) (|OutputForm|)))
 (SIGNATURE |integer?| ((|Boolean|) (|OutputForm|)))
 (SIGNATURE |integer| ((|Integer|) (|OutputForm|)))
 (SIGNATURE |symbol?| ((|Boolean|) (|OutputForm|)))
 (SIGNATURE |symbol| ((|Symbol|) (|OutputForm|)))
 (SIGNATURE |string?| ((|Boolean|) (|OutputForm|)))
 (SIGNATURE |string| ((|String|) (|OutputForm|)))
 (SIGNATURE |operator| ((|OutputForm|) (|OutputForm|)))
 (SIGNATURE |arguments| ((|List| (|OutputForm|)) (|OutputForm|)))
 (SIGNATURE |has_op?| ((|Boolean|) (|OutputForm|) (|Symbol|)))
 (SIGNATURE |is_symbol?| ((|Boolean|) (|OutputForm|) (|Symbol|)))
 (SIGNATURE |construct|
  ((|OutputForm|) (|OutputForm|) (|List| (|OutputForm|))))
 (SIGNATURE |precondition| ((|OutputForm|) (|OutputForm|))))
"/git/fricas/src/algebra/OFTOOL.spad"
((|precondition| (*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))
 (|construct| (*1 *2 *2 *3)
              (AND (|isDomain| *3 (|List| (|OutputForm|)))
                   (|isDomain| *2 (|OutputForm|))
                   (|isDomain| *1 (|OutputFormTools|))))
 (|is_symbol?| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))
 (|has_op?| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))
 (|arguments| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|OutputFormTools|))))
 (|operator| (*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))
 (|string| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))
 (|string?| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 (|symbol| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|OutputFormTools|))))
 (|symbol?| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 (|integer| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OutputFormTools|))))
 (|integer?| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 (|atom?| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|)))))
((|symbol?| (((|Boolean|) (|OutputForm|)) 12))
 (|symbol| (((|Symbol|) (|OutputForm|)) 14))
 (|string?| (((|Boolean|) (|OutputForm|)) 15))
 (|string| (((|String|) (|OutputForm|)) 17))
 (|precondition| (((|OutputForm|) (|OutputForm|)) 26))
 (|operator| (((|OutputForm|) (|OutputForm|)) 18))
 (|is_symbol?| (((|Boolean|) (|OutputForm|) (|Symbol|)) 22))
 (|integer?| (((|Boolean|) (|OutputForm|)) 9))
 (|integer| (((|Integer|) (|OutputForm|)) 11))
 (|has_op?| (((|Boolean|) (|OutputForm|) (|Symbol|)) 21))
 (|construct| (((|OutputForm|) (|OutputForm|) (|List| (|OutputForm|))) 23))
 (|atom?| (((|Boolean|) (|OutputForm|)) 8))
 (|arguments| (((|List| (|OutputForm|)) (|OutputForm|)) 20)))
OFTOOL
((|precondition|
  (((|OutputForm|) (|OutputForm|))
   "\\spad{precondition(f)} prepares form for formatting."))
 (|construct|
  (((|OutputForm|) (|OutputForm|) (|List| (|OutputForm|)))
   "\\spad{construct(op,{} la)} creates OutputForm with operator \\spad{op} and arguments la"))
 (|is_symbol?|
  (((|Boolean|) (|OutputForm|) (|Symbol|))
   "\\spad{is_symbol?(f,{} s)} retruns \\spad{true} if form is symbol \\spad{s},{} otherwise returns \\spad{false}"))
 (|has_op?|
  (((|Boolean|) (|OutputForm|) (|Symbol|))
   "\\spad{has_op?(f,{} s)} returns \\spad{true} is \\spad{f} is a composite from with operator \\spad{s},{} otherwise returns \\spad{false}"))
 (|arguments|
  (((|List| (|OutputForm|)) (|OutputForm|))
   "\\spad{arguments(f)} gives arguments of form \\spad{f}. Valid only when atom?(\\spad{f}) is \\spad{false}"))
 (|operator|
  (((|OutputForm|) (|OutputForm|))
   "\\spad{operator(f)} gives operator (head) of form \\spad{f}. Valid only when atom?(\\spad{f}) is \\spad{false}"))
 (|string|
  (((|String|) (|OutputForm|))
   "\\spad{string(f)} gives string corresponding to \\spad{f}. Valid only when string?(\\spad{f}) is \\spad{true}"))
 (|string?|
  (((|Boolean|) (|OutputForm|))
   "\\spad{string?(f)} checks if \\spad{f} is a string,{} this implies atom?(\\spad{f})"))
 (|symbol|
  (((|Symbol|) (|OutputForm|))
   "\\spad{symbol(f)} gives symbol corresponding to \\spad{f}. Valid only when symbol?(\\spad{f}) is \\spad{true}"))
 (|symbol?|
  (((|Boolean|) (|OutputForm|))
   "\\spad{symbol?(f)} checks if \\spad{f} is a symbol,{} this implies atom?(\\spad{f})"))
 (|integer|
  (((|Integer|) (|OutputForm|))
   "\\spad{integer(f)} gives integer corresponding to \\spad{f}. Valid only when integer?(\\spad{f}) is \\spad{true}"))
 (|integer?|
  (((|Boolean|) (|OutputForm|))
   "\\spad{integer?(f)} checks if \\spad{f} is an integer,{} this implies atom?(\\spad{f})"))
 (|atom?|
  (((|Boolean|) (|OutputForm|))
   "\\spad{atom?(f)} checks if form \\spad{f} is atomic,{} \\spad{false} means composite")))
(("documentation" 0 4253) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 4246) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 3561) ("modemaps" 0 1750) ("sourceFile" 0 1712)
 ("constructorCategory" 0 939) ("constructorModemap" 0 91)
 ("constructorKind" 0 81) ("constructorForm" 0 61) ("NILADIC" 0 20))