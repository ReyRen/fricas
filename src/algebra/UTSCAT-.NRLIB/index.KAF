6828                (|UnivariateTaylorSeriesCategory&| S |Coef|)
|domain|
(((|UnivariateTaylorSeriesCategory&| |#1| |#2|)
  (CATEGORY |domain| (SIGNATURE ^ (|#1| |#1| (|Fraction| (|Integer|))))
   (SIGNATURE |tan| (|#1| |#1|)) (SIGNATURE |sin| (|#1| |#1|))
   (SIGNATURE |sec| (|#1| |#1|)) (SIGNATURE |csc| (|#1| |#1|))
   (SIGNATURE |cot| (|#1| |#1|)) (SIGNATURE |cos| (|#1| |#1|))
   (SIGNATURE |acos| (|#1| |#1|)) (SIGNATURE |acot| (|#1| |#1|))
   (SIGNATURE |acsc| (|#1| |#1|)) (SIGNATURE |asec| (|#1| |#1|))
   (SIGNATURE |asin| (|#1| |#1|)) (SIGNATURE |atan| (|#1| |#1|))
   (SIGNATURE |cosh| (|#1| |#1|)) (SIGNATURE |coth| (|#1| |#1|))
   (SIGNATURE |csch| (|#1| |#1|)) (SIGNATURE |sech| (|#1| |#1|))
   (SIGNATURE |sinh| (|#1| |#1|)) (SIGNATURE |tanh| (|#1| |#1|))
   (SIGNATURE |acosh| (|#1| |#1|)) (SIGNATURE |acoth| (|#1| |#1|))
   (SIGNATURE |acsch| (|#1| |#1|)) (SIGNATURE |asech| (|#1| |#1|))
   (SIGNATURE |asinh| (|#1| |#1|)) (SIGNATURE |atanh| (|#1| |#1|))
   (SIGNATURE |log| (|#1| |#1|)) (SIGNATURE |exp| (|#1| |#1|))
   (SIGNATURE ^ (|#1| |#1| |#1|)) (SIGNATURE ^ (|#1| |#1| |#2|))
   (SIGNATURE |zero?| ((|Boolean|) |#1|))
   (SIGNATURE ^ (|#1| |#1| (|NonNegativeInteger|)))
   (SIGNATURE |coerce| (|#1| (|Integer|))) (SIGNATURE |coerce| (|#1| |#1|))
   (SIGNATURE |coerce| (|#1| |#2|))
   (SIGNATURE |coerce| (|#1| (|Fraction| (|Integer|))))
   (SIGNATURE ^ (|#1| |#1| (|PositiveInteger|)))
   (SIGNATURE |coerce| ((|OutputForm|) |#1|)))
  (|UnivariateTaylorSeriesCategory| |#2|) (|Ring|))
 (T |UnivariateTaylorSeriesCategory&|))
(CATEGORY |domain| (SIGNATURE ^ (|#1| |#1| (|Fraction| (|Integer|))))
 (SIGNATURE |tan| (|#1| |#1|)) (SIGNATURE |sin| (|#1| |#1|))
 (SIGNATURE |sec| (|#1| |#1|)) (SIGNATURE |csc| (|#1| |#1|))
 (SIGNATURE |cot| (|#1| |#1|)) (SIGNATURE |cos| (|#1| |#1|))
 (SIGNATURE |acos| (|#1| |#1|)) (SIGNATURE |acot| (|#1| |#1|))
 (SIGNATURE |acsc| (|#1| |#1|)) (SIGNATURE |asec| (|#1| |#1|))
 (SIGNATURE |asin| (|#1| |#1|)) (SIGNATURE |atan| (|#1| |#1|))
 (SIGNATURE |cosh| (|#1| |#1|)) (SIGNATURE |coth| (|#1| |#1|))
 (SIGNATURE |csch| (|#1| |#1|)) (SIGNATURE |sech| (|#1| |#1|))
 (SIGNATURE |sinh| (|#1| |#1|)) (SIGNATURE |tanh| (|#1| |#1|))
 (SIGNATURE |acosh| (|#1| |#1|)) (SIGNATURE |acoth| (|#1| |#1|))
 (SIGNATURE |acsch| (|#1| |#1|)) (SIGNATURE |asech| (|#1| |#1|))
 (SIGNATURE |asinh| (|#1| |#1|)) (SIGNATURE |atanh| (|#1| |#1|))
 (SIGNATURE |log| (|#1| |#1|)) (SIGNATURE |exp| (|#1| |#1|))
 (SIGNATURE ^ (|#1| |#1| |#1|)) (SIGNATURE ^ (|#1| |#1| |#2|))
 (SIGNATURE |zero?| ((|Boolean|) |#1|))
 (SIGNATURE ^ (|#1| |#1| (|NonNegativeInteger|)))
 (SIGNATURE |coerce| (|#1| (|Integer|))) (SIGNATURE |coerce| (|#1| |#1|))
 (SIGNATURE |coerce| (|#1| |#2|))
 (SIGNATURE |coerce| (|#1| (|Fraction| (|Integer|))))
 (SIGNATURE ^ (|#1| |#1| (|PositiveInteger|)))
 (SIGNATURE |coerce| ((|OutputForm|) |#1|)))
"/git/fricas/src/algebra/UTSCAT.spad"
((|zero?| (((|Boolean|) $) 15)) (|tanh| (($ $) 91)) (|tan| (($ $) 67))
 (|sinh| (($ $) 87)) (|sin| (($ $) 63)) (|sech| (($ $) 95)) (|sec| (($ $) 71))
 (|log| (($ $) 61)) (|exp| (($ $) 59)) (|csch| (($ $) 97)) (|csc| (($ $) 73))
 (|coth| (($ $) 93)) (|cot| (($ $) 69)) (|cosh| (($ $) 89)) (|cos| (($ $) 65))
 (|coerce| (((|OutputForm|) $) 47) (($ (|Fraction| (|Integer|))) NIL)
           (($ |#2|) NIL) (($ $) NIL) (($ (|Integer|)) NIL))
 (|atanh| (($ $) 103)) (|atan| (($ $) 79)) (|asinh| (($ $) 99))
 (|asin| (($ $) 75)) (|asech| (($ $) 107)) (|asec| (($ $) 83))
 (|acsch| (($ $) 109)) (|acsc| (($ $) 85)) (|acoth| (($ $) 105))
 (|acot| (($ $) 81)) (|acosh| (($ $) 101)) (|acos| (($ $) 77))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL)
  (($ $ |#2|) 51) (($ $ $) 54) (($ $ (|Fraction| (|Integer|))) 57)))
((|HasCategory| |#2| (LIST '|AlgebraicallyClosedFunctionSpace| '(|Integer|)))
 (|HasCategory| |#2| '(|PrimitiveFunctionCategory|))
 (|HasCategory| |#2| '(|TranscendentalFunctionCategory|))
 (|HasSignature| |#2|
                 (LIST '|variables|
                       (LIST (LIST '|List| '(|Symbol|)) (|devaluate| |#2|))))
 (|HasSignature| |#2|
                 (LIST '|integrate|
                       (LIST (|devaluate| |#2|) (|devaluate| |#2|)
                             '(|Symbol|))))
 (|HasCategory| |#2| (LIST '|Algebra| (LIST '|Fraction| '(|Integer|))))
 (|HasCategory| |#2| '(|Field|)))
UTSCAT-
((|constructor|
  (NIL
   "\\spadtype{UnivariateTaylorSeriesCategory} is the category of Taylor series in one variable."))
 (|integrate|
  (($ $ (|Symbol|))
   "\\spad{integrate(f(x),{} y)} returns an anti-derivative of the power series \\spad{f(x)} with respect to the variable \\spad{y}.")
  (($ $ (|Symbol|))
   "\\spad{integrate(f(x),{} y)} returns an anti-derivative of the power series \\spad{f(x)} with respect to the variable \\spad{y}.")
  (($ $)
   "\\spad{integrate(f(x))} returns an anti-derivative of the power series \\spad{f(x)} with constant coefficient 0. We may integrate a series when we can divide coefficients by integers."))
 (^
  (($ $ |#2|)
   "\\spad{f(x) ^ a} computes a power of a power series. When the coefficient ring is a field,{} we may raise a series to an exponent from the coefficient ring provided that the constant coefficient of the series is 1."))
 (|polynomial|
  (((|Polynomial| |#2|) $ (|NonNegativeInteger|) (|NonNegativeInteger|))
   "\\spad{polynomial(f,{} k1,{} k2)} returns a polynomial consisting of the sum of all terms of \\spad{f} of degree \\spad{d} with \\spad{k1 <= d <= k2}.")
  (((|Polynomial| |#2|) $ (|NonNegativeInteger|))
   "\\spad{polynomial(f,{} k)} returns a polynomial consisting of the sum of all terms of \\spad{f} of degree \\spad{<= k}."))
 (|multiplyCoefficients|
  (($ (|Mapping| |#2| (|Integer|)) $)
   "\\spad{multiplyCoefficients(f,{} sum(n = 0..infinity,{} a[n] * x^n))} returns \\spad{sum(n = 0..infinity,{} f(n) * a[n] * x^n)}. This function is used when Laurent series are represented by a Taylor series and an order."))
 (|quoByVar|
  (($ $)
   "\\spad{quoByVar(a0 + a1 x + a2 x^2 + ...)} returns \\spad{a1 + a2 x + a3 x^2 + ...} Thus,{} this function substracts the constant term and divides by the series variable. This function is used when Laurent series are represented by a Taylor series and an order."))
 (|coefficients|
  (((|Stream| |#2|) $)
   "\\spad{coefficients(a0 + a1 x + a2 x^2 + ...)} returns a stream of coefficients: \\spad{[a0,{} a1,{} a2,{} ...]}. The entries of the stream may be zero."))
 (|series|
  (($ (|Stream| |#2|))
   "\\spad{series([a0,{} a1,{} a2,{} ...])} is the Taylor series \\spad{a0 + a1 x + a2 x^2 + ...}.")
  (($ (|Stream| (|Record| (|:| |k| (|NonNegativeInteger|)) (|:| |c| |#2|))))
   "\\spad{series(st)} creates a series from a stream of non-zero terms,{} where a term is an exponent-coefficient pair. The terms in the stream should be ordered by increasing order of exponents.")))
(("documentation" 0 4325) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 4317) ("predicates" 0 3717) ("superDomain" 0 NIL)
 ("operationAlist" 0 2884) ("modemaps" 0 NIL) ("sourceFile" 0 2846)
 ("constructorCategory" 0 1552) ("constructorModemap" 0 74)
 ("constructorKind" 0 65) ("constructorForm" 0 20))