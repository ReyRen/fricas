6140                (|IncidenceAlgebra| R S)
|domain|
(((|IncidenceAlgebra| |#1| |#2|)
  (|Join| (|SetCategory|)
          (CATEGORY |domain|
           (SIGNATURE |incidenceAlgebra| ($ (|Matrix| |#1|) (|List| |#2|)))
           (SIGNATURE |incidenceAlgebra|
            ($ (|Matrix| |#1|) (|OneDimensionalArray| |#2|)))
           (SIGNATURE |indices| ((|OneDimensionalArray| |#2|) $))
           (SIGNATURE |matrix| ((|Matrix| |#1|) $))
           (SIGNATURE |apply| (|#1| $ (|Integer|) (|Integer|)))
           (SIGNATURE |apply| (|#1| $ |#2| |#2|))
           (SIGNATURE * ($ (|Permutation| (|Integer|)) $))
           (SIGNATURE + ($ $ $)) (SIGNATURE * ($ $ $)) (SIGNATURE * ($ |#1| $))
           (SIGNATURE * ($ $ |#1|))
           (SIGNATURE ^ ($ $ (|NonNegativeInteger|)))))
  (|Ring|) (|SetCategory|))
 (T |IncidenceAlgebra|))
(|Join| (|SetCategory|)
        (CATEGORY |domain|
         (SIGNATURE |incidenceAlgebra| ($ (|Matrix| |#1|) (|List| |#2|)))
         (SIGNATURE |incidenceAlgebra|
          ($ (|Matrix| |#1|) (|OneDimensionalArray| |#2|)))
         (SIGNATURE |indices| ((|OneDimensionalArray| |#2|) $))
         (SIGNATURE |matrix| ((|Matrix| |#1|) $))
         (SIGNATURE |apply| (|#1| $ (|Integer|) (|Integer|)))
         (SIGNATURE |apply| (|#1| $ |#2| |#2|))
         (SIGNATURE * ($ (|Permutation| (|Integer|)) $)) (SIGNATURE + ($ $ $))
         (SIGNATURE * ($ $ $)) (SIGNATURE * ($ |#1| $))
         (SIGNATURE * ($ $ |#1|)) (SIGNATURE ^ ($ $ (|NonNegativeInteger|)))))
"/git/fricas/src/algebra/INCALG.spad"
((|incidenceAlgebra| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))
 (|incidenceAlgebra| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|OneDimensionalArray| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))
 (|indices| (*1 *2 *1)
  (AND (|isDomain| *2 (|OneDimensionalArray| *4))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 (|matrix| (*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|IncidenceAlgebra| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|))))
 (|apply| (*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|IncidenceAlgebra| *2 *4))
       (|ofCategory| *4 (|SetCategory|))))
 (|apply| (*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|IncidenceAlgebra| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 (* (*1 *1 *2 *1)
    (AND (|isDomain| *2 (|Permutation| (|Integer|)))
         (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
         (|ofCategory| *4 (|SetCategory|))))
 (+ (*1 *1 *1 *1)
    (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
         (|ofCategory| *3 (|SetCategory|))))
 (* (*1 *1 *1 *1)
    (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
         (|ofCategory| *3 (|SetCategory|))))
 (* (*1 *1 *2 *1)
    (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
         (|ofCategory| *3 (|SetCategory|))))
 (* (*1 *1 *1 *2)
    (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
         (|ofCategory| *3 (|SetCategory|))))
 (^ (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|)))))
((~= (((|Boolean|) $ $) NIL)) (|matrix| (((|Matrix| |#1|) $) 19))
 (|latex| (((|String|) $) NIL))
 (|indices| (((|OneDimensionalArray| |#2|) $) 18))
 (|incidenceAlgebra| (($ (|Matrix| |#1|) (|List| |#2|)) 17)
  (($ (|Matrix| |#1|) (|OneDimensionalArray| |#2|)) 14))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|coerce| (((|OutputForm|) $) 40))
 (|apply| ((|#1| $ (|Integer|) (|Integer|)) 21) ((|#1| $ |#2| |#2|) 23))
 (^ (($ $ (|NonNegativeInteger|)) 55)) (= (((|Boolean|) $ $) 43))
 (+ (($ $ $) 46))
 (* (($ (|Permutation| (|Integer|)) $) 34) (($ $ $) 48) (($ |#1| $) 50)
    (($ $ |#1|) 52)))
INCALG
(((|SetCategory|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|SetCategory|) . T))
((|constructor| (NIL "A domain for incidence matrices of finite posets."))
 (^
  (($ $ (|NonNegativeInteger|))
   "\\spad{x ^ n} computes a non-negative integral power of the matrix \\spad{x}. Error: if the matrix is not square."))
 (+
  (($ $ $)
   "\\spad{x + y} is the sum of the matrices \\spad{x} and \\spad{y}. Error: if the dimensions are incompatible."))
 (*
  (($ $ |#1|)
   "\\spad{r*x} is the left scalar multiple of the scalar \\spad{r} and the matrix \\spad{x}.")
  (($ |#1| $)
   "\\spad{r*x} is the left scalar multiple of the scalar \\spad{r} and the matrix \\spad{x}.")
  (($ $ $)
   "\\spad{x * y} is the product of the matrices \\spad{x} and \\spad{y}. Error: if the dimensions are incompatible.")
  (($ (|Permutation| (|Integer|)) $)
   "\\spad{\\pi * A} permutes the indices and the matrix according to the permutation \\spad{\\pi}."))
 (|apply|
  ((|#1| $ |#2| |#2|)
   "\\spad{A(s,{} t)} returns \\$A_{\\spad{i},{} \\spad{j}}\\$,{} where \\$\\spad{i}\\$,{} \\$\\spad{j}\\$ are the positions of \\$\\spad{s}\\$ and \\$\\spad{t}\\$ in the index list.")
  ((|#1| $ (|Integer|) (|Integer|))
   "\\spad{A(i,{} j)} returns \\$A_{\\spad{i},{} \\spad{j}}\\$"))
 (|matrix|
  (((|Matrix| |#1|) $)
   "\\spad{matrix(A)} returns the underlying matrix of the incidence matrix A"))
 (|indices|
  (((|OneDimensionalArray| |#2|) $)
   "\\spad{indices(A)} returns the indices of the incidence matrix A"))
 (|incidenceAlgebra|
  (($ (|Matrix| |#1|) (|OneDimensionalArray| |#2|))
   "\\spad{incidenceAlgebra(A,{} ss)} constructs an adjacency matrix with with indices \\spad{ss} and Matrix A")
  (($ (|Matrix| |#1|) (|List| |#2|))
   "\\spad{incidenceAlgebra(A,{} ss)} constructs an adjacency matrix with with indices \\spad{ss} and Matrix A")))
(("documentation" 0 4391) ("ancestors" 0 4310) ("parents" 0 4286)
 ("abbreviation" 0 4279) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 3634) ("modemaps" 0 1537) ("sourceFile" 0 1499)
 ("constructorCategory" 0 837) ("constructorModemap" 0 54)
 ("constructorKind" 0 45) ("constructorForm" 0 20))