2762                (|LazardSetSolvingPackage| R E V P TS ST)
|package|
(((|LazardSetSolvingPackage| |#1| |#2| |#3| |#4| |#5| |#6|)
  (CATEGORY |package| (SIGNATURE |normalizeIfCan| (|#6| |#6|))
   (SIGNATURE |zeroSetSplit| ((|List| |#6|) (|List| |#4|) (|Boolean|))))
  (|GcdDomain|) (|OrderedAbelianMonoidSup|) (|OrderedSet|)
  (|RecursivePolynomialCategory| |#1| |#2| |#3|)
  (|RegularTriangularSetCategory| |#1| |#2| |#3| |#4|)
  (|SquareFreeRegularTriangularSetCategory| |#1| |#2| |#3| |#4|))
 (T |LazardSetSolvingPackage|))
(CATEGORY |package| (SIGNATURE |normalizeIfCan| (|#6| |#6|))
 (SIGNATURE |zeroSetSplit| ((|List| |#6|) (|List| |#4|) (|Boolean|))))
"/git/fricas/src/algebra/LAZM3PK.spad"
((|zeroSetSplit| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *10))
       (|isDomain| *1 (|LazardSetSolvingPackage| *5 *6 *7 *8 *9 *10))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *10
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 (|normalizeIfCan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|LazardSetSolvingPackage| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *2
                     (|SquareFreeRegularTriangularSetCategory| *3 *4 *5 *6)))))
((|zeroSetSplit| (((|List| |#6|) (|List| |#4|) (|Boolean|)) 46))
 (|normalizeIfCan| ((|#6| |#6|) 39)))
LAZM3PK
((|constructor|
  (NIL
   "A package for solving polynomial systems by means of Lazard triangular sets [1]. This package provides two operations. One for solving in the sense of the regular zeros,{} and the other for solving in the sense of the Zariski closure. Both produce square-free regular sets. Moreover,{} the decompositions do not contain any redundant component. However,{} only zero-dimensional regular sets are normalized,{} since normalization may be time consumming in positive dimension. The decomposition process is that of [2].\\newline"))
 (|zeroSetSplit|
  (((|List| |#6|) (|List| |#4|) (|Boolean|))
   "\\spad{zeroSetSplit(lp,{} clos?)} has the same specifications as \\spadopFrom{zeroSetSplit(\\spad{lp},{} clos?)}{RegularTriangularSetCategory}."))
 (|normalizeIfCan|
  ((|#6| |#6|)
   "\\spad{normalizeIfCan(ts)} returns \\spad{ts} in an normalized shape if \\spad{ts} is zero-dimensional.")))
(("documentation" 0 1847) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 1839) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1736) ("modemaps" 0 700) ("sourceFile" 0 661)
 ("constructorCategory" 0 529) ("constructorModemap" 0 72)
 ("constructorKind" 0 62) ("constructorForm" 0 20))