3249                (MAKEPROP '|DivisionRing| 'NILADIC T)
(|DivisionRing|)
|category|
(((|DivisionRing|) (|Category|)) (T |DivisionRing|))
(|Join| (|EntireRing|) (|Algebra| (|Fraction| (|Integer|))) (|TwoSidedRecip|)
        (CATEGORY |domain| (SIGNATURE ^ ($ $ (|Integer|)))
         (SIGNATURE |inv| ($ $))))
"/git/fricas/src/algebra/DIVRING.spad"
((^ (*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|))))
 (|inv| (*1 *1 *1) (|ofCategory| *1 (|DivisionRing|))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6))
 (|unitCanonical| (($ $) 6)) (|unit?| (((|Boolean|) $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|recip| (((|Union| $ #1#) $) 6)) (|opposite?| (((|Boolean|) $ $) 6))
 (|one?| (((|Boolean|) $) 6)) (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|latex| (((|String|) $) 6)) (|inv| (($ $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|exquo| (((|Union| $ "failed") $ $) 6))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ (|Integer|)) 6)
           (($ (|Fraction| (|Integer|))) 6))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|associator| (($ $ $ $) 6))
 (|associates?| (((|Boolean|) $ $) 6)) (|antiCommutator| (($ $ $) 6))
 (|annihilate?| (((|Boolean|) $ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6)
  (($ $ (|Integer|)) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST)) (= (((|Boolean|) $ $) 6))
 (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6) (($ (|Fraction| (|Integer|)) $) 6)
    (($ $ (|Fraction| (|Integer|))) 6)))
DIVRING
(((|EntireRing|) . T) ((|Algebra| (|Fraction| (|Integer|))) . T)
 ((|TwoSidedRecip|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) . T) ((|BasicType|) . T)
 ((|BiModule| |t#1| |t#1|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|EntireRing|) . T) ((|LeftModule| |t#1|) . T) ((|Magma|) . T)
 ((|MagmaWithUnit|) . T) ((|Module| |t#1|) . T) ((|Monoid|) . T)
 ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|TwoSidedRecip|) . T) ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "A division ring (sometimes called a skew field),{} \\spadignore{i.e.} a not necessarily commutative ring where all non-zero elements have multiplicative inverses."))
 (|inv|
  (($ $)
   "\\spad{inv x} returns the multiplicative inverse of \\spad{x}. Error: if \\spad{x} is 0."))
 (^
  (($ $ (|Integer|))
   "\\spad{x^n} returns \\spad{x} raised to the integer power \\spad{n}.")))
(("documentation" 0 2841) ("ancestors" 0 2109) ("parents" 0 2018)
 ("abbreviation" 0 2010) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 496) ("modemaps" 0 350) ("sourceFile" 0 311)
 ("constructorCategory" 0 139) ("constructorModemap" 0 86)
 ("constructorKind" 0 75) ("constructorForm" 0 58) ("NILADIC" 0 20))