18584               (|TranscendentalManipulations| R F)
|package|
(((|TranscendentalManipulations| |#1| |#2|)
  (CATEGORY |package| (SIGNATURE |expand| (|#2| |#2|))
   (SIGNATURE |simplify| (|#2| |#2|)) (SIGNATURE |htrigs| (|#2| |#2|))
   (SIGNATURE |simplifyExp| (|#2| |#2|)) (SIGNATURE |simplifyLog| (|#2| |#2|))
   (SIGNATURE |expandPower| (|#2| |#2|)) (SIGNATURE |expandLog| (|#2| |#2|))
   (SIGNATURE |cos2sec| (|#2| |#2|)) (SIGNATURE |cosh2sech| (|#2| |#2|))
   (SIGNATURE |cot2trig| (|#2| |#2|)) (SIGNATURE |coth2trigh| (|#2| |#2|))
   (SIGNATURE |csc2sin| (|#2| |#2|)) (SIGNATURE |csch2sinh| (|#2| |#2|))
   (SIGNATURE |sec2cos| (|#2| |#2|)) (SIGNATURE |sech2cosh| (|#2| |#2|))
   (SIGNATURE |sin2csc| (|#2| |#2|)) (SIGNATURE |sinh2csch| (|#2| |#2|))
   (SIGNATURE |tan2trig| (|#2| |#2|)) (SIGNATURE |tanh2trigh| (|#2| |#2|))
   (SIGNATURE |tan2cot| (|#2| |#2|)) (SIGNATURE |tanh2coth| (|#2| |#2|))
   (SIGNATURE |cot2tan| (|#2| |#2|)) (SIGNATURE |coth2tanh| (|#2| |#2|))
   (SIGNATURE |removeCosSq| (|#2| |#2|)) (SIGNATURE |removeSinSq| (|#2| |#2|))
   (SIGNATURE |removeCoshSq| (|#2| |#2|))
   (SIGNATURE |removeSinhSq| (|#2| |#2|))
   (IF (|has| |#1| (|PatternMatchable| |#1|))
       (IF (|has| |#1| (|ConvertibleTo| (|Pattern| |#1|)))
           (IF (|has| |#2| (|ConvertibleTo| (|Pattern| |#1|)))
               (IF (|has| |#2| (|PatternMatchable| |#1|))
                   (SIGNATURE |expandTrigProducts| (|#2| |#2|))
                   |noBranch|)
               |noBranch|)
           |noBranch|)
       |noBranch|))
  (|Join| (|Comparable|) (|GcdDomain|))
  (|Join| (|FunctionSpace| |#1|) (|TranscendentalFunctionCategory|)))
 (T |TranscendentalManipulations|))
(CATEGORY |package| (SIGNATURE |expand| (|#2| |#2|))
 (SIGNATURE |simplify| (|#2| |#2|)) (SIGNATURE |htrigs| (|#2| |#2|))
 (SIGNATURE |simplifyExp| (|#2| |#2|)) (SIGNATURE |simplifyLog| (|#2| |#2|))
 (SIGNATURE |expandPower| (|#2| |#2|)) (SIGNATURE |expandLog| (|#2| |#2|))
 (SIGNATURE |cos2sec| (|#2| |#2|)) (SIGNATURE |cosh2sech| (|#2| |#2|))
 (SIGNATURE |cot2trig| (|#2| |#2|)) (SIGNATURE |coth2trigh| (|#2| |#2|))
 (SIGNATURE |csc2sin| (|#2| |#2|)) (SIGNATURE |csch2sinh| (|#2| |#2|))
 (SIGNATURE |sec2cos| (|#2| |#2|)) (SIGNATURE |sech2cosh| (|#2| |#2|))
 (SIGNATURE |sin2csc| (|#2| |#2|)) (SIGNATURE |sinh2csch| (|#2| |#2|))
 (SIGNATURE |tan2trig| (|#2| |#2|)) (SIGNATURE |tanh2trigh| (|#2| |#2|))
 (SIGNATURE |tan2cot| (|#2| |#2|)) (SIGNATURE |tanh2coth| (|#2| |#2|))
 (SIGNATURE |cot2tan| (|#2| |#2|)) (SIGNATURE |coth2tanh| (|#2| |#2|))
 (SIGNATURE |removeCosSq| (|#2| |#2|)) (SIGNATURE |removeSinSq| (|#2| |#2|))
 (SIGNATURE |removeCoshSq| (|#2| |#2|)) (SIGNATURE |removeSinhSq| (|#2| |#2|))
 (IF (|has| |#1| (|PatternMatchable| |#1|))
     (IF (|has| |#1| (|ConvertibleTo| (|Pattern| |#1|)))
         (IF (|has| |#2| (|ConvertibleTo| (|Pattern| |#1|)))
             (IF (|has| |#2| (|PatternMatchable| |#1|))
                 (SIGNATURE |expandTrigProducts| (|#2| |#2|))
                 |noBranch|)
             |noBranch|)
         |noBranch|)
     |noBranch|))
"/git/fricas/src/algebra/TRMANIP.spad"
((|expandTrigProducts| (*1 *2 *2)
  (AND (|ofCategory| *3 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *3 (|PatternMatchable| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *2 (|PatternMatchable| *3))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|removeSinhSq| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|removeCoshSq| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|removeSinSq| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|removeCosSq| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|coth2tanh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|cot2tan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|tanh2coth| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|tan2cot| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|tanh2trigh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|tan2trig| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|sinh2csch| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|sin2csc| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|sech2cosh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|sec2cos| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|csch2sinh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|csc2sin| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|coth2trigh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|cot2trig| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|cosh2sech| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|cos2sec| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|expandLog| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|expandPower| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|simplifyLog| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|simplifyExp| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|htrigs| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|simplify| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 (|expand| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|))))))
((|tanh2trigh| ((|#2| |#2|) 136)) (|tanh2coth| ((|#2| |#2|) 133))
 (|tan2trig| ((|#2| |#2|) 124)) (|tan2cot| ((|#2| |#2|) 121))
 (|sinh2csch| ((|#2| |#2|) 129)) (|sin2csc| ((|#2| |#2|) 117))
 (|simplifyLog| ((|#2| |#2|) 46)) (|simplifyExp| ((|#2| |#2|) 96))
 (|simplify| ((|#2| |#2|) 77)) (|sech2cosh| ((|#2| |#2|) 131))
 (|sec2cos| ((|#2| |#2|) 119)) (|removeSinhSq| ((|#2| |#2|) 141))
 (|removeSinSq| ((|#2| |#2|) 139)) (|removeCoshSq| ((|#2| |#2|) 140))
 (|removeCosSq| ((|#2| |#2|) 138)) (|htrigs| ((|#2| |#2|) 150))
 (|expandTrigProducts|
  ((|#2| |#2|) 36
   (AND (|has| |#2| (|ConvertibleTo| (|Pattern| |#1|)))
        (|has| |#2| (|PatternMatchable| |#1|))
        (|has| |#1| (|ConvertibleTo| (|Pattern| |#1|)))
        (|has| |#1| (|PatternMatchable| |#1|)))))
 (|expandPower| ((|#2| |#2|) 102)) (|expandLog| ((|#2| |#2|) 142))
 (|expand| ((|#2| |#2|) 143)) (|csch2sinh| ((|#2| |#2|) 130))
 (|csc2sin| ((|#2| |#2|) 118)) (|coth2trigh| ((|#2| |#2|) 137))
 (|coth2tanh| ((|#2| |#2|) 135)) (|cot2trig| ((|#2| |#2|) 125))
 (|cot2tan| ((|#2| |#2|) 123)) (|cosh2sech| ((|#2| |#2|) 127))
 (|cos2sec| ((|#2| |#2|) 115)))
((AND
  (|HasCategory| |#1|
                 (LIST '|ConvertibleTo| (LIST '|Pattern| (|devaluate| |#1|))))
  (|HasCategory| |#1| (LIST '|PatternMatchable| (|devaluate| |#1|)))
  (|HasCategory| |#2|
                 (LIST '|ConvertibleTo| (LIST '|Pattern| (|devaluate| |#1|))))
  (|HasCategory| |#2| (LIST '|PatternMatchable| (|devaluate| |#1|)))))
TRMANIP
((|constructor|
  (NIL
   "TranscendentalManipulations provides functions to simplify and expand expressions involving transcendental operators."))
 (|expandTrigProducts|
  ((|#2| |#2|)
   "\\spad{expandTrigProducts(e)} replaces \\spad{sin(x)*sin(y)} by \\spad{(cos(x-y)-cos(x+y))/2},{} \\spad{cos(x)*cos(y)} by \\spad{(cos(x-y)+cos(x+y))/2},{} and \\spad{sin(x)*cos(y)} by \\spad{(sin(x-y)+sin(x+y))/2}. Note: this operation uses pattern matcher,{} so it is relatively expensive. To avoid getting into an infinite loop the transformations are applied at most ten times."))
 (|removeSinhSq|
  ((|#2| |#2|)
   "\\spad{removeSinhSq(f)} converts every \\spad{sinh(u)^2} appearing in \\spad{f} into \\spad{1 - cosh(u)^2},{} and also reduces higher powers of \\spad{sinh(u)} with that formula."))
 (|removeCoshSq|
  ((|#2| |#2|)
   "\\spad{removeCoshSq(f)} converts every \\spad{cosh(u)^2} appearing in \\spad{f} into \\spad{1 - sinh(u)^2},{} and also reduces higher powers of \\spad{cosh(u)} with that formula."))
 (|removeSinSq|
  ((|#2| |#2|)
   "\\spad{removeSinSq(f)} converts every \\spad{sin(u)^2} appearing in \\spad{f} into \\spad{1 - cos(u)^2},{} and also reduces higher powers of \\spad{sin(u)} with that formula."))
 (|removeCosSq|
  ((|#2| |#2|)
   "\\spad{removeCosSq(f)} converts every \\spad{cos(u)^2} appearing in \\spad{f} into \\spad{1 - sin(u)^2},{} and also reduces higher powers of \\spad{cos(u)} with that formula."))
 (|coth2tanh|
  ((|#2| |#2|)
   "\\spad{coth2tanh(f)} converts every \\spad{coth(u)} appearing in \\spad{f} into \\spad{1/tanh(u)}."))
 (|cot2tan|
  ((|#2| |#2|)
   "\\spad{cot2tan(f)} converts every \\spad{cot(u)} appearing in \\spad{f} into \\spad{1/tan(u)}."))
 (|tanh2coth|
  ((|#2| |#2|)
   "\\spad{tanh2coth(f)} converts every \\spad{tanh(u)} appearing in \\spad{f} into \\spad{1/coth(u)}."))
 (|tan2cot|
  ((|#2| |#2|)
   "\\spad{tan2cot(f)} converts every \\spad{tan(u)} appearing in \\spad{f} into \\spad{1/cot(u)}."))
 (|tanh2trigh|
  ((|#2| |#2|)
   "\\spad{tanh2trigh(f)} converts every \\spad{tanh(u)} appearing in \\spad{f} into \\spad{sinh(u)/cosh(u)}."))
 (|tan2trig|
  ((|#2| |#2|)
   "\\spad{tan2trig(f)} converts every \\spad{tan(u)} appearing in \\spad{f} into \\spad{sin(u)/cos(u)}."))
 (|sinh2csch|
  ((|#2| |#2|)
   "\\spad{sinh2csch(f)} converts every \\spad{sinh(u)} appearing in \\spad{f} into \\spad{1/csch(u)}."))
 (|sin2csc|
  ((|#2| |#2|)
   "\\spad{sin2csc(f)} converts every \\spad{sin(u)} appearing in \\spad{f} into \\spad{1/csc(u)}."))
 (|sech2cosh|
  ((|#2| |#2|)
   "\\spad{sech2cosh(f)} converts every \\spad{sech(u)} appearing in \\spad{f} into \\spad{1/cosh(u)}."))
 (|sec2cos|
  ((|#2| |#2|)
   "\\spad{sec2cos(f)} converts every \\spad{sec(u)} appearing in \\spad{f} into \\spad{1/cos(u)}."))
 (|csch2sinh|
  ((|#2| |#2|)
   "\\spad{csch2sinh(f)} converts every \\spad{csch(u)} appearing in \\spad{f} into \\spad{1/sinh(u)}."))
 (|csc2sin|
  ((|#2| |#2|)
   "\\spad{csc2sin(f)} converts every \\spad{csc(u)} appearing in \\spad{f} into \\spad{1/sin(u)}."))
 (|coth2trigh|
  ((|#2| |#2|)
   "\\spad{coth2trigh(f)} converts every \\spad{coth(u)} appearing in \\spad{f} into \\spad{cosh(u)/sinh(u)}."))
 (|cot2trig|
  ((|#2| |#2|)
   "\\spad{cot2trig(f)} converts every \\spad{cot(u)} appearing in \\spad{f} into \\spad{cos(u)/sin(u)}."))
 (|cosh2sech|
  ((|#2| |#2|)
   "\\spad{cosh2sech(f)} converts every \\spad{cosh(u)} appearing in \\spad{f} into \\spad{1/sech(u)}."))
 (|cos2sec|
  ((|#2| |#2|)
   "\\spad{cos2sec(f)} converts every \\spad{cos(u)} appearing in \\spad{f} into \\spad{1/sec(u)}."))
 (|expandLog|
  ((|#2| |#2|)
   "\\spad{expandLog(f)} converts every \\spad{log(a/b)} appearing in \\spad{f} into \\spad{log(a) - log(b)},{} and every \\spad{log(a*b)} into \\spad{log(a) + log(b)}."))
 (|expandPower|
  ((|#2| |#2|)
   "\\spad{expandPower(f)} converts every power \\spad{(a/b)^c} appearing in \\spad{f} into \\spad{a^c * b^(-c)}."))
 (|simplifyLog|
  ((|#2| |#2|)
   "\\spad{simplifyLog(f)} converts every \\spad{log(a) - log(b)} appearing in \\spad{f} into \\spad{log(a/b)},{} every \\spad{log(a) + log(b)} into \\spad{log(a*b)} and every \\spad{n*log(a)} into \\spad{log(a^n)}."))
 (|simplifyExp|
  ((|#2| |#2|)
   "\\spad{simplifyExp(f)} performs the following simplifications on \\spad{f:} \\begin{items} \\item 1. rewrites \\spad{exp(a)*exp(b)} as \\spad{exp(a+b)}. \\item 2. rewrites \\spad{a^b*a^c} as \\spad{a^(b+c)}. \\item 3. rewrites \\spad{exp(a)/exp(b)} as \\spad{exp(a-b)}. \\item 4. rewrites \\spad{a^b/a^c} as \\spad{a^(b-c)}. \\end{items}"))
 (|htrigs|
  ((|#2| |#2|)
   "\\spad{htrigs(f)} converts all the exponentials in \\spad{f} into hyperbolic sines and cosines."))
 (|simplify|
  ((|#2| |#2|)
   "\\spad{simplify(f)} performs the following simplifications on \\spad{f:} \\begin{items} \\item 1. rewrites trigs and hyperbolic trigs in terms of \\spad{sin} ,{} \\spad{cos},{} \\spad{sinh},{} \\spad{cosh}. \\item 2. rewrites \\spad{sin^2} and \\spad{sinh^2} in terms of \\spad{cos} and \\spad{cosh},{} \\item 3. rewrites \\spad{exp(a)*exp(b)} as \\spad{exp(a+b)}. \\item 4. rewrites \\spad{(a^(1/n))^m * (a^(1/s))^t} as a single power of a single radical of \\spad{a}. \\end{items}"))
 (|expand|
  ((|#2| |#2|)
   "\\spad{expand(f)} performs the following expansions on \\spad{f:} \\begin{items} \\item 1. logs of products are expanded into sums of logs. \\item 2. trigonometric and hyperbolic trigonometric functions of sums are expanded into sums of products of trigonometric and hyperbolic trigonometric functions. \\item 3. formal powers of the form \\spad{(a/b)^c} are expanded into \\spad{a^c * b^(-c)}. \\end{items}")))
(("documentation" 0 12942) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 12934) ("predicates" 0 12586) ("superDomain" 0 NIL)
 ("operationAlist" 0 11463) ("modemaps" 0 3094) ("sourceFile" 0 3055)
 ("constructorCategory" 0 1680) ("constructorModemap" 0 66)
 ("constructorKind" 0 56) ("constructorForm" 0 20))