2506                (|IntegerFactorizationPackage| I)
|package|
(((|IntegerFactorizationPackage| |#1|)
  (CATEGORY |package| (SIGNATURE |factor| ((|Factored| |#1|) |#1|))
   (SIGNATURE |squareFree| ((|Factored| |#1|) |#1|))
   (SIGNATURE |BasicMethod| ((|Factored| |#1|) |#1|))
   (SIGNATURE |PollardSmallFactor| ((|Union| |#1| "failed") |#1|)))
  (|IntegerNumberSystem|))
 (T |IntegerFactorizationPackage|))
(CATEGORY |package| (SIGNATURE |factor| ((|Factored| |#1|) |#1|))
 (SIGNATURE |squareFree| ((|Factored| |#1|) |#1|))
 (SIGNATURE |BasicMethod| ((|Factored| |#1|) |#1|))
 (SIGNATURE |PollardSmallFactor| ((|Union| |#1| "failed") |#1|)))
"/git/fricas/src/algebra/INTFACT.spad"
((|PollardSmallFactor| (*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerFactorizationPackage| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))
 (|BasicMethod| (*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 (|squareFree| (*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 (|factor| (*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|)))))
((|squareFree| (((|Factored| |#1|) |#1|) 19))
 (|factor| (((|Factored| |#1|) |#1|) 34))
 (|PollardSmallFactor| (((|Union| |#1| "failed") |#1|) 45))
 (|BasicMethod| (((|Factored| |#1|) |#1|) 53)))
INTFACT
((|constructor|
  (NIL
   "\\indented{1}{This Package contains basic methods for integer factorization.} The factor operation employs trial division up to 10,{} 000. It then tests to see if \\spad{n} is a perfect power before using Pollards rho method. Because Pollards method may fail,{} the result of factor may contain composite factors. We should also employ Lenstra\\spad{'s} eliptic curve method."))
 (|PollardSmallFactor|
  (((|Union| |#1| "failed") |#1|)
   "\\spad{PollardSmallFactor(n)} returns a factor of \\spad{n} or \"failed\" if no one is found"))
 (|BasicMethod|
  (((|Factored| |#1|) |#1|)
   "\\spad{BasicMethod(n)} returns the factorization of integer \\spad{n} by trial division"))
 (|squareFree|
  (((|Factored| |#1|) |#1|)
   "\\spad{squareFree(n)} returns the square free factorization of integer \\spad{n}"))
 (|factor|
  (((|Factored| |#1|) |#1|)
   "\\spad{factor(n)} returns the full factorization of integer \\spad{n}")))
(("documentation" 0 1556) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 1548) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1352) ("modemaps" 0 683) ("sourceFile" 0 644)
 ("constructorCategory" 0 409) ("constructorModemap" 0 64)
 ("constructorKind" 0 54) ("constructorForm" 0 20))