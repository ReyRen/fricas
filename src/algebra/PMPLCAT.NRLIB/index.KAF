3971                (|PatternMatchPolynomialCategory| S E V R P)
|package|
(((|PatternMatchPolynomialCategory| |#1| |#2| |#3| |#4| |#5|)
  (CATEGORY |package|
   (SIGNATURE |patternMatch|
    ((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
     (|PatternMatchResult| |#1| |#5|)
     (|Mapping| (|PatternMatchResult| |#1| |#5|) |#3| (|Pattern| |#1|)
                (|PatternMatchResult| |#1| |#5|))))
   (IF (|has| |#3| (|PatternMatchable| |#1|))
       (SIGNATURE |patternMatch|
        ((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
         (|PatternMatchResult| |#1| |#5|)))
       |noBranch|))
  (|SetCategory|) (|OrderedAbelianMonoidSup|) (|OrderedSet|)
  (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| |#1|))
  (|Join| (|PolynomialCategory| |#4| |#2| |#3|)
          (|ConvertibleTo| (|Pattern| |#1|))))
 (T |PatternMatchPolynomialCategory|))
(CATEGORY |package|
 (SIGNATURE |patternMatch|
  ((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
   (|PatternMatchResult| |#1| |#5|)
   (|Mapping| (|PatternMatchResult| |#1| |#5|) |#3| (|Pattern| |#1|)
              (|PatternMatchResult| |#1| |#5|))))
 (IF (|has| |#3| (|PatternMatchable| |#1|))
     (SIGNATURE |patternMatch|
      ((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
       (|PatternMatchResult| |#1| |#5|)))
     |noBranch|))
"/git/fricas/src/algebra/PMPLCAT.spad"
((|patternMatch| (*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|PolynomialCategory| *8 *6 *7)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *7 (|PatternMatchable| *5))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchPolynomialCategory| *5 *6 *7 *8 *3))))
 (|patternMatch| (*1 *2 *3 *4 *2 *5)
  (AND
   (|isDomain| *5
               (|Mapping| (|PatternMatchResult| *6 *3) *8 (|Pattern| *6)
                          (|PatternMatchResult| *6 *3)))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|PatternMatchResult| *6 *3)) (|isDomain| *4 (|Pattern| *6))
   (|ofCategory| *6 (|SetCategory|))
   (|ofCategory| *3
                 (|Join| (|PolynomialCategory| *9 *7 *8) (|ConvertibleTo| *4)))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *6)))
   (|isDomain| *1 (|PatternMatchPolynomialCategory| *6 *7 *8 *9 *3)))))
((|patternMatch|
  (((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
    (|PatternMatchResult| |#1| |#5|))
   17 (|has| |#3| (|PatternMatchable| |#1|)))
  (((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
    (|PatternMatchResult| |#1| |#5|)
    (|Mapping| (|PatternMatchResult| |#1| |#5|) |#3| (|Pattern| |#1|)
               (|PatternMatchResult| |#1| |#5|)))
   16)))
((|HasCategory| |#3| (LIST '|PatternMatchable| (|devaluate| |#1|))))
PMPLCAT
((|constructor|
  (NIL "This package provides pattern matching functions on polynomials."))
 (|patternMatch|
  (((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
    (|PatternMatchResult| |#1| |#5|))
   "\\spad{patternMatch(p,{} pat,{} res)} matches the pattern \\spad{pat} to the polynomial \\spad{p}; res contains the variables of \\spad{pat} which are already matched and their matches.")
  (((|PatternMatchResult| |#1| |#5|) |#5| (|Pattern| |#1|)
    (|PatternMatchResult| |#1| |#5|)
    (|Mapping| (|PatternMatchResult| |#1| |#5|) |#3| (|Pattern| |#1|)
               (|PatternMatchResult| |#1| |#5|)))
   "\\spad{patternMatch(p,{} pat,{} res,{} vmatch)} matches the pattern \\spad{pat} to the polynomial \\spad{p}. \\spad{res} contains the variables of \\spad{pat} which are already matched and their matches; vmatch is the matching function to use on the variables.")))
(("documentation" 0 3088) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 3080) ("predicates" 0 3011) ("superDomain" 0 NIL)
 ("operationAlist" 0 2626) ("modemaps" 0 1368) ("sourceFile" 0 1329)
 ("constructorCategory" 0 872) ("constructorModemap" 0 75)
 ("constructorKind" 0 65) ("constructorForm" 0 20))