13888               (|VectorSpaceBasis| R)
|domain|
(((|VectorSpaceBasis| |#1|)
  (|Join| (|BasicType|) (|CoercibleTo| (|OutputForm|))
          (CATEGORY |domain| (SIGNATURE |basis| ($ (|List| (|Vector| |#1|))))
           (SIGNATURE |coerce| ((|List| (|Vector| |#1|)) $))
           (SIGNATURE |nullSpace| ($ (|Matrix| |#1|)))
           (SIGNATURE |columnSpace| ($ (|Matrix| |#1|)))
           (SIGNATURE |sumBasis| ($ $ $))
           (SIGNATURE |sumBasis|
            ($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|))))
           (SIGNATURE |sumBasis| ($ (|List| $)))
           (SIGNATURE |sumBasis| ($ (|List| (|List| (|Vector| |#1|)))))
           (SIGNATURE + ($ $ $))
           (SIGNATURE |intBasis|
            ($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|))))
           (SIGNATURE |intBasis| ($ $ $)) (SIGNATURE |intBasis| ($ (|List| $)))
           (SIGNATURE |intBasis| ($ (|List| (|List| (|Vector| |#1|)))))
           (SIGNATURE * ($ $ $))
           (SIGNATURE |rank| ((|NonNegativeInteger|) (|List| (|Vector| |#1|))))
           (SIGNATURE |rank| ((|NonNegativeInteger|) $))
           (SIGNATURE |isBasis?| ((|Boolean|) (|List| (|Vector| |#1|))))
           (SIGNATURE |subspace?| ((|Boolean|) $ $))
           (SIGNATURE 0 ($) |constant|)
           (SIGNATURE |canonicalBasis| ($ (|NonNegativeInteger|)))
           (SIGNATURE |complementSpace| ($ $))
           (SIGNATURE |complementSpace| ($ $ (|NonNegativeInteger|)))
           (SIGNATURE |complementSpace| ($ (|List| (|Vector| |#1|))))
           (SIGNATURE |complementSpace|
            ($ (|List| (|Vector| |#1|)) (|NonNegativeInteger|)))
           (SIGNATURE |member?| ((|Boolean|) (|Vector| |#1|) $))
           (SIGNATURE |coordinatesIfCan|
            ((|Union| (|Vector| |#1|) "failed") (|Vector| |#1|) $))
           (SIGNATURE |coordinates| ((|Vector| |#1|) (|Vector| |#1|) $))))
  (|Field|))
 (T |VectorSpaceBasis|))
(|Join| (|BasicType|) (|CoercibleTo| (|OutputForm|))
        (CATEGORY |domain| (SIGNATURE |basis| ($ (|List| (|Vector| |#1|))))
         (SIGNATURE |coerce| ((|List| (|Vector| |#1|)) $))
         (SIGNATURE |nullSpace| ($ (|Matrix| |#1|)))
         (SIGNATURE |columnSpace| ($ (|Matrix| |#1|)))
         (SIGNATURE |sumBasis| ($ $ $))
         (SIGNATURE |sumBasis|
          ($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|))))
         (SIGNATURE |sumBasis| ($ (|List| $)))
         (SIGNATURE |sumBasis| ($ (|List| (|List| (|Vector| |#1|)))))
         (SIGNATURE + ($ $ $))
         (SIGNATURE |intBasis|
          ($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|))))
         (SIGNATURE |intBasis| ($ $ $)) (SIGNATURE |intBasis| ($ (|List| $)))
         (SIGNATURE |intBasis| ($ (|List| (|List| (|Vector| |#1|)))))
         (SIGNATURE * ($ $ $))
         (SIGNATURE |rank| ((|NonNegativeInteger|) (|List| (|Vector| |#1|))))
         (SIGNATURE |rank| ((|NonNegativeInteger|) $))
         (SIGNATURE |isBasis?| ((|Boolean|) (|List| (|Vector| |#1|))))
         (SIGNATURE |subspace?| ((|Boolean|) $ $))
         (SIGNATURE (|Zero|) ($) |constant|)
         (SIGNATURE |canonicalBasis| ($ (|NonNegativeInteger|)))
         (SIGNATURE |complementSpace| ($ $))
         (SIGNATURE |complementSpace| ($ $ (|NonNegativeInteger|)))
         (SIGNATURE |complementSpace| ($ (|List| (|Vector| |#1|))))
         (SIGNATURE |complementSpace|
          ($ (|List| (|Vector| |#1|)) (|NonNegativeInteger|)))
         (SIGNATURE |member?| ((|Boolean|) (|Vector| |#1|) $))
         (SIGNATURE |coordinatesIfCan|
          ((|Union| (|Vector| |#1|) "failed") (|Vector| |#1|) $))
         (SIGNATURE |coordinates| ((|Vector| |#1|) (|Vector| |#1|) $))))
"/git/fricas/src/algebra/VSBASIS.spad"
((|basis| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (|coerce| (*1 *2 *1)
           (AND (|isDomain| *2 (|List| (|Vector| *3)))
                (|isDomain| *1 (|VectorSpaceBasis| *3))
                (|ofCategory| *3 (|Field|))))
 (|nullSpace| (*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (|columnSpace| (*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (|sumBasis| (*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 (|sumBasis| (*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (|sumBasis| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 (|sumBasis| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (+ (*1 *1 *1 *1)
    (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 (|intBasis| (*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (|intBasis| (*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 (|intBasis| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 (|intBasis| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (* (*1 *1 *1 *1)
    (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 (|rank| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))
 (|rank| (*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 (|isBasis?| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))
 (|subspace?| (*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *3))
       (|ofCategory| *3 (|Field|))))
 (|Zero| (*1 *1)
         (AND (|isDomain| *1 (|VectorSpaceBasis| *2))
              (|ofCategory| *2 (|Field|))))
 (|canonicalBasis| (*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 (|complementSpace| (*1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 (|complementSpace| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 (|complementSpace| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (|complementSpace| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))
 (|member?| (*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))
 (|coordinatesIfCan| (*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
   (|isDomain| *1 (|VectorSpaceBasis| *3))))
 (|coordinates| (*1 *2 *2 *1)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)))))
((~= (((|Boolean|) $ $) NIL))
 (|sumBasis| (($ $ $) 33)
  (($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|))) 32)
  (($ (|List| $)) 39) (($ (|List| (|List| (|Vector| |#1|)))) 37))
 (|subspace?| (((|Boolean|) $ $) 58))
 (|rank| (((|NonNegativeInteger|) (|List| (|Vector| |#1|))) 56)
  (((|NonNegativeInteger|) $) 55))
 (|nullSpace| (($ (|Matrix| |#1|)) 30))
 (|member?| (((|Boolean|) (|Vector| |#1|) $) 71))
 (|isBasis?| (((|Boolean|) (|List| (|Vector| |#1|))) 57))
 (|intBasis| (($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|))) 45)
  (($ $ $) 46) (($ (|List| $)) 53) (($ (|List| (|List| (|Vector| |#1|)))) 48))
 (|coordinatesIfCan|
  (((|Union| (|Vector| |#1|) "failed") (|Vector| |#1|) $) 74))
 (|coordinates| (((|Vector| |#1|) (|Vector| |#1|) $) 75))
 (|complementSpace| (($ $) 66) (($ $ (|NonNegativeInteger|)) 68)
  (($ (|List| (|Vector| |#1|))) 65)
  (($ (|List| (|Vector| |#1|)) (|NonNegativeInteger|)) 67))
 (|columnSpace| (($ (|Matrix| |#1|)) 28))
 (|coerce| (((|OutputForm|) $) 15) (((|List| (|Vector| |#1|)) $) 9))
 (|canonicalBasis| (($ (|NonNegativeInteger|)) 60))
 (|basis| (($ (|List| (|Vector| |#1|))) 27)) (|Zero| (($) 8 T CONST))
 (= (((|Boolean|) $ $) 59)) (+ (($ $ $) 40)) (* (($ $ $) 54)))
VSBASIS
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T))
((|constructor|
  (NIL
   "The domain \\spad{VectorSpaceBasis F} implements subspaces of finite dimensional vector spaces over a field \\spad{F}. A subspace is represented by a list of linearly independent coordinate vectors which constitute a basis. The empty list represents the space of dimension 0."))
 (|coordinates|
  (((|Vector| |#1|) (|Vector| |#1|) $)
   "\\spad{coordinates(v,{} B)} computes the coordinates of the vector \\spad{v} in the basis \\spad{B} if possible and produces an error otherwise."))
 (|coordinatesIfCan|
  (((|Union| (|Vector| |#1|) "failed") (|Vector| |#1|) $)
   "\\spad{coordinatesIfCan(v,{} B)} computes the coordinates of the vector \\spad{v} in the basis \\spad{B} if possible and returns \\spad{\"failed\"} otherwise."))
 (|member?|
  (((|Boolean|) (|Vector| |#1|) $)
   "\\spad{member?(v,{} B)} tests if the vector \\spad{v} is in the subspace spanned by \\spad{B}."))
 (|complementSpace|
  (($ (|List| (|Vector| |#1|)) (|NonNegativeInteger|))
   "\\spad{complementSpace(Lv,{} n)} builds a complement space of the subspace spanned by the list of vectors \\spad{LV}. The integer \\spad{n} provides the length of the vectors in the case of the empty basis.")
  (($ (|List| (|Vector| |#1|)))
   "\\spad{complementSpace Lv} builds a complement space of the subspace spanned by the list of vectors \\spad{LV}. This function fails with the empty basis.")
  (($ $ (|NonNegativeInteger|))
   "\\spad{complementSpace(B,{} n)} builds a complement space of the basis \\spad{B} from some vectors of the canonical basis \\spad{B}. The integer \\spad{n} provides the length of the vectors in the case of the empty basis.")
  (($ $)
   "\\spad{complementSpace B} builds a complement space of the basis \\spad{B} from some vectors of the canonical basis. This function fails with the empty basis."))
 (|canonicalBasis|
  (($ (|NonNegativeInteger|))
   "\\spad{canonicalBasis n} builds the canonical basis of the vector space of dimension \\spad{n}."))
 ((|Zero|)
  (($)
   "\\spad{0} creates the empty basis describing the space with the zero vector. The length of this zero vector is undefined."))
 (|subspace?|
  (((|Boolean|) $ $)
   "\\spad{subspace?(B1,{} B2)} tests if the first space is included in the second."))
 (|isBasis?|
  (((|Boolean|) (|List| (|Vector| |#1|)))
   "\\spad{isBasis? Lv} tests for linear independence of a list of vectors."))
 (|rank|
  (((|NonNegativeInteger|) $)
   "\\spad{rank b} computes the rank of a basis,{} \\spadignore{i.e.} the number of vectors in the basis.")
  (((|NonNegativeInteger|) (|List| (|Vector| |#1|)))
   "\\spad{rank Lv} computes the rank of a list of vectors."))
 (*
  (($ $ $)
   "\\spad{b1*b2} computes a basis of the intersection of two subspaces."))
 (|intBasis|
  (($ (|List| (|List| (|Vector| |#1|))))
   "\\spad{intBasis LLv} computes a basis of the intersection of the list of subspaces represented by \\spad{LLv}.")
  (($ (|List| $))
   "\\spad{intBasis Lb} computes a basis of the intersection of the list of subspaces represented by \\spad{LLv}.")
  (($ $ $)
   "\\spad{intBasis(B1,{} B2)} computes a basis of the intersection of the two subspaces.")
  (($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|)))
   "\\spad{intBasis(Lv1,{} Lv2)} computes a basis of the intersection of the two subspaces spanned by the vectors of \\spad{Lv1} and \\spad{Lv2}."))
 (+ (($ $ $) "\\spad{B1+B2} computes a basis of the sum of two subspaces."))
 (|sumBasis|
  (($ (|List| (|List| (|Vector| |#1|))))
   "\\spad{sumBasis LLv} computes a basis of the sum of the list of subspaces represented by \\spad{LLv}. This function is slightly more efficient than \\spad{reduce(sumBasis,{} LLv)}.")
  (($ (|List| $))
   "\\spad{sumBasis Lb} computes a basis of the sum of list of subspaces. This function is slightly more efficient than \\spad{reduce(sumBasis,{} Lb)}.")
  (($ (|List| (|Vector| |#1|)) (|List| (|Vector| |#1|)))
   "\\spad{sumBasis(Lv1,{} Lv2)} computes a basis of the sum of the two subspaces spanned by the vectors of \\spad{Lv1} and \\spad{Lv2}.")
  (($ $ $)
   "\\spad{sumBasis(B1,{} B2)} computes a basis of the sum of the two subspaces."))
 (|columnSpace|
  (($ (|Matrix| |#1|))
   "\\spad{columnSpace M} builds a basis of the image space of the linear transformation defined by the matrix \\spad{M}. This function calls the \\spad{columnSpace} from the \\spad{Matrix} domain. Only the signature changes."))
 (|nullSpace|
  (($ (|Matrix| |#1|))
   "\\spad{nullSpace M} builds a basis of the kernel of the linear transformation defined by the matrix \\spad{M}. This function calls the function \\spad{nullSpace} from the \\spad{Matrix} domain. Only the signature changes."))
 (|coerce|
  (((|List| (|Vector| |#1|)) $)
   "\\spad{coerce b} returns the basis as a list of vectors."))
 (|basis|
  (($ (|List| (|Vector| |#1|)))
   "\\spad{basis LV} extracts a basis of the subspace spanned by the list of vectors \\spad{LV}.")))
(("documentation" 0 8978) ("ancestors" 0 8919) ("parents" 0 8860)
 ("abbreviation" 0 8852) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 7634) ("modemaps" 0 3698) ("sourceFile" 0 3659)
 ("constructorCategory" 0 1916) ("constructorModemap" 0 52)
 ("constructorKind" 0 43) ("constructorForm" 0 20))