4217                (MAKEPROP '|EntireRing| 'NILADIC T)
(|EntireRing|)
|category|
(((|EntireRing|) (|Category|)) (T |EntireRing|))
(|Join| (|Ring|) (|noZeroDivisors|)
        (CATEGORY |domain| (SIGNATURE |exquo| ((|Union| $ "failed") $ $))
         (SIGNATURE |unitNormal|
          ((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $))
           $))
         (SIGNATURE |unitCanonical| ($ $))
         (SIGNATURE |associates?| ((|Boolean|) $ $))
         (SIGNATURE |unit?| ((|Boolean|) $))))
"/git/fricas/src/algebra/ENTIRER.spad"
((|exquo| (*1 *1 *1 *1) (|partial| |ofCategory| *1 (|EntireRing|)))
 (|unitNormal| (*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |unit| *1) (|:| |canonical| *1)
                         (|:| |associate| *1)))
   (|ofCategory| *1 (|EntireRing|))))
 (|unitCanonical| (*1 *1 *1) (|ofCategory| *1 (|EntireRing|)))
 (|associates?| (*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))
 (|unit?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|)))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6))
 (|unitCanonical| (($ $) 6)) (|unit?| (((|Boolean|) $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|recip| (((|Union| $ #1#) $) 6)) (|opposite?| (((|Boolean|) $ $) 6))
 (|one?| (((|Boolean|) $) 6)) (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|latex| (((|String|) $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|exquo| (((|Union| $ "failed") $ $) 6))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ (|Integer|)) 6))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|associator| (($ $ $ $) 6))
 (|associates?| (((|Boolean|) $ $) 6)) (|antiCommutator| (($ $ $) 6))
 (|annihilate?| (((|Boolean|) $ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST)) (= (((|Boolean|) $ $) 6))
 (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6)))
ENTIRER
(((|Ring|) . T) ((|noZeroDivisors|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CoercibleTo| (|OutputForm|)) . T) ((|LeftModule| |t#1|) . T)
 ((|Magma|) . T) ((|MagmaWithUnit|) . T) ((|Monoid|) . T)
 ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "Entire Rings (non-commutative Integral Domains),{} \\spadignore{i.e.} a ring not necessarily commutative which has no zero divisors. \\blankline"))
 (|unit?|
  (((|Boolean|) $)
   "\\spad{unit?(x)} tests whether \\spad{x} is a unit,{} \\spadignore{i.e.} is invertible."))
 (|associates?|
  (((|Boolean|) $ $)
   "\\spad{associates?(x,{} y)} tests whether \\spad{x} and \\spad{y} are associates,{} \\spadignore{i.e.} differ by a unit factor."))
 (|unitCanonical|
  (($ $) "\\spad{unitCanonical(x)} returns \\spad{unitNormal(x).canonical}."))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $)
   "\\spad{unitNormal(x)} tries to choose a canonical element from the associate class of \\spad{x}. The attribute canonicalUnitNormal,{} if asserted,{} means that the \"canonical\" element is the same across all associates of \\spad{x} if \\spad{unitNormal(x) = [u,{} c,{} a]} then \\spad{u*c = x},{} \\spad{a*u = 1}."))
 (|exquo|
  (((|Union| $ "failed") $ $)
   "\\spad{exquo(a,{} b)} either returns an element \\spad{c} such that \\spad{c*b=a} or \"failed\" if no such element can be found.")))
(("documentation" 0 3062) ("ancestors" 0 2474) ("parents" 0 2432)
 ("abbreviation" 0 2424) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1070) ("modemaps" 0 548) ("sourceFile" 0 509)
 ("constructorCategory" 0 131) ("constructorModemap" 0 82)
 ("constructorKind" 0 71) ("constructorForm" 0 56) ("NILADIC" 0 20))