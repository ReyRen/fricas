9997                (MAKEPROP '|FortranCodeTools| 'NILADIC T)
(|FortranCodeTools|)
|package|
(((|FortranCodeTools|)
  (CATEGORY |package|
   (SIGNATURE |fort_clean_lines| ((|List| (|String|)) (|List| (|String|))))
   (SIGNATURE |do_with_error_env3|
    ((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|)))))
   (SIGNATURE |do_with_error_env2|
    ((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|)))))
   (SIGNATURE |do_with_error_env1|
    ((|List| (|String|)) (|Mapping| (|List| (|String|)))))
   (SIGNATURE |expression2Fortran1|
    ((|List| (|String|)) (|Mapping| (|Symbol|)) (|OutputForm|) (|Boolean|)))
   (SIGNATURE |statement2Fortran| ((|List| (|String|)) (|OutputForm|)))
   (SIGNATURE |expression2Fortran| ((|List| (|String|)) (|OutputForm|)))
   (SIGNATURE |getStatement| ((|List| (|String|)) (|OutputForm|) (|Boolean|)))
   (SIGNATURE |changeExprLength| ((|Void|) (|Integer|)))
   (SIGNATURE |displayLines| ((|Void|) (|List| (|String|))))
   (SIGNATURE |dispStatement| ((|Void|) (|OutputForm|)))
   (SIGNATURE |fortFormatHead|
    ((|Void|) (|Symbol|)
     (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))
     (|List| (|Symbol|))))
   (SIGNATURE |fortFormatTypeLines| ((|Void|) (|String|) (|List| (|String|))))
   (SIGNATURE |fort_format_types|
    ((|Void|) (|String|) (|List| (|OutputForm|))))
   (SIGNATURE |indentFortLevel| ((|Void|) (|Integer|)))
   (SIGNATURE |checkType| ((|String|) (|String|)))
   (SIGNATURE |newFortranTempVar| ((|Symbol|)))
   (SIGNATURE |clear_used_intrinsics| ((|Void|)))
   (SIGNATURE |get_used_intrinsics| ((|List| (|String|))))
   (SIGNATURE |get_fort_indent| ((|Integer|)))))
 (T |FortranCodeTools|))
(CATEGORY |package|
 (SIGNATURE |fort_clean_lines| ((|List| (|String|)) (|List| (|String|))))
 (SIGNATURE |do_with_error_env3|
  ((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|)))))
 (SIGNATURE |do_with_error_env2|
  ((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|)))))
 (SIGNATURE |do_with_error_env1|
  ((|List| (|String|)) (|Mapping| (|List| (|String|)))))
 (SIGNATURE |expression2Fortran1|
  ((|List| (|String|)) (|Mapping| (|Symbol|)) (|OutputForm|) (|Boolean|)))
 (SIGNATURE |statement2Fortran| ((|List| (|String|)) (|OutputForm|)))
 (SIGNATURE |expression2Fortran| ((|List| (|String|)) (|OutputForm|)))
 (SIGNATURE |getStatement| ((|List| (|String|)) (|OutputForm|) (|Boolean|)))
 (SIGNATURE |changeExprLength| ((|Void|) (|Integer|)))
 (SIGNATURE |displayLines| ((|Void|) (|List| (|String|))))
 (SIGNATURE |dispStatement| ((|Void|) (|OutputForm|)))
 (SIGNATURE |fortFormatHead|
  ((|Void|) (|Symbol|)
   (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))
   (|List| (|Symbol|))))
 (SIGNATURE |fortFormatTypeLines| ((|Void|) (|String|) (|List| (|String|))))
 (SIGNATURE |fort_format_types| ((|Void|) (|String|) (|List| (|OutputForm|))))
 (SIGNATURE |indentFortLevel| ((|Void|) (|Integer|)))
 (SIGNATURE |checkType| ((|String|) (|String|)))
 (SIGNATURE |newFortranTempVar| ((|Symbol|)))
 (SIGNATURE |clear_used_intrinsics| ((|Void|)))
 (SIGNATURE |get_used_intrinsics| ((|List| (|String|))))
 (SIGNATURE |get_fort_indent| ((|Integer|))))
"/git/fricas/src/algebra/FCTOOL.spad"
((|get_fort_indent| (*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FortranCodeTools|))))
 (|get_used_intrinsics| (*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|clear_used_intrinsics| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))
 (|newFortranTempVar| (*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranCodeTools|))))
 (|checkType| (*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCodeTools|))))
 (|indentFortLevel| (*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|fort_format_types| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))
 (|fortFormatTypeLines| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))
 (|fortFormatHead| (*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))
 (|dispStatement| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|displayLines| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|changeExprLength| (*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|getStatement| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|expression2Fortran| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|statement2Fortran| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|expression2Fortran1| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Symbol|))) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|do_with_error_env1| (*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|do_with_error_env2| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|do_with_error_env3| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))
 (|fort_clean_lines| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|)))))
((|statement2Fortran| (((|List| (|String|)) (|OutputForm|)) 106))
 (|newFortranTempVar| (((|Symbol|)) 16))
 (|indentFortLevel| (((|Void|) (|Integer|)) 88))
 (|get_used_intrinsics| (((|List| (|String|))) 58))
 (|get_fort_indent| (((|Integer|)) 85))
 (|getStatement| (((|List| (|String|)) (|OutputForm|) (|Boolean|)) 109))
 (|fort_format_types| (((|Void|) (|String|) (|List| (|OutputForm|))) 127))
 (|fort_clean_lines| (((|List| (|String|)) (|List| (|String|))) 92))
 (|fortFormatTypeLines| (((|Void|) (|String|) (|List| (|String|))) 115))
 (|fortFormatHead|
  (((|Void|) (|Symbol|)
    (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))
    (|List| (|Symbol|)))
   114))
 (|expression2Fortran1|
  (((|List| (|String|)) (|Mapping| (|Symbol|)) (|OutputForm|) (|Boolean|))
   105))
 (|expression2Fortran| (((|List| (|String|)) (|OutputForm|)) 107))
 (|do_with_error_env3|
  (((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|)))) 94))
 (|do_with_error_env2|
  (((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|)))) 95))
 (|do_with_error_env1|
  (((|List| (|String|)) (|Mapping| (|List| (|String|)))) 96))
 (|displayLines| (((|Void|) (|List| (|String|))) 110))
 (|dispStatement| (((|Void|) (|OutputForm|)) 111))
 (|clear_used_intrinsics| (((|Void|)) 56))
 (|checkType| (((|String|) (|String|)) 17))
 (|changeExprLength| (((|Void|) (|Integer|)) 108)))
FCTOOL
((|get_fort_indent|
  (((|Integer|))
   "\\spad{get_fort_indent()} gets current amount of Frotran indentation"))
 (|get_used_intrinsics|
  (((|List| (|String|)))
   "\\spad{get_used_intrinsics()} gets list of used intrinsics"))
 (|clear_used_intrinsics|
  (((|Void|)) "\\spad{clear_used_intrinsics()} clear list of used intrinsics"))
 (|newFortranTempVar|
  (((|Symbol|))
   "\\spad{newFortranTempVar()} creates new name for temporary variable and puts it in TheSymbolTable"))
 (|checkType| (((|String|) (|String|)) "\\spad{checkType(t)}"))
 (|indentFortLevel| (((|Void|) (|Integer|)) "\\spad{indentFortLevel(i)}"))
 (|fort_format_types|
  (((|Void|) (|String|) (|List| (|OutputForm|)))
   "\\spad{fort_format_types(typeName,{} names)}"))
 (|fortFormatTypeLines|
  (((|Void|) (|String|) (|List| (|String|)))
   "\\spad{fortFormatTypeLines(typeName,{} l)}"))
 (|fortFormatHead|
  (((|Void|) (|Symbol|)
    (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))
    (|List| (|Symbol|)))
   "\\spad{fortFormatHead(name,{} returnType,{} args)}"))
 (|dispStatement| (((|Void|) (|OutputForm|)) "\\spad{dispStatement(of)}"))
 (|displayLines| (((|Void|) (|List| (|String|))) "\\spad{displayLines(l)}"))
 (|changeExprLength|
  (((|Void|) (|Integer|))
   "\\spad{changeExprLength(i)} changes limit on expression length by \\spad{i}."))
 (|getStatement|
  (((|List| (|String|)) (|OutputForm|) (|Boolean|))
   "\\spad{getStatement(of,{} int_to_floats?)}"))
 (|expression2Fortran|
  (((|List| (|String|)) (|OutputForm|)) "\\spad{expression2Fortran(of)}"))
 (|statement2Fortran|
  (((|List| (|String|)) (|OutputForm|)) "\\spad{statement2Fortran(of)}"))
 (|expression2Fortran1|
  (((|List| (|String|)) (|Mapping| (|Symbol|)) (|OutputForm|) (|Boolean|))
   "\\spad{expression2Fortran1(nf,{} of,{} int_to_floats?)}"))
 (|do_with_error_env1|
  (((|List| (|String|)) (|Mapping| (|List| (|String|))))
   "\\spad{do_with_error_env1(f)}"))
 (|do_with_error_env2|
  (((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|))))
   "\\spad{do_with_error_env2(int_to_floats?,{} f)}"))
 (|do_with_error_env3|
  (((|List| (|String|)) (|Boolean|) (|Mapping| (|List| (|String|))))
   "\\spad{do_with_error_env3(int_to_floats?,{} f)}")))
(("documentation" 0 7775) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 7768) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 6386) ("modemaps" 0 3208) ("sourceFile" 0 3170)
 ("constructorCategory" 0 1686) ("constructorModemap" 0 93)
 ("constructorKind" 0 83) ("constructorForm" 0 62) ("NILADIC" 0 20))