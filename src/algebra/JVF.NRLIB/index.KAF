8199                (|JetVectorField| JB D)
|domain|
(((|JetVectorField| |#1| |#2|)
  (|Join| (|Module| |#2|)
          (CATEGORY |domain| (SIGNATURE |diff| ($ |#1|))
           (SIGNATURE |diffX| ($ (|PositiveInteger|)))
           (SIGNATURE |diffU| ($ (|PositiveInteger|)))
           (SIGNATURE |diffP|
            ($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))))
           (SIGNATURE |coefficients| ((|List| |#2|) $))
           (SIGNATURE |directions| ((|List| |#1|) $))
           (SIGNATURE |coefficient| (|#2| $ |#1|)) (SIGNATURE |copy| ($ $))
           (SIGNATURE |commutator| ($ $ $))
           (SIGNATURE |table| ((|TwoDimensionalArray| $) (|List| $)))
           (SIGNATURE |lie| ($ $ $)) (SIGNATURE |eval| (|#2| $ |#2|))
           (SIGNATURE |prolong| ($ $ (|NonNegativeInteger|)))))
  (|JetBundleCategory|) (|JetBundleFunctionCategory| |#1|))
 (T |JetVectorField|))
(|Join| (|Module| |#2|)
        (CATEGORY |domain| (SIGNATURE |diff| ($ |#1|))
         (SIGNATURE |diffX| ($ (|PositiveInteger|)))
         (SIGNATURE |diffU| ($ (|PositiveInteger|)))
         (SIGNATURE |diffP|
          ($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))))
         (SIGNATURE |coefficients| ((|List| |#2|) $))
         (SIGNATURE |directions| ((|List| |#1|) $))
         (SIGNATURE |coefficient| (|#2| $ |#1|)) (SIGNATURE |copy| ($ $))
         (SIGNATURE |commutator| ($ $ $))
         (SIGNATURE |table| ((|TwoDimensionalArray| $) (|List| $)))
         (SIGNATURE |lie| ($ $ $)) (SIGNATURE |eval| (|#2| $ |#2|))
         (SIGNATURE |prolong| ($ $ (|NonNegativeInteger|)))))
"/git/fricas/src/algebra/JVF.spad"
((|diff| (*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|diffX| (*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|diffU| (*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|diffP| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 (|coefficients| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|directions| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|coefficient| (*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 (|copy| (*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|commutator| (*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|table| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetVectorField| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|TwoDimensionalArray| (|JetVectorField| *4 *5)))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 (|lie| (*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|eval| (*1 *2 *1 *2)
         (AND (|ofCategory| *3 (|JetBundleCategory|))
              (|isDomain| *1 (|JetVectorField| *3 *2))
              (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 (|prolong| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3)))))
((~= (((|Boolean|) $ $) NIL))
 (|zero?| (((|Boolean|) $) 52 (|has| |#2| (|AbelianMonoid|))))
 (|table| (((|TwoDimensionalArray| $) (|List| $)) 99))
 (|subtractIfCan|
  (((|Union| $ "failed") $ $) NIL (|has| |#2| (|AbelianGroup|))))
 (|sample| (($) NIL (|has| |#2| (|AbelianMonoid|)) CONST))
 (|prolong| (($ $ (|NonNegativeInteger|)) 85))
 (|opposite?| (((|Boolean|) $ $) NIL (|has| |#2| (|AbelianMonoid|))))
 (|lie| (($ $ $) 100)) (|latex| (((|String|) $) NIL))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|eval| ((|#2| $ |#2|) 87))
 (|directions| (((|List| |#1|) $) 43)) (|diffX| (($ (|PositiveInteger|)) 17))
 (|diffU| (($ (|PositiveInteger|)) 19))
 (|diffP| (($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))) 22))
 (|diff| (($ |#1|) 15)) (|copy| (($ $) 49)) (|commutator| (($ $ $) 89))
 (|coerce| (((|OutputForm|) $) 37)) (|coefficients| (((|List| |#2|) $) 40))
 (|coefficient| ((|#2| $ |#1|) 48))
 (|Zero| (($) 51 (|has| |#2| (|AbelianMonoid|)) CONST))
 (= (((|Boolean|) $ $) NIL))
 (- (($ $) 54 (|has| |#2| (|AbelianGroup|)))
    (($ $ $) 88 (|has| |#2| (|AbelianGroup|))))
 (+ (($ $ $) 61))
 (* (($ (|PositiveInteger|) $) NIL) (($ |#2| $) 63)
    (($ (|NonNegativeInteger|) $) NIL (|has| |#2| (|AbelianMonoid|)))
    (($ (|Integer|) $) NIL (|has| |#2| (|AbelianGroup|))) (($ $ |#2|) NIL)))
((|HasCategory| |#2| '(|AbelianGroup|)) (|HasCategory| |#2| '(|AbelianMonoid|))
 (OR (|HasCategory| |#2| '(|AbelianGroup|))
     (|HasCategory| |#2| '(|AbelianMonoid|))))
JVF
(((|Module| |#2|) . T))
(((|AbelianGroup|) |has| |t#1| (|AbelianGroup|))
 ((|AbelianMonoid|) |has| |t#1| (|AbelianMonoid|)) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|CancellationAbelianMonoid|) |has| |t#1| (|AbelianGroup|))
 ((|CoercibleTo| (|OutputForm|)) . T) ((|LeftModule| |t#1|) . T)
 ((|Module| |#2|) . T) ((|RightModule| |t#2|) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "\\spad{JetVectorField(JB,{} D)} implements vector fields over the jet bundle \\spad{JB} with coefficients from \\spad{D}. The fields operate on functions from \\spad{D}."))
 (|prolong|
  (($ $ (|NonNegativeInteger|))
   "\\spad{prolong(v,{} q)} prolongs a vector field \\spad{v} defined on the base space into the jet bundle of order \\spad{q}."))
 (|eval|
  ((|#2| $ |#2|)
   "\\spad{eval(v,{} f)} applies the vector field \\spad{v} to the function \\spad{f}."))
 (|lie|
  (($ $ $)
   "\\spad{lie(v,{} w)} calculates the Lie derivative of \\spad{w} with respect to \\spad{v}. (This yields the commutator of the fields.)"))
 (|table|
  (((|TwoDimensionalArray| $) (|List| $))
   "\\spad{table(lv)} computes the commutator table for a given list of vector fields."))
 (|commutator|
  (($ $ $)
   "\\spad{commutator(v,{} w)} calculates the commutator of two vector fields."))
 (|copy|
  (($ $) "\\spad{copy(v)} returns a copy of the vector field \\spad{v}."))
 (|coefficient|
  ((|#2| $ |#1|)
   "\\spad{coefficient(v,{} jb)} returns the coefficient of \\spad{v} in direction \\spad{jb}."))
 (|directions|
  (((|List| |#1|) $)
   "\\spad{directions(v)} yields the directions of the base vectors where \\spad{v} has non-vanishing coefficients."))
 (|coefficients|
  (((|List| |#2|) $)
   "\\spad{coefficients(v)} yields the coefficients of \\spad{v}."))
 (|diffP|
  (($ (|PositiveInteger|) (|List| (|NonNegativeInteger|)))
   "\\spad{diffP(i,{} mu)} returns the base vector field in direction \\spad{P(i,{} mu)}."))
 (|diffU|
  (($ (|PositiveInteger|))
   "\\spad{diffU(i)} returns the base vector field in direction \\spad{U(i)}."))
 (|diffX|
  (($ (|PositiveInteger|))
   "\\spad{diffX(i)} returns the base vector field in direction \\spad{X(i)}."))
 (|diff|
  (($ |#1|)
   "\\spad{diff(jb)} returns the base vector field in direction \\spad{jb}.")))
(("documentation" 0 6322) ("ancestors" 0 5942) ("parents" 0 5918)
 ("abbreviation" 0 5914) ("predicates" 0 5743) ("superDomain" 0 NIL)
 ("operationAlist" 0 4391) ("modemaps" 0 1628) ("sourceFile" 0 1593)
 ("constructorCategory" 0 893) ("constructorModemap" 0 53)
 ("constructorKind" 0 44) ("constructorForm" 0 20))