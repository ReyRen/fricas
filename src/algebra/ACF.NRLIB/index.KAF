10848               (MAKEPROP '|AlgebraicallyClosedField| 'NILADIC T)
(|AlgebraicallyClosedField|)
|category|
(((|AlgebraicallyClosedField|) (|Category|)) (T |AlgebraicallyClosedField|))
(|Join| (|Field|) (|RadicalCategory|)
        (CATEGORY |domain| (SIGNATURE |rootOf| ($ (|Polynomial| $)))
         (SIGNATURE |rootOf| ($ (|SparseUnivariatePolynomial| $)))
         (SIGNATURE |rootOf| ($ (|SparseUnivariatePolynomial| $) (|Symbol|)))
         (SIGNATURE |rootsOf| ((|List| $) (|Polynomial| $)))
         (SIGNATURE |rootsOf| ((|List| $) (|SparseUnivariatePolynomial| $)))
         (SIGNATURE |rootsOf|
          ((|List| $) (|SparseUnivariatePolynomial| $) (|Symbol|)))
         (SIGNATURE |zeroOf| ($ (|Polynomial| $)))
         (SIGNATURE |zeroOf| ($ (|SparseUnivariatePolynomial| $)))
         (SIGNATURE |zeroOf| ($ (|SparseUnivariatePolynomial| $) (|Symbol|)))
         (SIGNATURE |zerosOf| ((|List| $) (|Polynomial| $)))
         (SIGNATURE |zerosOf| ((|List| $) (|SparseUnivariatePolynomial| $)))
         (SIGNATURE |zerosOf|
          ((|List| $) (|SparseUnivariatePolynomial| $) (|Symbol|)))))
"/git/fricas/src/algebra/ACF.spad"
((|rootOf| (*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 (|rootOf| (*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 (|rootOf| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 (|rootsOf| (*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 (|rootsOf| (*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 (|rootsOf| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 (|zeroOf| (*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 (|zeroOf| (*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 (|zeroOf| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 (|zerosOf| (*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 (|zerosOf| (*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 (|zerosOf| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1)))))
((~= (((|Boolean|) $ $) 6))
 (|zerosOf| (((|List| $) (|Polynomial| $)) 6)
  (((|List| $) (|SparseUnivariatePolynomial| $)) 6)
  (((|List| $) (|SparseUnivariatePolynomial| $) (|Symbol|)) 6))
 (|zeroOf| (($ (|Polynomial| $)) 6) (($ (|SparseUnivariatePolynomial| $)) 6)
  (($ (|SparseUnivariatePolynomial| $) (|Symbol|)) 6))
 (|zero?| (((|Boolean|) $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6))
 (|unitCanonical| (($ $) 6)) (|unit?| (((|Boolean|) $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|squareFreePart| (($ $) 6))
 (|squareFree| (((|Factored| $) $) 6)) (|sqrt| (($ $) 6))
 (|sizeLess?| (((|Boolean|) $ $) 6)) (|sample| (($) 6 T CONST))
 (|rootsOf| (((|List| $) (|Polynomial| $)) 6)
  (((|List| $) (|SparseUnivariatePolynomial| $)) 6)
  (((|List| $) (|SparseUnivariatePolynomial| $) (|Symbol|)) 6))
 (|rootOf| (($ (|Polynomial| $)) 6) (($ (|SparseUnivariatePolynomial| $)) 6)
  (($ (|SparseUnivariatePolynomial| $) (|Symbol|)) 6))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|rem| (($ $ $) 6)) (|recip| (((|Union| $ #1#) $) 6)) (|quo| (($ $ $) 6))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)) 6))
 (|prime?| (((|Boolean|) $) 6)) (|opposite?| (((|Boolean|) $ $) 6))
 (|one?| (((|Boolean|) $) 6)) (|nthRoot| (($ $ (|Integer|)) 6))
 (|multiEuclidean| (((|Union| (|List| $) #2="failed") (|List| $) $) 6))
 (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) 6))
 (|lcm| (($ $ $) 6) (($ (|List| $)) 6)) (|latex| (((|String|) $) 6))
 (|inv| (($ $) 6)) (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   6))
 (|gcd| (($ $ $) 6) (($ (|List| $)) 6)) (|factor| (((|Factored| $) $) 6))
 (|extendedEuclidean|
  (((|Record| (|:| |coef1| $) (|:| |coef2| $) (|:| |generator| $)) $ $) 6)
  (((|Union| (|Record| (|:| |coef1| $) (|:| |coef2| $)) #2#) $ $ $) 6))
 (|exquo| (((|Union| $ "failed") $ $) 6))
 (|expressIdealMember| (((|Union| (|List| $) "failed") (|List| $) $) 6))
 (|euclideanSize| (((|NonNegativeInteger|) $) 6))
 (|divide| (((|Record| (|:| |quotient| $) (|:| |remainder| $)) $ $) 6))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ (|Integer|)) 6) (($ $) 6)
           (($ (|Fraction| (|Integer|))) 6))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|associator| (($ $ $ $) 6))
 (|associates?| (((|Boolean|) $ $) 6)) (|antiCommutator| (($ $ $) 6))
 (|annihilate?| (((|Boolean|) $ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6)
  (($ $ (|Integer|)) 6) (($ $ (|Fraction| (|Integer|))) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST)) (= (((|Boolean|) $ $) 6))
 (/ (($ $ $) 6)) (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6) (($ $ (|Fraction| (|Integer|))) 6)
    (($ (|Fraction| (|Integer|)) $) 6)))
ACF
(((|Field|) . T) ((|RadicalCategory|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) . T) ((|Algebra| $) . T)
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CommutativeRing|) . T) ((|CommutativeStar|) . T) ((|DivisionRing|) . T)
 ((|EntireRing|) . T) ((|EuclideanDomain|) . T) ((|Field|) . T)
 ((|GcdDomain|) . T) ((|IntegralDomain|) . T) ((|LeftModule| |t#1|) . T)
 ((|LeftOreRing|) . T) ((|Magma|) . T) ((|MagmaWithUnit|) . T)
 ((|Module| |t#1|) . T) ((|Monoid|) . T) ((|NonAssociativeRing|) . T)
 ((|NonAssociativeRng|) . T) ((|NonAssociativeSemiRing|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|PrincipalIdealDomain|) . T)
 ((|RadicalCategory|) . T) ((|RightModule| |t#2|) . T) ((|Ring|) . T)
 ((|Rng|) . T) ((|SemiGroup|) . T) ((|SemiRing|) . T) ((|SemiRng|) . T)
 ((|SetCategory|) . T) ((|TwoSidedRecip|) . T)
 ((|UniqueFactorizationDomain|) . T) ((|canonicalUnitNormal|) . T)
 ((|canonicalsClosed|) . T) ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor| (NIL "Model for algebraically closed fields."))
 (|zerosOf|
  (((|List| $) (|SparseUnivariatePolynomial| $) (|Symbol|))
   "\\spad{zerosOf(p,{} y)} returns \\spad{[y1,{} ...,{} yn]} such that \\spad{p(\\spad{yi}) = 0}. The \\spad{yi}\\spad{'s} are expressed in radicals if possible,{} and otherwise as implicit algebraic quantities containing new symbols which display as \\spad{'\\%z0},{} \\spad{'\\%z1},{} ...; The new symbols are bound in the interpreter to respective values.")
  (((|List| $) (|SparseUnivariatePolynomial| $))
   "\\spad{zerosOf(p)} returns \\spad{[y1,{} ...,{} yn]} such that \\spad{p(\\spad{yi}) = 0}. The \\spad{yi}\\spad{'s} are expressed in radicals if possible. Otherwise they are implicit algebraic quantities containing new symbols. The new symbols are bound in the interpreter to the respective values.")
  (((|List| $) (|Polynomial| $))
   "\\spad{zerosOf(p)} returns \\spad{[y1,{} ...,{} yn]} such that \\spad{p(\\spad{yi}) = 0}. The \\spad{yi}\\spad{'s} are expressed in radicals if possible. Otherwise they are implicit algebraic quantities containing new symbols. The new symbols are bound in the interpreter to the respective values. Error: if \\spad{p} has more than one variable \\spad{y}."))
 (|zeroOf|
  (($ (|SparseUnivariatePolynomial| $) (|Symbol|))
   "\\spad{zeroOf(p,{} y)} returns \\spad{y} such that \\spad{p(y) = 0}; if possible,{} \\spad{y} is expressed in terms of radicals. Otherwise it is an implicit algebraic quantity which displays as \\spad{'y}.")
  (($ (|SparseUnivariatePolynomial| $))
   "\\spad{zeroOf(p)} returns \\spad{y} such that \\spad{p(y) = 0}; if possible,{} \\spad{y} is expressed in terms of radicals. Otherwise it is an implicit algebraic quantity.")
  (($ (|Polynomial| $))
   "\\spad{zeroOf(p)} returns \\spad{y} such that \\spad{p(y) = 0}. If possible,{} \\spad{y} is expressed in terms of radicals. Otherwise it is an implicit algebraic quantity. Error: if \\spad{p} has more than one variable \\spad{y}."))
 (|rootsOf|
  (((|List| $) (|SparseUnivariatePolynomial| $) (|Symbol|))
   "\\spad{rootsOf(p,{} z)} returns \\spad{[y1,{} ...,{} yn]} such that \\spad{p(\\spad{yi}) = 0}; The returned roots contain new symbols \\spad{'\\%z0},{} \\spad{'\\%z1} ...; Note: the new symbols are bound in the interpreter to the respective values.")
  (((|List| $) (|SparseUnivariatePolynomial| $))
   "\\spad{rootsOf(p)} returns \\spad{[y1,{} ...,{} yn]} such that \\spad{p(\\spad{yi}) = 0}. Note: the returned values \\spad{y1},{} ...,{} \\spad{yn} contain new symbols which are bound in the interpreter to the respective values.")
  (((|List| $) (|Polynomial| $))
   "\\spad{rootsOf(p)} returns \\spad{[y1,{} ...,{} yn]} such that \\spad{p(\\spad{yi}) = 0}. Note: the returned values \\spad{y1},{} ...,{} \\spad{yn} contain new symbols which are bound in the interpreter to the respective values. Error: if \\spad{p} has more than one variable \\spad{y}."))
 (|rootOf|
  (($ (|SparseUnivariatePolynomial| $) (|Symbol|))
   "\\spad{rootOf(p,{} y)} returns \\spad{y} such that \\spad{p(y) = 0}. The object returned displays as \\spad{'y}.")
  (($ (|SparseUnivariatePolynomial| $))
   "\\spad{rootOf(p)} returns \\spad{y} such that \\spad{p(y) = 0}.")
  (($ (|Polynomial| $))
   "\\spad{rootOf(p)} returns \\spad{y} such that \\spad{p(y) = 0}. Error: if \\spad{p} has more than one variable \\spad{y}.")))
(("documentation" 0 7465) ("ancestors" 0 6374) ("parents" 0 6330)
 ("abbreviation" 0 6326) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 3065) ("modemaps" 0 1144) ("sourceFile" 0 1109)
 ("constructorCategory" 0 187) ("constructorModemap" 0 110)
 ("constructorKind" 0 99) ("constructorForm" 0 70) ("NILADIC" 0 20))