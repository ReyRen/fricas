11222               (|MatrixLinearAlgebraFunctions| R |Row| |Col| M)
|package|
(((|MatrixLinearAlgebraFunctions| |#1| |#2| |#3| |#4|)
  (CATEGORY |package| (SIGNATURE |determinant| (|#1| |#4|))
   (SIGNATURE |minordet| (|#1| |#4|))
   (SIGNATURE |elRow1!| (|#4| |#4| (|Integer|) (|Integer|)))
   (SIGNATURE |elRow2!| (|#4| |#4| |#1| (|Integer|) (|Integer|)))
   (SIGNATURE |elColumn2!| (|#4| |#4| |#1| (|Integer|) (|Integer|)))
   (IF (|has| |#1| (|IntegralDomain|))
       (PROGN
        (SIGNATURE |rank| ((|NonNegativeInteger|) |#4|))
        (SIGNATURE |nullity| ((|NonNegativeInteger|) |#4|))
        (SIGNATURE |nullSpace| ((|List| |#3|) |#4|))
        (SIGNATURE |fractionFreeGauss!| (|#4| |#4|))
        (SIGNATURE |invertIfCan| ((|Union| |#4| "failed") |#4|))
        (SIGNATURE |adjoint|
         ((|Record| (|:| |adjMat| |#4|) (|:| |detMat| |#1|)) |#4|)))
       |noBranch|)
   (IF (|has| |#1| (|EuclideanDomain|))
       (PROGN
        (SIGNATURE |rowEchelon| (|#4| |#4|))
        (SIGNATURE |normalizedDivide|
         ((|Record| (|:| |quotient| |#1|) (|:| |remainder| |#1|)) |#1| |#1|)))
       |noBranch|)
   (IF (|has| |#1| (|Field|))
       (SIGNATURE |inverse| ((|Union| |#4| "failed") |#4|))
       |noBranch|))
  (|CommutativeRing|) (|FiniteLinearAggregate| |#1|)
  (|FiniteLinearAggregate| |#1|) (|MatrixCategory| |#1| |#2| |#3|))
 (T |MatrixLinearAlgebraFunctions|))
(CATEGORY |package| (SIGNATURE |determinant| (|#1| |#4|))
 (SIGNATURE |minordet| (|#1| |#4|))
 (SIGNATURE |elRow1!| (|#4| |#4| (|Integer|) (|Integer|)))
 (SIGNATURE |elRow2!| (|#4| |#4| |#1| (|Integer|) (|Integer|)))
 (SIGNATURE |elColumn2!| (|#4| |#4| |#1| (|Integer|) (|Integer|)))
 (IF (|has| |#1| (|IntegralDomain|))
     (PROGN
      (SIGNATURE |rank| ((|NonNegativeInteger|) |#4|))
      (SIGNATURE |nullity| ((|NonNegativeInteger|) |#4|))
      (SIGNATURE |nullSpace| ((|List| |#3|) |#4|))
      (SIGNATURE |fractionFreeGauss!| (|#4| |#4|))
      (SIGNATURE |invertIfCan| ((|Union| |#4| "failed") |#4|))
      (SIGNATURE |adjoint|
       ((|Record| (|:| |adjMat| |#4|) (|:| |detMat| |#1|)) |#4|)))
     |noBranch|)
 (IF (|has| |#1| (|EuclideanDomain|))
     (PROGN
      (SIGNATURE |rowEchelon| (|#4| |#4|))
      (SIGNATURE |normalizedDivide|
       ((|Record| (|:| |quotient| |#1|) (|:| |remainder| |#1|)) |#1| |#1|)))
     |noBranch|)
 (IF (|has| |#1| (|Field|))
     (SIGNATURE |inverse| ((|Union| |#4| "failed") |#4|))
     |noBranch|))
"/git/fricas/src/algebra/MATLIN.spad"
((|inverse| (*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 (|normalizedDivide| (*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *6))
       (|ofCategory| *6 (|MatrixCategory| *3 *4 *5))))
 (|rowEchelon| (*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 (|adjoint| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |adjMat| *3) (|:| |detMat| *4)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 (|invertIfCan| (*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 (|fractionFreeGauss!| (*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 (|nullSpace| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 (|nullity| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 (|rank| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 (|elColumn2!| (*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))
 (|elRow2!| (*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))
 (|elRow1!| (*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))
 (|minordet| (*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 (|determinant| (*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5)))))
((|rowEchelon| ((|#4| |#4|) 67 (|has| |#1| (|EuclideanDomain|))))
 (|rank| (((|NonNegativeInteger|) |#4|) 69 (|has| |#1| (|IntegralDomain|))))
 (|nullity| (((|NonNegativeInteger|) |#4|) 71 (|has| |#1| (|IntegralDomain|))))
 (|nullSpace| (((|List| |#3|) |#4|) 78 (|has| |#1| (|IntegralDomain|))))
 (|normalizedDivide|
  (((|Record| (|:| |quotient| |#1|) (|:| |remainder| |#1|)) |#1| |#1|) 97
   (|has| |#1| (|EuclideanDomain|))))
 (|minordet| ((|#1| |#4|) 31))
 (|invertIfCan|
  (((|Union| |#4| "failed") |#4|) 61 (|has| |#1| (|IntegralDomain|))))
 (|inverse| (((|Union| |#4| "failed") |#4|) 75 (|has| |#1| (|Field|))))
 (|fractionFreeGauss!| ((|#4| |#4|) 54 (|has| |#1| (|IntegralDomain|))))
 (|elRow2!| ((|#4| |#4| |#1| (|Integer|) (|Integer|)) 39))
 (|elRow1!| ((|#4| |#4| (|Integer|) (|Integer|)) 34))
 (|elColumn2!| ((|#4| |#4| |#1| (|Integer|) (|Integer|)) 44))
 (|determinant| ((|#1| |#4|) 73))
 (|adjoint|
  (((|Record| (|:| |adjMat| |#4|) (|:| |detMat| |#1|)) |#4|) 57
   (|has| |#1| (|IntegralDomain|)))))
((|HasCategory| |#1| '(|Field|)) (|HasCategory| |#1| '(|EuclideanDomain|))
 (|HasCategory| |#1| '(|IntegralDomain|)))
MATLIN
((|constructor|
  (NIL
   "\\spadtype{MatrixLinearAlgebraFunctions} provides functions to compute inverses and canonical forms."))
 (|inverse|
  (((|Union| |#4| "failed") |#4|)
   "\\spad{inverse(m)} returns the inverse of the matrix. If the matrix is not invertible,{} \"failed\" is returned. Error: if the matrix is not square."))
 (|normalizedDivide|
  (((|Record| (|:| |quotient| |#1|) (|:| |remainder| |#1|)) |#1| |#1|)
   "\\spad{normalizedDivide(n,{} d)} returns a normalized quotient and remainder such that consistently unique representatives for the residue class are chosen,{} \\spadignore{e.g.} positive remainders"))
 (|rowEchelon|
  ((|#4| |#4|)
   "\\spad{rowEchelon(m)} returns the row echelon form of the matrix \\spad{m}."))
 (|adjoint|
  (((|Record| (|:| |adjMat| |#4|) (|:| |detMat| |#1|)) |#4|)
   "\\spad{adjoint(m)} returns the ajoint matrix of \\spad{m} (\\spadignore{i.e.} the matrix \\spad{n} such that \\spad{m*n} = determinant(\\spad{m})*id) and the detrminant of \\spad{m}."))
 (|invertIfCan|
  (((|Union| |#4| "failed") |#4|)
   "\\spad{invertIfCan(m)} returns the inverse of \\spad{m} over \\spad{R}"))
 (|fractionFreeGauss!|
  ((|#4| |#4|)
   "\\spad{fractionFreeGauss(m)} performs the fraction free gaussian elimination on the matrix \\spad{m}."))
 (|nullSpace|
  (((|List| |#3|) |#4|)
   "\\spad{nullSpace(m)} returns a basis for the null space of the matrix \\spad{m}."))
 (|nullity|
  (((|NonNegativeInteger|) |#4|)
   "\\spad{nullity(m)} returns the mullity of the matrix \\spad{m}. This is the dimension of the null space of the matrix \\spad{m}."))
 (|rank|
  (((|NonNegativeInteger|) |#4|)
   "\\spad{rank(m)} returns the rank of the matrix \\spad{m}."))
 (|elColumn2!|
  ((|#4| |#4| |#1| (|Integer|) (|Integer|))
   "\\spad{elColumn2!(m,{} a,{} i,{} j)} adds to column \\spad{i} a*column(\\spad{m},{} \\spad{j}) : elementary operation of second kind. (\\spad{i} \\spad{~=j})"))
 (|elRow2!|
  ((|#4| |#4| |#1| (|Integer|) (|Integer|))
   "\\spad{elRow2!(m,{} a,{} i,{} j)} adds to row \\spad{i} a*row(\\spad{m},{} \\spad{j}) : elementary operation of second kind. (\\spad{i} \\spad{~=j})"))
 (|elRow1!|
  ((|#4| |#4| (|Integer|) (|Integer|))
   "\\spad{elRow1!(m,{} i,{} j)} swaps rows \\spad{i} and \\spad{j} of matrix \\spad{m} : elementary operation of first kind"))
 (|minordet|
  ((|#1| |#4|)
   "\\spad{minordet(m)} computes the determinant of the matrix \\spad{m} using minors. Error: if the matrix is not square."))
 (|determinant|
  ((|#1| |#4|)
   "\\spad{determinant(m)} returns the determinant of the matrix \\spad{m}. an error message is returned if the matrix is not square.")))
(("documentation" 0 8589) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 8582) ("predicates" 0 8464) ("superDomain" 0 NIL)
 ("operationAlist" 0 7449) ("modemaps" 0 2476) ("sourceFile" 0 2438)
 ("constructorCategory" 0 1389) ("constructorModemap" 0 79)
 ("constructorKind" 0 69) ("constructorForm" 0 20))