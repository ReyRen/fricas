16927               (|DataList| S)
|domain|
(((|DataList| |#1|)
  (|Join| (|ListAggregate| |#1|)
          (CATEGORY |domain| (SIGNATURE |coerce| ($ (|List| |#1|)))
           (SIGNATURE |coerce| ((|List| |#1|) $))
           (SIGNATURE |datalist| ($ (|List| |#1|)))
           (SIGNATURE |elt| ($ $ "unique")) (SIGNATURE |elt| ($ $ "sort"))
           (SIGNATURE |elt| ((|NonNegativeInteger|) $ "count"))))
  (|OrderedSet|))
 (T |DataList|))
(|Join| (|ListAggregate| |#1|)
        (CATEGORY |domain| (SIGNATURE |coerce| ($ (|List| |#1|)))
         (SIGNATURE |coerce| ((|List| |#1|) $))
         (SIGNATURE |datalist| ($ (|List| |#1|)))
         (SIGNATURE |elt| ($ $ "unique")) (SIGNATURE |elt| ($ $ "sort"))
         (SIGNATURE |elt| ((|NonNegativeInteger|) $ "count"))))
"/git/fricas/src/algebra/DLIST.spad"
((|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
                (|isDomain| *1 (|DataList| *3))))
 (|coerce| (*1 *2 *1)
           (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DataList| *3))
                (|ofCategory| *3 (|OrderedSet|))))
 (|datalist| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))
 (|elt| (*1 *1 *1 *2)
  (AND (|isDomain| *2 "unique") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 (|elt| (*1 *1 *1 *2)
  (AND (|isDomain| *2 "sort") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 (|elt| (*1 *2 *1 *3)
  (AND (|isDomain| *3 "count") (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DataList| *4)) (|ofCategory| *4 (|OrderedSet|)))))
((~=
  (((|Boolean|) $ $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|value| ((|#1| $) NIL))
 (|trim|
  (($ $ |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|third| ((|#1| $) NIL)) (|tail| (($ $) NIL))
 (|swap!|
  (((|Void|) $ (|Integer|) (|Integer|)) NIL (|has| $ (|shallowlyMutable|))))
 (|split!| (($ $ (|NonNegativeInteger|)) NIL (|has| $ (|shallowlyMutable|))))
 (|sorted?|
  (((|Boolean|) $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (((|Boolean|) (|Mapping| (|Boolean|) |#1| |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|sort!|
  (($ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|))
        (|has| |#1| (|OrderedSet|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|)))))
 (|sort|
  (($ $) 10 (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) NIL (|has| $ (|finiteAggregate|))))
 (|smaller?|
  (((|Boolean|) $ $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))))
 (|size?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|setvalue!| ((|#1| $ |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|setrest!| (($ $ $) NIL (|has| $ (|shallowlyMutable|))))
 (|setlast!| ((|#1| $ |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|setfirst!| ((|#1| $ |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|setelt!| ((|#1| $ #1="value" |#1|) NIL (|has| $ (|shallowlyMutable|)))
  ((|#1| $ #2="first" |#1|) NIL (|has| $ (|shallowlyMutable|)))
  (($ $ #3="rest" $) NIL (|has| $ (|shallowlyMutable|)))
  ((|#1| $ #4="last" |#1|) NIL (|has| $ (|shallowlyMutable|)))
  ((|#1| $ (|UniversalSegment| (|Integer|)) |#1|) NIL
   (|has| $ (|shallowlyMutable|)))
  ((|#1| $ (|Integer|) |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|setchildren!| (($ $ (|List| $)) NIL (|has| $ (|shallowlyMutable|))))
 (|select!| (($ (|Mapping| (|Boolean|) |#1|) $) NIL))
 (|select|
  (($ (|Mapping| (|Boolean|) |#1|) $) NIL (|has| $ (|finiteAggregate|))))
 (|second| ((|#1| $) NIL)) (|sample| (($) NIL T CONST))
 (|rightTrim|
  (($ $ |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|reverse!|
  (($ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|)))))
 (|reverse| (($ $) NIL (|has| $ (|finiteAggregate|))))
 (|rest| (($ $) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|removeDuplicates!| (($ $) NIL (|has| |#1| (|BasicType|))))
 (|removeDuplicates|
  (($ $) 7 (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|remove!| (($ |#1| $) NIL (|has| |#1| (|BasicType|)))
  (($ (|Mapping| (|Boolean|) |#1|) $) NIL))
 (|remove|
  (($ (|Mapping| (|Boolean|) |#1|) $) NIL (|has| $ (|finiteAggregate|)))
  (($ |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|reduce|
  ((|#1| (|Mapping| |#1| |#1| |#1|) $) NIL (|has| $ (|finiteAggregate|)))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1|) NIL (|has| $ (|finiteAggregate|)))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1| |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|qsetrest!| (($ $ $) NIL (|has| $ (|shallowlyMutable|))))
 (|qsetfirst!| ((|#1| $ |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|qsetelt!| ((|#1| $ (|Integer|) |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|qelt| ((|#1| $ (|Integer|)) NIL))
 (|possiblyInfinite?| (((|Boolean|) $) NIL))
 (|position|
  (((|Integer|) |#1| $ (|Integer|)) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|))))
  (((|Integer|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|))))
  (((|Integer|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|parts| (((|List| |#1|) $) NIL (|has| $ (|finiteAggregate|))))
 (|nodes| (((|List| $) $) NIL))
 (|node?| (((|Boolean|) $ $) NIL (|has| |#1| (|BasicType|))))
 (|new| (($ (|NonNegativeInteger|) |#1|) NIL))
 (|more?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|minIndex| (((|Integer|) $) NIL (|has| (|Integer|) (|OrderedSet|))))
 (|min|
  ((|#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (|merge!| (($ $ $) NIL (|has| |#1| (|OrderedSet|)))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $ $) NIL))
 (|merge|
  (($ $ $) NIL (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $ $) NIL
   (|has| $ (|finiteAggregate|))))
 (|members| (((|List| |#1|) $) NIL (|has| $ (|finiteAggregate|))))
 (|member?|
  (((|Boolean|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|maxIndex| (((|Integer|) $) NIL (|has| (|Integer|) (|OrderedSet|))))
 (|max|
  ((|#1| (|Mapping| (|Boolean|) |#1| |#1|) $) NIL
   (|has| $ (|finiteAggregate|)))
  ((|#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (|map!| (($ (|Mapping| |#1| |#1|) $) NIL (|has| $ (|shallowlyMutable|))))
 (|map| (($ (|Mapping| |#1| |#1|) $) NIL)
  (($ (|Mapping| |#1| |#1| |#1|) $ $) NIL))
 (|list| (($ |#1|) NIL)) (|less?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|leftTrim|
  (($ $ |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|leaves| (((|List| |#1|) $) NIL)) (|leaf?| (((|Boolean|) $) NIL))
 (|latex|
  (((|String|) $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|last| ((|#1| $) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|insert!| (($ $ $ (|Integer|)) NIL) (($ |#1| $ (|Integer|)) NIL))
 (|insert| (($ $ $ (|Integer|)) NIL) (($ |#1| $ (|Integer|)) NIL))
 (|indices| (((|List| (|Integer|)) $) NIL))
 (|index?| (((|Boolean|) (|Integer|) $) NIL))
 (|hashUpdate!|
  (((|HashState|) (|HashState|) $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|hash|
  (((|SingleInteger|) $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|first| ((|#1| $) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|find| (((|Union| |#1| "failed") (|Mapping| (|Boolean|) |#1|) $) NIL))
 (|fill!| (($ $ |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|explicitlyFinite?| (((|Boolean|) $) NIL))
 (|every?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|eval|
  (($ $ (|List| (|Equation| |#1|))) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|Equation| |#1|)) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ |#1| |#1|) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|List| |#1|) (|List| |#1|)) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|)))))
 (|eq?| (((|Boolean|) $ $) NIL))
 (|entry?|
  (((|Boolean|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|entries| (((|List| |#1|) $) NIL)) (|empty?| (((|Boolean|) $) NIL))
 (|empty| (($) NIL))
 (|elt| ((|#1| $ #1#) NIL) ((|#1| $ #2#) NIL) (($ $ #3#) NIL)
  ((|#1| $ #4#) NIL) (($ $ (|UniversalSegment| (|Integer|))) NIL)
  ((|#1| $ (|Integer|)) NIL) ((|#1| $ (|Integer|) |#1|) NIL) (($ $ "unique") 9)
  (($ $ "sort") 12) (((|NonNegativeInteger|) $ "count") 16))
 (|distance| (((|Integer|) $ $) NIL))
 (|delete!| (($ $ (|UniversalSegment| (|Integer|))) NIL)
  (($ $ (|Integer|)) NIL))
 (|delete| (($ $ (|UniversalSegment| (|Integer|))) NIL)
           (($ $ (|Integer|)) NIL))
 (|datalist| (($ (|List| |#1|)) 22)) (|cyclic?| (((|Boolean|) $) NIL))
 (|cycleTail| (($ $) NIL))
 (|cycleSplit!| (($ $) NIL (|has| $ (|shallowlyMutable|))))
 (|cycleLength| (((|NonNegativeInteger|) $) NIL)) (|cycleEntry| (($ $) NIL))
 (|count|
  (((|NonNegativeInteger|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|)))
  (((|NonNegativeInteger|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|copyInto!|
  (($ $ $ (|Integer|)) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|)))))
 (|copy| (($ $) NIL))
 (|convert|
  (((|InputForm|) $) NIL (|has| |#1| (|ConvertibleTo| (|InputForm|)))))
 (|construct| (($ (|List| |#1|)) NIL))
 (|concat!| (($ $ $) NIL) (($ $ |#1|) NIL))
 (|concat| (($ $ $) NIL) (($ |#1| $) NIL) (($ (|List| $)) NIL)
           (($ $ |#1|) NIL))
 (|coerce|
  (((|OutputForm|) $) 21
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|CoercibleTo| (|OutputForm|)))))
  (($ (|List| |#1|)) 17) (((|List| |#1|) $) 18))
 (|children| (((|List| $) $) NIL))
 (|child?| (((|Boolean|) $ $) NIL (|has| |#1| (|BasicType|))))
 (|any?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (>=
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (>
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (=
  (((|Boolean|) $ $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (<=
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (<
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (|#| (((|NonNegativeInteger|) $) 14 (|has| $ (|finiteAggregate|)))))
((|HasCategory| |#1| '(|OrderedSet|))
 (|HasCategory| |#1| (LIST '|ConvertibleTo| '(|InputForm|)))
 (|HasCategory| |#1| '(|BasicType|)) (|HasCategory| |#1| '(|Comparable|))
 (OR (|HasCategory| |#1| '(|Comparable|)) (|HasCategory| |#1| '(|OrderedSet|)))
 (|HasCategory| |#1| '(|SetCategory|))
 (AND (|HasCategory| |#1| (LIST '|Evalable| (|devaluate| |#1|)))
      (|HasCategory| |#1| '(|SetCategory|)))
 (OR (|HasCategory| |#1| '(|BasicType|)) (|HasCategory| |#1| '(|Comparable|))
     (|HasCategory| |#1| '(|OrderedSet|))
     (|HasCategory| |#1| '(|SetCategory|)))
 (OR (|HasCategory| |#1| '(|Comparable|)) (|HasCategory| |#1| '(|OrderedSet|))
     (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| |#1| (LIST '|CoercibleTo| '(|OutputForm|)))
 (OR (|HasCategory| |#1| (LIST '|CoercibleTo| '(|OutputForm|)))
     (|HasCategory| |#1| '(|Comparable|)) (|HasCategory| |#1| '(|OrderedSet|))
     (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| (|Integer|) '(|OrderedSet|))
 (|HasCategory| $ '(|finiteAggregate|))
 (AND (|HasCategory| |#1| '(|OrderedSet|))
      (|HasCategory| $ '(|finiteAggregate|)))
 (OR (|HasCategory| |#1| (LIST '|CoercibleTo| '(|OutputForm|)))
     (AND (|HasCategory| |#1| '(|Comparable|))
          (|HasCategory| $ '(|finiteAggregate|)))
     (AND (|HasCategory| |#1| '(|OrderedSet|))
          (|HasCategory| $ '(|finiteAggregate|))))
 (OR
  (AND (|HasCategory| |#1| '(|Comparable|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|OrderedSet|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (|HasCategory| |#1| '(|SetCategory|)))
 (OR
  (AND (|HasCategory| |#1| '(|Comparable|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|OrderedSet|))
       (|HasCategory| $ '(|finiteAggregate|))))
 (AND (|HasCategory| |#1| '(|BasicType|))
      (|HasCategory| $ '(|finiteAggregate|)))
 (OR
  (AND (|HasCategory| |#1| '(|BasicType|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|Comparable|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|OrderedSet|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| $ '(|shallowlyMutable|))
 (AND (|HasCategory| |#1| '(|OrderedSet|))
      (|HasCategory| $ '(|finiteAggregate|))
      (|HasCategory| $ '(|shallowlyMutable|)))
 (AND (|HasCategory| $ '(|finiteAggregate|))
      (|HasCategory| $ '(|shallowlyMutable|))))
DLIST
(((|ListAggregate| |#1|) . T))
(((|Aggregate|) . T)
 ((|BasicType|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|BasicType|))))
 ((|CoercibleTo| (|OutputForm|)) OR
  (|has| |t#1| (|CoercibleTo| (|OutputForm|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|Collection| |t#1|) . T)
 ((|Comparable|) OR
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|ConvertibleTo| (|InputForm|)) |has| |t#1| (|ConvertibleTo| (|InputForm|)))
 ((|Eltable| (|UniversalSegment| (|Integer|)) $) . T)
 ((|Eltable| |t#1| |t#2|) . T) ((|EltableAggregate| |t#1| |t#2|) . T)
 ((|Evalable| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|ExtensibleLinearAggregate| |t#1|) . T)
 ((|FiniteLinearAggregate| |t#1|) . T) ((|HomogeneousAggregate| |t#2|) . T)
 ((|HomogeneousAggregate| |t#1|) . T)
 ((|IndexedAggregate| (|Integer|) |t#1|) . T)
 ((|InnerEvalable| |t#1| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|LinearAggregate| |t#1|) . T) ((|ListAggregate| |#1|) . T)
 ((|OrderedSet|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|PartialOrder|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|RecursiveAggregate| |t#1|) . T)
 ((|SetCategory|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|StreamAggregate| |t#1|) . T) ((|Type|) . T)
 ((|UnaryRecursiveAggregate| |t#1|) . T) ((|finiteAggregate|) . T)
 ((|shallowlyMutable|) . T))
((|constructor| (NIL "This domain provides some nice functions on lists"))
 (|elt|
  (((|NonNegativeInteger|) $ "count")
   "\\spad{l.\"count\"} returns the number of elements in \\spad{l}.")
  (($ $ "sort")
   "\\spad{l.sort} returns \\spad{l} with elements sorted. Note: \\spad{l.sort = sort(l)}")
  (($ $ "unique")
   "\\spad{l.unique} returns \\spad{l} with duplicates removed. Note: \\spad{l.unique = removeDuplicates(l)}."))
 (|datalist|
  (($ (|List| |#1|)) "\\spad{datalist(l)} creates a datalist from \\spad{l}"))
 (|coerce|
  (((|List| |#1|) $)
   "\\spad{coerce(x)} returns the list of elements in \\spad{x}")
  (($ (|List| |#1|)) "\\spad{coerce(l)} creates a datalist from \\spad{l}")))
(("documentation" 0 16228) ("ancestors" 0 14361) ("parents" 0 14330)
 ("abbreviation" 0 14324) ("predicates" 0 11864) ("superDomain" 0 NIL)
 ("operationAlist" 0 1664) ("modemaps" 0 812) ("sourceFile" 0 775)
 ("constructorCategory" 0 443) ("constructorModemap" 0 44)
 ("constructorKind" 0 35) ("constructorForm" 0 20))