5399                (MAKEPROP '|SmallOrdinal| 'NILADIC T)
(|SmallOrdinal|)
|domain|
(((|SmallOrdinal|)
  (|Join| (|OrderedAbelianMonoid|) (|SemiRing|) (|CancellationAbelianMonoid|)
          (|RetractableTo| (|NonNegativeInteger|))
          (CATEGORY |domain| (SIGNATURE |omega| ($))
           (SIGNATURE |omegapower| ($ $)) (SIGNATURE |ordinalAdd| ($ $ $))
           (SIGNATURE |ordinalMul| ($ $ $)) (SIGNATURE |ordinalPower| ($ $ $))
           (SIGNATURE |integerPart| ((|NonNegativeInteger|) $))
           (SIGNATURE |limitPart| ($ $)) (SIGNATURE ^ ($ $ $)))))
 (T |SmallOrdinal|))
(|Join| (|OrderedAbelianMonoid|) (|SemiRing|) (|CancellationAbelianMonoid|)
        (|RetractableTo| (|NonNegativeInteger|))
        (CATEGORY |domain| (SIGNATURE |omega| ($))
         (SIGNATURE |omegapower| ($ $)) (SIGNATURE |ordinalAdd| ($ $ $))
         (SIGNATURE |ordinalMul| ($ $ $)) (SIGNATURE |ordinalPower| ($ $ $))
         (SIGNATURE |integerPart| ((|NonNegativeInteger|) $))
         (SIGNATURE |limitPart| ($ $)) (SIGNATURE ^ ($ $ $))))
"/git/fricas/src/algebra/SORD.spad"
((|omega| (*1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 (|omegapower| (*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 (|ordinalAdd| (*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 (|ordinalMul| (*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 (|ordinalPower| (*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 (|integerPart| (*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SmallOrdinal|))))
 (|limitPart| (*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 (^ (*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|))))
((~= (((|Boolean|) $ $) 62)) (|zero?| (((|Boolean|) $) 17))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 41))
 (|smaller?| (((|Boolean|) $ $) NIL)) (|sample| (($) NIL T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|NonNegativeInteger|)) NIL)
  (($ $ (|PositiveInteger|)) NIL))
 (|retractIfCan| (((|Union| (|NonNegativeInteger|) "failed") $) 30))
 (|retract| (((|NonNegativeInteger|) $) 54))
 (|recip| (((|Union| $ #1#) $) NIL)) (|ordinalPower| (($ $ $) 55))
 (|ordinalMul| (($ $ $) 53)) (|ordinalAdd| (($ $ $) 46))
 (|opposite?| (((|Boolean|) $ $) NIL)) (|one?| (((|Boolean|) $) 19))
 (|omegapower| (($ $) 14)) (|omega| (($) 13)) (|min| (($ $ $) NIL))
 (|max| (($ $ $) NIL)) (|limitPart| (($ $) 48))
 (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|NonNegativeInteger|)) NIL)
  (($ $ (|PositiveInteger|)) NIL))
 (|latex| (((|String|) $) NIL)) (|integerPart| (((|NonNegativeInteger|) $) 47))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 26))
 (|hash| (((|SingleInteger|) $) NIL))
 (|coerce| (((|OutputForm|) $) 64) (($ (|NonNegativeInteger|)) 27))
 (|antiCommutator| (($ $ $) NIL))
 (^ (($ $ (|NonNegativeInteger|)) 56) (($ $ (|PositiveInteger|)) NIL)
  (($ $ $) 57))
 (|Zero| (($) 8 T CONST)) (|One| (($) 10 T CONST)) (>= (((|Boolean|) $ $) 43))
 (> (((|Boolean|) $ $) 49)) (= (((|Boolean|) $ $) 20))
 (<= (((|Boolean|) $ $) NIL)) (< (((|Boolean|) $ $) 34))
 (- (($ $ $) NIL (|has| $ (|AbelianGroup|)))
    (($ $) NIL (|has| $ (|AbelianGroup|))))
 (+ (($ $ $) 36))
 (* (($ (|PositiveInteger|) $) NIL) (($ (|NonNegativeInteger|) $) NIL)
    (($ (|Integer|) $) NIL (|has| $ (|AbelianGroup|))) (($ $ $) 38)))
((|HasCategory| $ '(|AbelianGroup|)))
SORD
(((|OrderedAbelianMonoid|) . T) ((|SemiRing|) . T)
 ((|CancellationAbelianMonoid|) . T)
 ((|RetractableTo| (|NonNegativeInteger|)) . T))
(((|AbelianGroup|) |has| |t#1| (|AbelianGroup|)) ((|AbelianMonoid|) . T)
 ((|AbelianSemiGroup|) . T) ((|BasicType|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|Comparable|) . T) ((|LeftModule| |t#1|) . T) ((|Magma|) . T)
 ((|MagmaWithUnit|) . T) ((|Monoid|) . T) ((|NonAssociativeSemiRing|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|OrderedAbelianMonoid|) . T)
 ((|OrderedAbelianSemiGroup|) . T) ((|OrderedSet|) . T) ((|PartialOrder|) . T)
 ((|RetractableTo| (|NonNegativeInteger|)) . T) ((|RightModule| |t#2|) . T)
 ((|SemiGroup|) . T) ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "SmallOrdinal implements ordinal numbers up to \\spad{epsilon_0}. \\spad{+} and \\spad{*} are \"natural\" addition and multiplication of ordinals. Avaliable separately are \"ordered\" operataions."))
 (^
  (($ $ $)
   "\\spad{o1^o2} returns \\spad{o1} to power \\spad{o2},{} where power is inductively defined using succesive natural multiplication from the left"))
 (|limitPart|
  (($ $)
   "\\spad{limitPart(o)} = \\spad{l} when \\spad{o} = \\spad{l} + \\spad{n} and \\spad{l} is a limit ordinal and \\spad{n} is a nonnegative integer"))
 (|integerPart|
  (((|NonNegativeInteger|) $)
   "\\spad{integerPart(o)} = \\spad{n} when \\spad{o} = \\spad{l} + \\spad{n} and \\spad{l} is a limit ordinal"))
 (|ordinalPower|
  (($ $ $)
   "\\spad{ordinalPower(o1,{} o2)} returns \\spad{o1} to power \\spad{o2},{} where power is inductively defined using succesive ordinal multiplication from the left"))
 (|ordinalMul|
  (($ $ $)
   "\\spad{ordinalMul(o1,{} o2)} returns product of \\spad{o1} and \\spad{o2} as ordered sets"))
 (|ordinalAdd|
  (($ $ $)
   "\\spad{ordinalAdd(o1,{} o2)} returns sum of \\spad{o1} and \\spad{o2} as ordered sets"))
 (|omegapower| (($ $) "\\spad{omegapower(p)} returns omega^p"))
 (|omega| (($) "\\spad{omega()} is the first infinite ordinal")))
(("documentation" 0 4105) ("ancestors" 0 3447) ("parents" 0 3310)
 ("abbreviation" 0 3305) ("predicates" 0 3267) ("superDomain" 0 NIL)
 ("operationAlist" 0 1607) ("modemaps" 0 1077) ("sourceFile" 0 1041)
 ("constructorCategory" 0 590) ("constructorModemap" 0 84)
 ("constructorKind" 0 75) ("constructorForm" 0 58) ("NILADIC" 0 20))