22202               (|Stream| S)
|domain|
(((|Stream| |#1|)
  (|Join| (|LazyStreamAggregate| |#1|) (|shallowlyMutable|)
          (CATEGORY |domain| (SIGNATURE |coerce| ($ (|List| |#1|)))
           (SIGNATURE |repeating| ($ (|List| |#1|)))
           (IF (|has| |#1| (|SetCategory|))
               (SIGNATURE |repeating?| ((|Boolean|) (|List| |#1|) $))
               |noBranch|)
           (SIGNATURE |findCycle|
            ((|Record| (|:| |cycle?| (|Boolean|))
                       (|:| |prefix| (|NonNegativeInteger|))
                       (|:| |period| (|NonNegativeInteger|)))
             (|NonNegativeInteger|) $))
           (SIGNATURE |delay| ($ (|Mapping| $))) (SIGNATURE |cons| ($ |#1| $))
           (IF (|has| |#1| (|SetCategory|))
               (PROGN
                (SIGNATURE |showElements|
                 ((|OutputForm|) (|NonNegativeInteger|) $))
                (SIGNATURE |showAllElements| ((|OutputForm|) $))
                (SIGNATURE |showAll?| ((|Boolean|))))
               |noBranch|)
           (SIGNATURE |setrest!| ($ $ (|Integer|) $))
           (SIGNATURE |stream| ($ (|Mapping| |#1|)))
           (SIGNATURE |stream| ($ (|Mapping| |#1| |#1|) |#1|))
           (SIGNATURE |filterWhile| ($ (|Mapping| (|Boolean|) |#1|) $))
           (SIGNATURE |filterUntil| ($ (|Mapping| (|Boolean|) |#1|) $))))
  (|Type|))
 (T |Stream|))
(|Join| (|LazyStreamAggregate| |#1|) (|shallowlyMutable|)
        (CATEGORY |domain| (SIGNATURE |coerce| ($ (|List| |#1|)))
         (SIGNATURE |repeating| ($ (|List| |#1|)))
         (IF (|has| |#1| (|SetCategory|))
             (SIGNATURE |repeating?| ((|Boolean|) (|List| |#1|) $))
             |noBranch|)
         (SIGNATURE |findCycle|
          ((|Record| (|:| |cycle?| (|Boolean|))
                     (|:| |prefix| (|NonNegativeInteger|))
                     (|:| |period| (|NonNegativeInteger|)))
           (|NonNegativeInteger|) $))
         (SIGNATURE |delay| ($ (|Mapping| $))) (SIGNATURE |cons| ($ |#1| $))
         (IF (|has| |#1| (|SetCategory|))
             (PROGN
              (SIGNATURE |showElements|
               ((|OutputForm|) (|NonNegativeInteger|) $))
              (SIGNATURE |showAllElements| ((|OutputForm|) $))
              (SIGNATURE |showAll?| ((|Boolean|))))
             |noBranch|)
         (SIGNATURE |setrest!| ($ $ (|Integer|) $))
         (SIGNATURE |stream| ($ (|Mapping| |#1|)))
         (SIGNATURE |stream| ($ (|Mapping| |#1| |#1|) |#1|))
         (SIGNATURE |filterWhile| ($ (|Mapping| (|Boolean|) |#1|) $))
         (SIGNATURE |filterUntil| ($ (|Mapping| (|Boolean|) |#1|) $))))
"/git/fricas/src/algebra/STREAM.spad"
((|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
                (|isDomain| *1 (|Stream| *3))))
 (|repeating| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 (|repeating?| (*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Stream| *4))))
 (|findCycle| (*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |cycle?| (|Boolean|))
                             (|:| |prefix| (|NonNegativeInteger|))
                             (|:| |period| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|Type|))))
 (|delay| (*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|Stream| *3))) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))
 (|cons| (*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Stream| *2)) (|ofCategory| *2 (|Type|))))
 (|showElements| (*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|))))
 (|showAllElements| (*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))
 (|showAll?| (*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))
 (|setrest!| (*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))
 (|stream| (*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 (|stream| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 (|filterWhile| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 (|filterUntil| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3)))))
((~=
  (((|Boolean|) $ $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|value| ((|#1| $) NIL))
 (|trim|
  (($ $ |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|third| ((|#1| $) NIL)) (|tail| (($ $) 51))
 (|swap!|
  (((|Void|) $ (|Integer|) (|Integer|)) 76 (|has| $ (|shallowlyMutable|))))
 (|stream| (($ (|Mapping| |#1|)) 121) (($ (|Mapping| |#1| |#1|) |#1|) 122))
 (|split!| (($ $ (|NonNegativeInteger|)) 110 (|has| $ (|shallowlyMutable|))))
 (|sorted?|
  (((|Boolean|) $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (((|Boolean|) (|Mapping| (|Boolean|) |#1| |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|sort!|
  (($ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|))
        (|has| |#1| (|OrderedSet|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|)))))
 (|sort|
  (($ $) NIL (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) NIL (|has| $ (|finiteAggregate|))))
 (|smaller?|
  (((|Boolean|) $ $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))))
 (|size?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|showElements|
  (((|OutputForm|) (|NonNegativeInteger|) $) 33 (|has| |#1| (|SetCategory|))))
 (|showAllElements| (((|OutputForm|) $) 40 (|has| |#1| (|SetCategory|))))
 (|showAll?| (((|Boolean|)) 41 (|has| |#1| (|SetCategory|))))
 (|setvalue!| ((|#1| $ |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|setrest!| (($ $ $) 98 (|has| $ (|shallowlyMutable|)))
  (($ $ (|Integer|) $) 119))
 (|setlast!| ((|#1| $ |#1|) 107 (|has| $ (|shallowlyMutable|))))
 (|setfirst!| ((|#1| $ |#1|) 102 (|has| $ (|shallowlyMutable|))))
 (|setelt!| ((|#1| $ #1="value" |#1|) NIL (|has| $ (|shallowlyMutable|)))
  ((|#1| $ #2="first" |#1|) 104 (|has| $ (|shallowlyMutable|)))
  (($ $ #3="rest" $) 106 (|has| $ (|shallowlyMutable|)))
  ((|#1| $ #4="last" |#1|) 109 (|has| $ (|shallowlyMutable|)))
  ((|#1| $ (|UniversalSegment| (|Integer|)) |#1|) 89
   (|has| $ (|shallowlyMutable|)))
  ((|#1| $ (|Integer|) |#1|) 55 (|has| $ (|shallowlyMutable|))))
 (|setchildren!| (($ $ (|List| $)) NIL (|has| $ (|shallowlyMutable|))))
 (|select| (($ (|Mapping| (|Boolean|) |#1|) $) 58)) (|second| ((|#1| $) NIL))
 (|sample| (($) NIL T CONST)) (|rst| (($ $) 15))
 (|rightTrim|
  (($ $ |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|reverse!|
  (($ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|)))))
 (|reverse| (($ $) NIL (|has| $ (|finiteAggregate|))))
 (|rest| (($ $) 31) (($ $ (|NonNegativeInteger|)) 88))
 (|repeating?|
  (((|Boolean|) (|List| |#1|) $) 116 (|has| |#1| (|SetCategory|))))
 (|repeating| (($ (|List| |#1|)) 112))
 (|removeDuplicates|
  (($ $) NIL (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|remove|
  (($ |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|))))
  (($ (|Mapping| (|Boolean|) |#1|) $) 57))
 (|reduce|
  ((|#1| (|Mapping| |#1| |#1| |#1|) $) NIL (|has| $ (|finiteAggregate|)))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1|) NIL (|has| $ (|finiteAggregate|)))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1| |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|qsetrest!| (($ $ $) NIL (|has| $ (|shallowlyMutable|))))
 (|qsetfirst!| ((|#1| $ |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|qsetelt!| ((|#1| $ (|Integer|) |#1|) NIL (|has| $ (|shallowlyMutable|))))
 (|qelt| ((|#1| $ (|Integer|)) NIL))
 (|possiblyInfinite?| (((|Boolean|) $) NIL))
 (|position|
  (((|Integer|) |#1| $ (|Integer|)) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|))))
  (((|Integer|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|))))
  (((|Integer|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|parts| (((|List| |#1|) $) NIL (|has| $ (|finiteAggregate|))))
 (|numberOfComputedEntries| (((|NonNegativeInteger|) $) 118))
 (|nodes| (((|List| $) $) NIL))
 (|node?| (((|Boolean|) $ $) NIL (|has| |#1| (|BasicType|))))
 (|new| (($ (|NonNegativeInteger|) |#1|) NIL))
 (|more?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|minIndex| (((|Integer|) $) NIL (|has| (|Integer|) (|OrderedSet|))))
 (|min|
  ((|#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (|merge|
  (($ $ $) NIL (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $ $) NIL
   (|has| $ (|finiteAggregate|))))
 (|members| (((|List| |#1|) $) NIL (|has| $ (|finiteAggregate|))))
 (|member?|
  (((|Boolean|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|maxIndex| (((|Integer|) $) NIL (|has| (|Integer|) (|OrderedSet|))))
 (|max|
  ((|#1| (|Mapping| (|Boolean|) |#1| |#1|) $) NIL
   (|has| $ (|finiteAggregate|)))
  ((|#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|))))
  (($ $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (|map!| (($ (|Mapping| |#1| |#1|) $) 73 (|has| $ (|shallowlyMutable|))))
 (|map| (($ (|Mapping| |#1| |#1|) $) 63)
  (($ (|Mapping| |#1| |#1| |#1|) $ $) 67))
 (|less?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|leftTrim|
  (($ $ |#1|) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|leaves| (((|List| |#1|) $) NIL)) (|leaf?| (((|Boolean|) $) NIL))
 (|lazyEvaluate| (($ $) 90)) (|lazy?| (((|Boolean|) $) 14))
 (|latex|
  (((|String|) $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|last| ((|#1| $) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|insert| (($ $ $ (|Integer|)) NIL) (($ |#1| $ (|Integer|)) NIL))
 (|indices| (((|List| (|Integer|)) $) NIL))
 (|index?| (((|Boolean|) (|Integer|) $) 74))
 (|hashUpdate!|
  (((|HashState|) (|HashState|) $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|hash|
  (((|SingleInteger|) $) NIL
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (|frst| ((|#1| $) 11))
 (|first| ((|#1| $) 30) (($ $ (|NonNegativeInteger|)) 49))
 (|findCycle|
  (((|Record| (|:| |cycle?| (|Boolean|)) (|:| |prefix| (|NonNegativeInteger|))
              (|:| |period| (|NonNegativeInteger|)))
    (|NonNegativeInteger|) $)
   27))
 (|find| (((|Union| |#1| "failed") (|Mapping| (|Boolean|) |#1|) $) NIL))
 (|filterWhile| (($ (|Mapping| (|Boolean|) |#1|) $) 123))
 (|filterUntil| (($ (|Mapping| (|Boolean|) |#1|) $) 124))
 (|fill!| (($ $ |#1|) 68 (|has| $ (|shallowlyMutable|))))
 (|extend| (($ $ (|Integer|)) 34)) (|explicitlyFinite?| (((|Boolean|) $) 72))
 (|explicitlyEmpty?| (((|Boolean|) $) 13))
 (|explicitEntries?| (((|Boolean|) $) 117))
 (|every?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|eval|
  (($ $ (|List| (|Equation| |#1|))) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|Equation| |#1|)) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ |#1| |#1|) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|List| |#1|) (|List| |#1|)) NIL
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|)))))
 (|eq?| (((|Boolean|) $ $) 23))
 (|entry?|
  (((|Boolean|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|entries| (((|List| |#1|) $) NIL)) (|empty?| (((|Boolean|) $) 18))
 (|empty| (($) 43))
 (|elt| ((|#1| $ #1#) NIL) ((|#1| $ #2#) NIL) (($ $ #3#) NIL)
  ((|#1| $ #4#) NIL) (($ $ (|UniversalSegment| (|Integer|))) NIL)
  ((|#1| $ (|Integer|)) 54) ((|#1| $ (|Integer|) |#1|) NIL))
 (|distance| (((|Integer|) $ $) 48))
 (|delete| (($ $ (|UniversalSegment| (|Integer|))) NIL)
           (($ $ (|Integer|)) NIL))
 (|delay| (($ (|Mapping| $)) 47)) (|cyclic?| (((|Boolean|) $) 69))
 (|cycleTail| (($ $) 70))
 (|cycleSplit!| (($ $) 99 (|has| $ (|shallowlyMutable|))))
 (|cycleLength| (((|NonNegativeInteger|) $) NIL)) (|cycleEntry| (($ $) NIL))
 (|count|
  (((|NonNegativeInteger|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|)))
  (((|NonNegativeInteger|) |#1| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|copyInto!|
  (($ $ $ (|Integer|)) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| $ (|shallowlyMutable|)))))
 (|copy| (($ $) 44))
 (|convert|
  (((|InputForm|) $) NIL (|has| |#1| (|ConvertibleTo| (|InputForm|)))))
 (|construct| (($ (|List| |#1|)) 53)) (|cons| (($ |#1| $) 97))
 (|concat!| (($ $ $) 100 (|has| $ (|shallowlyMutable|)))
  (($ $ |#1|) 101 (|has| $ (|shallowlyMutable|))))
 (|concat| (($ $ $) 78) (($ |#1| $) 45) (($ (|List| $)) 83) (($ $ |#1|) 77))
 (|complete| (($ $) 50))
 (|coerce|
  (((|OutputForm|) $) 42
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|CoercibleTo| (|OutputForm|)))))
  (($ (|List| |#1|)) 111))
 (|children| (((|List| $) $) NIL))
 (|child?| (((|Boolean|) $ $) NIL (|has| |#1| (|BasicType|))))
 (|any?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (>=
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (>
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (=
  (((|Boolean|) $ $) 114
   (OR (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|Comparable|)))
       (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))
       (|has| |#1| (|SetCategory|)))))
 (<=
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (<
  (((|Boolean|) $ $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|OrderedSet|)))))
 (|#| (((|NonNegativeInteger|) $) NIL (|has| $ (|finiteAggregate|)))))
((|HasCategory| |#1| '(|SetCategory|))
 (AND (|HasCategory| |#1| (LIST '|Evalable| (|devaluate| |#1|)))
      (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| |#1| (LIST '|ConvertibleTo| '(|InputForm|)))
 (|HasCategory| |#1| '(|BasicType|)) (|HasCategory| |#1| '(|Comparable|))
 (|HasCategory| |#1| '(|OrderedSet|))
 (|HasCategory| |#1| (LIST '|CoercibleTo| '(|OutputForm|)))
 (OR (|HasCategory| |#1| (LIST '|CoercibleTo| '(|OutputForm|)))
     (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| (|Integer|) '(|OrderedSet|))
 (|HasCategory| $ '(|finiteAggregate|))
 (AND (|HasCategory| |#1| '(|OrderedSet|))
      (|HasCategory| $ '(|finiteAggregate|)))
 (OR (|HasCategory| |#1| (LIST '|CoercibleTo| '(|OutputForm|)))
     (AND (|HasCategory| |#1| '(|Comparable|))
          (|HasCategory| $ '(|finiteAggregate|)))
     (AND (|HasCategory| |#1| '(|OrderedSet|))
          (|HasCategory| $ '(|finiteAggregate|))))
 (OR
  (AND (|HasCategory| |#1| '(|Comparable|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|OrderedSet|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (|HasCategory| |#1| '(|SetCategory|)))
 (OR
  (AND (|HasCategory| |#1| '(|Comparable|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|OrderedSet|))
       (|HasCategory| $ '(|finiteAggregate|))))
 (AND (|HasCategory| |#1| '(|BasicType|))
      (|HasCategory| $ '(|finiteAggregate|)))
 (OR
  (AND (|HasCategory| |#1| '(|BasicType|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|Comparable|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (AND (|HasCategory| |#1| '(|OrderedSet|))
       (|HasCategory| $ '(|finiteAggregate|)))
  (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| $ '(|shallowlyMutable|))
 (AND (|HasCategory| |#1| '(|OrderedSet|))
      (|HasCategory| $ '(|finiteAggregate|))
      (|HasCategory| $ '(|shallowlyMutable|)))
 (AND (|HasCategory| $ '(|finiteAggregate|))
      (|HasCategory| $ '(|shallowlyMutable|))))
STREAM
(((|LazyStreamAggregate| |#1|) . T) ((|shallowlyMutable|) . T))
(((|Aggregate|) . T)
 ((|BasicType|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|BasicType|))))
 ((|CoercibleTo| (|OutputForm|)) OR
  (|has| |t#1| (|CoercibleTo| (|OutputForm|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|Collection| |t#1|) . T)
 ((|Comparable|) OR
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|ConvertibleTo| (|InputForm|)) |has| |t#1| (|ConvertibleTo| (|InputForm|)))
 ((|Eltable| (|UniversalSegment| (|Integer|)) $) . T)
 ((|Eltable| |t#1| |t#2|) . T) ((|EltableAggregate| |t#1| |t#2|) . T)
 ((|Evalable| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|HomogeneousAggregate| |t#2|) . T) ((|HomogeneousAggregate| |t#1|) . T)
 ((|IndexedAggregate| (|Integer|) |t#1|) . T)
 ((|InnerEvalable| |t#1| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|LazyStreamAggregate| |#1|) . T) ((|LinearAggregate| |t#1|) . T)
 ((|OrderedSet|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|PartialOrder|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|RecursiveAggregate| |t#1|) . T)
 ((|SetCategory|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|StreamAggregate| |t#1|) . T) ((|Type|) . T)
 ((|UnaryRecursiveAggregate| |t#1|) . T) ((|shallowlyMutable|) . T))
((|constructor|
  (NIL
   "A stream is an implementation of a possibly infinite sequence using a list of terms that have been computed and a function closure to compute additional terms when needed."))
 (|filterUntil|
  (($ (|Mapping| (|Boolean|) |#1|) $)
   "\\spad{filterUntil(p,{} s)} returns \\spad{[x0,{} x1,{} ...,{} x(n)]} where \\spad{s = [x0,{} x1,{} x2,{} ..]} and \\spad{n} is the smallest index such that \\spad{p(xn) = true}."))
 (|filterWhile|
  (($ (|Mapping| (|Boolean|) |#1|) $)
   "\\spad{filterWhile(p,{} s)} returns \\spad{[x0,{} x1,{} ...,{} x(n-1)]} where \\spad{s = [x0,{} x1,{} x2,{} ..]} and \\spad{n} is the smallest index such that \\spad{p(xn) = false}."))
 (|stream|
  (($ (|Mapping| |#1| |#1|) |#1|)
   "\\spad{stream(f,{} x)} creates an infinite stream whose first element is \\spad{x} and whose \\spad{n}th element (\\spad{n > 1}) is \\spad{f} applied to the previous element. Note: \\spad{stream(f,{} x) = [x,{} f(x),{} f(f(x)),{} ...]}.")
  (($ (|Mapping| |#1|))
   "\\spad{stream(f)} creates an infinite stream all of whose elements are equal to \\spad{f()}. Note: \\spad{stream(f) = [f(),{} f(),{} f(),{} ...]}."))
 (|setrest!|
  (($ $ (|Integer|) $)
   "\\spad{setrest!(x,{} n,{} y)} sets rest(\\spad{x},{} \\spad{n}) to \\spad{y}. The function will expand cycles if necessary."))
 (|showAll?|
  (((|Boolean|))
   "\\spad{showAll?()} returns \\spad{true} if all computed entries of streams will be displayed."))
 (|showAllElements|
  (((|OutputForm|) $)
   "\\spad{showAllElements(s)} creates an output form which displays all computed elements."))
 (|showElements|
  (((|OutputForm|) (|NonNegativeInteger|) $)
   "\\spad{showElements(n,{} st)} computes and creates and output form of the first \\spad{n} entries of st."))
 (|cons|
  (($ |#1| $)
   "\\spad{cons(a,{} s)} returns a stream whose \\spad{first} is \\spad{a} and whose \\spad{rest} is \\spad{s}. Note: \\spad{cons(a,{} s) = concat(a,{} s)}."))
 (|delay|
  (($ (|Mapping| $))
   "\\spad{delay(f)} creates a stream with a lazy evaluation defined by function \\spad{f}. Caution: This function can only be called in compiled code."))
 (|findCycle|
  (((|Record| (|:| |cycle?| (|Boolean|)) (|:| |prefix| (|NonNegativeInteger|))
              (|:| |period| (|NonNegativeInteger|)))
    (|NonNegativeInteger|) $)
   "\\spad{findCycle(n,{} st)} determines if st is periodic within \\spad{n}."))
 (|repeating?|
  (((|Boolean|) (|List| |#1|) $)
   "\\spad{repeating?(l,{} s)} returns \\spad{true} if a stream \\spad{s} is periodic with period \\spad{l},{} and \\spad{false} otherwise."))
 (|repeating|
  (($ (|List| |#1|))
   "\\spad{repeating(l)} is a repeating stream whose period is the list \\spad{l}."))
 (|coerce|
  (($ (|List| |#1|))
   "\\spad{coerce(l)} converts a list \\spad{l} to a stream.")))
(("documentation" 0 19407) ("ancestors" 0 17643) ("parents" 0 17579)
 ("abbreviation" 0 17572) ("predicates" 0 15558) ("superDomain" 0 NIL)
 ("operationAlist" 0 4900) ("modemaps" 0 2633) ("sourceFile" 0 2595)
 ("constructorCategory" 0 1365) ("constructorModemap" 0 42)
 ("constructorKind" 0 33) ("constructorForm" 0 20))