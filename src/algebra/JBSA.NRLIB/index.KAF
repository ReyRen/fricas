4186                (|JetBundleSymAna| JB1 |xi| |eta|)
|domain|
(((|JetBundleSymAna| |#1| |#2| |#3|)
  (|Join| (|JetBundleCategory|)
          (CATEGORY |domain| (SIGNATURE |coerce| ($ (|Symbol|)))
           (SIGNATURE D ($ (|Symbol|) (|List| (|Symbol|))))))
  (|JetBundleCategory|) (|Union| (|Symbol|) (|List| (|Symbol|)))
  (|Union| (|Symbol|) (|List| (|Symbol|))))
 (T |JetBundleSymAna|))
(|Join| (|JetBundleCategory|)
        (CATEGORY |domain| (SIGNATURE |coerce| ($ (|Symbol|)))
         (SIGNATURE D ($ (|Symbol|) (|List| (|Symbol|))))))
"/git/fricas/src/algebra/JBSA.spad"
((|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|Symbol|))
                (|isDomain| *1 (|JetBundleSymAna| *3 *4 *5))
                (|ofCategory| *3 (|JetBundleCategory|))
                (|ofType| *4 (|Union| *2 (|List| *2)))
                (|ofType| *5 (|Union| *2 (|List| *2)))))
 (D (*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofType| *5 (|Union| *2 *3))
       (|ofType| *6 (|Union| *2 *3)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleSymAna| *4 *5 *6))
       (|ofCategory| *4 (|JetBundleCategory|)))))
((~= (((|Boolean|) $ $) NIL)) (|weight| (((|NonNegativeInteger|) $) NIL))
 (|variables| (((|List| $) (|NonNegativeInteger|)) NIL)
  (((|List| $) (|NonNegativeInteger|) (|PositiveInteger|)) NIL))
 (|type| (((|Symbol|) $) 47)) (|smaller?| (((|Boolean|) $ $) NIL))
 (|setNotation| (((|Symbol|) (|Symbol|)) 39))
 (|repeatedIndex| (((|List| (|PositiveInteger|)) $) NIL))
 (|r2m| (((|List| (|NonNegativeInteger|)) (|List| (|PositiveInteger|))) NIL))
 (|order| (((|NonNegativeInteger|) $) NIL)) (|one?| (((|Boolean|) $) NIL))
 (|numIndVar| (((|PositiveInteger|)) 59))
 (|numDepVar| (((|PositiveInteger|)) 60)) (|name| (((|Symbol|) $) 62))
 (|multiIndex| (((|List| (|NonNegativeInteger|)) $) 43)) (|min| (($ $ $) NIL))
 (|max| (($ $ $) NIL))
 (|m2r| (((|List| (|PositiveInteger|)) (|List| (|NonNegativeInteger|))) NIL))
 (|latex| (((|String|) $) NIL))
 (|integrateIfCan| (((|Union| $ "failed") $ (|PositiveInteger|)) NIL))
 (|integrate| (($ $ (|PositiveInteger|)) NIL))
 (|index| (((|PositiveInteger|) $) 45))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|getNotation| (((|Symbol|)) 40))
 (|dimS| (((|NonNegativeInteger|) (|NonNegativeInteger|)) NIL))
 (|dimJ| (((|NonNegativeInteger|) (|NonNegativeInteger|)) NIL))
 (|differentiate| (((|Union| $ "0") $ (|PositiveInteger|)) NIL))
 (|derivativeOf?| (((|List| (|NonNegativeInteger|)) $ $) NIL))
 (|coerce| (((|OutputForm|) $) NIL) (((|Expression| (|Integer|)) $) 65)
           (($ (|Symbol|)) 55))
 (|class| (((|NonNegativeInteger|) (|List| (|NonNegativeInteger|))) NIL)
  (((|NonNegativeInteger|) $) NIL))
 (|allRepeated|
  (((|List| (|List| (|PositiveInteger|))) (|List| (|NonNegativeInteger|)))
   NIL))
 (X (($ (|PositiveInteger|)) 49) (($) NIL))
 (U (($ (|PositiveInteger|)) 51) (($) NIL))
 (|Pr| (($ (|PositiveInteger|) (|List| (|PositiveInteger|))) NIL))
 (|Pm| (($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))) 53))
 (P (($ (|PositiveInteger|) (|List| (|NonNegativeInteger|))) NIL)
  (($ (|List| (|NonNegativeInteger|))) NIL)
  (($ (|PositiveInteger|) (|NonNegativeInteger|)) NIL)
  (($ (|NonNegativeInteger|)) NIL))
 (|One| (($) 23 T CONST)) (D (($ (|Symbol|) (|List| (|Symbol|))) 57))
 (>= (((|Boolean|) $ $) NIL)) (> (((|Boolean|) $ $) NIL))
 (= (((|Boolean|) $ $) NIL)) (<= (((|Boolean|) $ $) NIL))
 (< (((|Boolean|) $ $) NIL)))
JBSA
(((|JetBundleCategory|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|Expression| (|Integer|))) . T)
 ((|CoercibleTo| (|OutputForm|)) . T) ((|Comparable|) . T)
 ((|JetBundleCategory|) . T) ((|OrderedSet|) . T) ((|PartialOrder|) . T)
 ((|SetCategory|) . T))
((|constructor|
  (NIL
   "\\spad{JetBundleSymAna} is only necessary to have a valid return type for some procedures in \\spad{SymmetryAnalysis}. It is essentially identical with \\spad{JetBundle} but computes its parameters in a more complicated way."))
 (D
  (($ (|Symbol|) (|List| (|Symbol|)))
   "\\spad{D(u,{} der)} generates a derivative."))
 (|coerce|
  (($ (|Symbol|))
   "\\spad{coerce(s)} allows for the input of jet variables as symbols.")))
(("documentation" 0 3733) ("ancestors" 0 3507) ("parents" 0 3477)
 ("abbreviation" 0 3472) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1133) ("modemaps" 0 582) ("sourceFile" 0 546)
 ("constructorCategory" 0 393) ("constructorModemap" 0 64)
 ("constructorKind" 0 55) ("constructorForm" 0 20))