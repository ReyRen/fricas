11749               (|AlgebraPackage| R A)
|package|
(((|AlgebraPackage| |#1| |#2|)
  (CATEGORY |package| (SIGNATURE |leftRank| ((|NonNegativeInteger|) |#2|))
   (SIGNATURE |rightRank| ((|NonNegativeInteger|) |#2|))
   (SIGNATURE |doubleRank| ((|NonNegativeInteger|) |#2|))
   (SIGNATURE |weakBiRank| ((|NonNegativeInteger|) |#2|))
   (SIGNATURE |biRank| ((|NonNegativeInteger|) |#2|))
   (SIGNATURE |basisOfCommutingElements| ((|List| |#2|)))
   (SIGNATURE |basisOfLeftAnnihilator| ((|List| |#2|) |#2|))
   (SIGNATURE |basisOfRightAnnihilator| ((|List| |#2|) |#2|))
   (SIGNATURE |basisOfLeftNucleus| ((|List| |#2|)))
   (SIGNATURE |basisOfRightNucleus| ((|List| |#2|)))
   (SIGNATURE |basisOfMiddleNucleus| ((|List| |#2|)))
   (SIGNATURE |basisOfNucleus| ((|List| |#2|)))
   (SIGNATURE |basisOfCenter| ((|List| |#2|)))
   (SIGNATURE |basisOfLeftNucloid| ((|List| (|Matrix| |#1|))))
   (SIGNATURE |basisOfRightNucloid| ((|List| (|Matrix| |#1|))))
   (SIGNATURE |basisOfCentroid| ((|List| (|Matrix| |#1|))))
   (SIGNATURE |radicalOfLeftTraceForm| ((|List| |#2|)))
   (IF (|has| |#1| (|EuclideanDomain|))
       (SIGNATURE |basis| ((|Vector| |#2|) (|Vector| |#2|)))
       |noBranch|))
  (|IntegralDomain|) (|FramedNonAssociativeAlgebra| |#1|))
 (T |AlgebraPackage|))
(CATEGORY |package| (SIGNATURE |leftRank| ((|NonNegativeInteger|) |#2|))
 (SIGNATURE |rightRank| ((|NonNegativeInteger|) |#2|))
 (SIGNATURE |doubleRank| ((|NonNegativeInteger|) |#2|))
 (SIGNATURE |weakBiRank| ((|NonNegativeInteger|) |#2|))
 (SIGNATURE |biRank| ((|NonNegativeInteger|) |#2|))
 (SIGNATURE |basisOfCommutingElements| ((|List| |#2|)))
 (SIGNATURE |basisOfLeftAnnihilator| ((|List| |#2|) |#2|))
 (SIGNATURE |basisOfRightAnnihilator| ((|List| |#2|) |#2|))
 (SIGNATURE |basisOfLeftNucleus| ((|List| |#2|)))
 (SIGNATURE |basisOfRightNucleus| ((|List| |#2|)))
 (SIGNATURE |basisOfMiddleNucleus| ((|List| |#2|)))
 (SIGNATURE |basisOfNucleus| ((|List| |#2|)))
 (SIGNATURE |basisOfCenter| ((|List| |#2|)))
 (SIGNATURE |basisOfLeftNucloid| ((|List| (|Matrix| |#1|))))
 (SIGNATURE |basisOfRightNucloid| ((|List| (|Matrix| |#1|))))
 (SIGNATURE |basisOfCentroid| ((|List| (|Matrix| |#1|))))
 (SIGNATURE |radicalOfLeftTraceForm| ((|List| |#2|)))
 (IF (|has| |#1| (|EuclideanDomain|))
     (SIGNATURE |basis| ((|Vector| |#2|) (|Vector| |#2|)))
     |noBranch|))
"/git/fricas/src/algebra/ALGPKG.spad"
((|basis| (*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))))
 (|radicalOfLeftTraceForm| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfCentroid| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfRightNucloid| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfLeftNucloid| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfCenter| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfNucleus| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfMiddleNucleus| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfRightNucleus| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfLeftNucleus| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|basisOfRightAnnihilator| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 (|basisOfLeftAnnihilator| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 (|basisOfCommutingElements| (*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))
 (|biRank| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 (|weakBiRank| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 (|doubleRank| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 (|rightRank| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 (|leftRank| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4)))))
((|weakBiRank| (((|NonNegativeInteger|) |#2|) 64))
 (|rightRank| (((|NonNegativeInteger|) |#2|) 67))
 (|radicalOfLeftTraceForm| (((|List| |#2|)) 31))
 (|leftRank| (((|NonNegativeInteger|) |#2|) 66))
 (|doubleRank| (((|NonNegativeInteger|) |#2|) 63))
 (|biRank| (((|NonNegativeInteger|) |#2|) 65))
 (|basisOfRightNucloid| (((|List| (|Matrix| |#1|))) 58))
 (|basisOfRightNucleus| (((|List| |#2|)) 53))
 (|basisOfRightAnnihilator| (((|List| |#2|) |#2|) 41))
 (|basisOfNucleus| (((|List| |#2|)) 55))
 (|basisOfMiddleNucleus| (((|List| |#2|)) 54))
 (|basisOfLeftNucloid| (((|List| (|Matrix| |#1|))) 46))
 (|basisOfLeftNucleus| (((|List| |#2|)) 52))
 (|basisOfLeftAnnihilator| (((|List| |#2|) |#2|) 40))
 (|basisOfCommutingElements| (((|List| |#2|)) 48))
 (|basisOfCentroid| (((|List| (|Matrix| |#1|))) 59))
 (|basisOfCenter| (((|List| |#2|)) 57))
 (|basis|
  (((|Vector| |#2|) (|Vector| |#2|)) 82 (|has| |#1| (|EuclideanDomain|)))))
((|HasCategory| |#1| '(|EuclideanDomain|)))
ALGPKG
((|constructor|
  (NIL
   "AlgebraPackage assembles a variety of useful functions for general algebras."))
 (|basis|
  (((|Vector| |#2|) (|Vector| |#2|))
   "\\spad{basis(va)} selects a basis from the elements of \\spad{va}."))
 (|radicalOfLeftTraceForm|
  (((|List| |#2|))
   "\\spad{radicalOfLeftTraceForm()} returns basis for null space of \\spad{leftTraceMatrix()},{} if the algebra is associative,{} alternative or a Jordan algebra,{} then this space equals the radical (maximal nil ideal) of the algebra."))
 (|basisOfCentroid|
  (((|List| (|Matrix| |#1|)))
   "\\spad{basisOfCentroid()} returns a basis of the centroid,{} \\spadignore{i.e.} the endomorphism ring of \\spad{A} considered as \\spad{(A,{} A)}-bimodule."))
 (|basisOfRightNucloid|
  (((|List| (|Matrix| |#1|)))
   "\\spad{basisOfRightNucloid()} returns a basis of the space of endomorphisms of \\spad{A} as left module. Note: right nucloid coincides with right nucleus if \\spad{A} has a unit."))
 (|basisOfLeftNucloid|
  (((|List| (|Matrix| |#1|)))
   "\\spad{basisOfLeftNucloid()} returns a basis of the space of endomorphisms of \\spad{A} as right module. Note: left nucloid coincides with left nucleus if \\spad{A} has a unit."))
 (|basisOfCenter|
  (((|List| |#2|))
   "\\spad{basisOfCenter()} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{commutator(x,{} a) = 0} and \\spad{associator(x,{} a,{} b) = associator(a,{} x,{} b) = associator(a,{} b,{} x) = 0} for all \\spad{a},{} \\spad{b} in \\spad{A}."))
 (|basisOfNucleus|
  (((|List| |#2|))
   "\\spad{basisOfNucleus()} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{associator(x,{} a,{} b) = associator(a,{} x,{} b) = associator(a,{} b,{} x) = 0} for all \\spad{a},{} \\spad{b} in \\spad{A}."))
 (|basisOfMiddleNucleus|
  (((|List| |#2|))
   "\\spad{basisOfMiddleNucleus()} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{0 = associator(a,{} x,{} b)} for all \\spad{a},{} \\spad{b} in \\spad{A}."))
 (|basisOfRightNucleus|
  (((|List| |#2|))
   "\\spad{basisOfRightNucleus()} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{0 = associator(a,{} b,{} x)} for all \\spad{a},{} \\spad{b} in \\spad{A}."))
 (|basisOfLeftNucleus|
  (((|List| |#2|))
   "\\spad{basisOfLeftNucleus()} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{0 = associator(x,{} a,{} b)} for all \\spad{a},{} \\spad{b} in \\spad{A}."))
 (|basisOfRightAnnihilator|
  (((|List| |#2|) |#2|)
   "\\spad{basisOfRightAnnihilator(a)} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{0 = a*x}."))
 (|basisOfLeftAnnihilator|
  (((|List| |#2|) |#2|)
   "\\spad{basisOfLeftAnnihilator(a)} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{0 = x*a}."))
 (|basisOfCommutingElements|
  (((|List| |#2|))
   "\\spad{basisOfCommutingElements()} returns a basis of the space of all \\spad{x} of \\spad{A} satisfying \\spad{0 = commutator(x,{} a)} for all \\spad{a} in \\spad{A}."))
 (|biRank|
  (((|NonNegativeInteger|) |#2|)
   "\\spad{biRank(x)} determines the number of linearly independent elements in \\spad{x},{} \\spad{x*bi},{} \\spad{bi*x},{} \\spad{bi*x*bj},{} \\spad{i,{} j=1,{} ...,{} n},{} where \\spad{b=[b1,{} ...,{} bn]} is a basis. Note: if \\spad{A} has a unit,{} then \\spadfunFrom{doubleRank}{AlgebraPackage},{} \\spadfunFrom{weakBiRank}{AlgebraPackage} and \\spadfunFrom{biRank}{AlgebraPackage} coincide."))
 (|weakBiRank|
  (((|NonNegativeInteger|) |#2|)
   "\\spad{weakBiRank(x)} determines the number of linearly independent elements in the \\spad{bi*x*bj},{} \\spad{i,{} j=1,{} ...,{} n},{} where \\spad{b=[b1,{} ...,{} bn]} is a basis."))
 (|doubleRank|
  (((|NonNegativeInteger|) |#2|)
   "\\spad{doubleRank(x)} determines the number of linearly independent elements in \\spad{b1*x},{} ...,{} \\spad{x*bn},{} where \\spad{b=[b1,{} ...,{} bn]} is a basis."))
 (|rightRank|
  (((|NonNegativeInteger|) |#2|)
   "\\spad{rightRank(x)} determines the number of linearly independent elements in \\spad{b1*x},{} ...,{} \\spad{bn*x},{} where \\spad{b=[b1,{} ...,{} bn]} is a basis."))
 (|leftRank|
  (((|NonNegativeInteger|) |#2|)
   "\\spad{leftRank(x)} determines the number of linearly independent elements in \\spad{x*b1},{} ...,{} \\spad{x*bn},{} where \\spad{b=[b1,{} ...,{} bn]} is a basis.")))
(("documentation" 0 7353) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 7346) ("predicates" 0 7302) ("superDomain" 0 NIL)
 ("operationAlist" 0 6374) ("modemaps" 0 2366) ("sourceFile" 0 2328)
 ("constructorCategory" 0 1267) ("constructorModemap" 0 53)
 ("constructorKind" 0 43) ("constructorForm" 0 20))