6411                (|Preorder| S)
|category|
(((|Preorder| |#1|) (|Category|) (|SetCategory|)) (T |Preorder|))
(|Join| (|FiniteGraph| |t#1|)
        (CATEGORY |domain|
         (SIGNATURE |le|
          ((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)))))
"/git/fricas/src/algebra/PREORD.spad"
((|le| (*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Preorder| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)))))
((~= (((|Boolean|) $ $) 6)) (|unit| (($ (|List| |#1|) (|String|)) 6))
 (|terminal| (($ |#1|) 6))
 (|subdiagramSvg|
  (((|Void|) (|Scene| (|SCartesian| 2)) $ (|Boolean|) (|Boolean|)) 6))
 (|spanningTreeNode| (((|Tree| (|Integer|)) $ (|NonNegativeInteger|)) 6))
 (|spanningTreeArrow| (((|Tree| (|Integer|)) $ (|NonNegativeInteger|)) 6))
 (|spanningForestNode| (((|List| (|Tree| (|Integer|))) $) 6))
 (|spanningForestArrow| (((|List| (|Tree| (|Integer|))) $) 6))
 (|routeNodes|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)
    (|NonNegativeInteger|))
   6))
 (|routeArrows|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)
    (|NonNegativeInteger|))
   6))
 (|outDegree| (((|NonNegativeInteger|) $ (|NonNegativeInteger|)) 6))
 (|nodeToNode| (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|nodeToArrow| (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|nodeFromNode|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|nodeFromArrow|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|min| (((|NonNegativeInteger|) $) 6)
  (((|NonNegativeInteger|) $ (|List| (|NonNegativeInteger|))) 6))
 (|merge| (($ $ $) 6))
 (|max| (((|NonNegativeInteger|) $) 6)
  (((|NonNegativeInteger|) $ (|List| (|NonNegativeInteger|))) 6))
 (|mapContra|
  (($ $ (|List| (|NonNegativeInteger|)) (|List| |#1|) (|Integer|) (|Integer|))
   6))
 (|map|
  (($ $ (|List| (|NonNegativeInteger|)) (|List| |#1|) (|Integer|) (|Integer|))
   6))
 (|looseEquals| (((|Boolean|) $ $) 6)) (|loopsNodes| (((|List| (|Loop|)) $) 6))
 (|loopsAtNode| (((|List| (|Loop|)) $ (|NonNegativeInteger|)) 6))
 (|loopsArrows| (((|List| (|Loop|)) $) 6))
 (|le| (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|latex| (((|String|) $) 6))
 (|laplacianMatrix| (((|Matrix| (|Integer|)) $) 6))
 (|kgraph| (($ (|List| |#1|) (|String|)) 6))
 (|isGreaterThan?|
  (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|isFunctional?| (((|Boolean|) $) 6))
 (|isFixPoint?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|isDirected?| (((|Boolean|)) 6))
 (|isDirectSuccessor?|
  (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|isAcyclic?| (((|Boolean|) $) 6)) (|initial| (($) 6))
 (|incidenceMatrix| (((|Matrix| (|Integer|)) $) 6))
 (|inDegree| (((|NonNegativeInteger|) $ (|NonNegativeInteger|)) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|getVertices|
  (((|List|
     (|Record| (|:| |value| |#1|) (|:| |posX| (|NonNegativeInteger|))
               (|:| |posY| (|NonNegativeInteger|))))
    $)
   6))
 (|getVertexIndex| (((|NonNegativeInteger|) $ |#1|) 6))
 (|getArrows|
  (((|List|
     (|Record| (|:| |name| (|String|)) (|:| |arrType| (|NonNegativeInteger|))
               (|:| |fromOb| (|NonNegativeInteger|))
               (|:| |toOb| (|NonNegativeInteger|)) (|:| |xOffset| (|Integer|))
               (|:| |yOffset| (|Integer|))
               (|:| |map| (|List| (|NonNegativeInteger|)))))
    $)
   6))
 (|getArrowIndex|
  (((|NonNegativeInteger|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|flatten| (($ (|DirectedGraph| $)) 6))
 (|distanceMatrix| (((|Matrix| (|Integer|)) $) 6))
 (|distance| (((|Integer|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|diagramsSvg| (((|Void|) (|String|) (|List| $) (|Boolean|)) 6))
 (|diagramWidth| (((|NonNegativeInteger|) $) 6))
 (|diagramSvg| (((|Void|) (|String|) $ (|Boolean|)) 6))
 (|diagramHeight| (((|NonNegativeInteger|) $) 6))
 (|deepDiagramSvg| (((|Void|) (|String|) $ (|Boolean|)) 6))
 (|cycleOpen| (($ (|List| |#1|) (|String|)) 6))
 (|cycleClosed| (($ (|List| |#1|) (|String|)) 6))
 (|createY|
  (((|NonNegativeInteger|) (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|createX|
  (((|NonNegativeInteger|) (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|createWidth| (((|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|coerce| (((|OutputForm|) $) 6))
 (|arrowsToNode|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowsToArrow|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowsFromNode|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowsFromArrow|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowName| (((|String|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|adjacencyMatrix| (((|Matrix| (|NonNegativeInteger|)) $) 6))
 (|addObject!| (($ $ |#1|) 6)
  (($ $
    (|Record| (|:| |value| |#1|) (|:| |posX| (|NonNegativeInteger|))
              (|:| |posY| (|NonNegativeInteger|))))
   6))
 (|addArrow!|
  (($ $
    (|Record| (|:| |name| (|String|)) (|:| |arrType| (|NonNegativeInteger|))
              (|:| |fromOb| (|NonNegativeInteger|))
              (|:| |toOb| (|NonNegativeInteger|)) (|:| |xOffset| (|Integer|))
              (|:| |yOffset| (|Integer|))
              (|:| |map| (|List| (|NonNegativeInteger|)))))
   6)
  (($ $ (|String|) (|NonNegativeInteger|) (|NonNegativeInteger|)) 6)
  (($ $ (|String|) (|NonNegativeInteger|) (|NonNegativeInteger|)
    (|List| (|NonNegativeInteger|)))
   6)
  (($ $ (|String|) |#1| |#1|) 6))
 (= (((|Boolean|) $ $) 6)) (+ (($ $ $) 6)))
PREORD
(((|FiniteGraph| |#1|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|FiniteGraph| |#1|) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "implies operation with reflexivity and transitivity \\indented{2}{for more documentation see:} \\indented{2}{http://www.euclideanspace.com/prog/scratchpad/mycode/discrete/logic/index.\\spad{htm}} Related Domains: PartialOrder in catdef.spad"))
 (|le|
  (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|))
   "less than or equal \\spad{I} would have liked to have used: \"<=\" instead of \"le\" \"<=\" compiles but when called gives: Internal Error: The function \\spad{<=} with signature hashcode is missing from domain")))
(("documentation" 0 5849) ("ancestors" 0 5740) ("parents" 0 5711)
 ("abbreviation" 0 5704) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 483) ("modemaps" 0 307) ("sourceFile" 0 269)
 ("constructorCategory" 0 112) ("constructorModemap" 0 46)
 ("constructorKind" 0 35) ("constructorForm" 0 20))