12283               (|PointCategory| R)
|category|
(((|PointCategory| |#1|) (|Category|) (|Ring|)) (T |PointCategory|))
(|Join| (|VectorCategory| |t#1|)
        (CATEGORY |domain| (SIGNATURE |point| ($ (|List| |t#1|)))
         (SIGNATURE |dimension| ((|PositiveInteger|) $))
         (SIGNATURE |convert| ($ (|List| |t#1|))) (SIGNATURE |cross| ($ $ $))
         (SIGNATURE |extend| ($ $ (|List| |t#1|)))))
"/git/fricas/src/algebra/PTCAT.spad"
((|point| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 (|dimension| (*1 *2 *1)
  (AND (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PositiveInteger|))))
 (|convert| (*1 *1 *2)
            (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
                 (|ofCategory| *1 (|PointCategory| *3))))
 (|cross| (*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PointCategory| *2)) (|ofCategory| *2 (|Ring|))))
 (|extend| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PointCategory| *3))
       (|ofCategory| *3 (|Ring|)))))
((~=
  (((|Boolean|) $ $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|))
       (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))))
 (|zero?| (((|Boolean|) $) 6 (|has| |#1| (|AbelianMonoid|))))
 (|zero| (($ (|NonNegativeInteger|)) 6 (|has| |#1| (|AbelianMonoid|))))
 (|trim|
  (($ $ |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|swap!|
  (((|Void|) $ (|Integer|) (|Integer|)) 6 (|has| $ (|shallowlyMutable|))))
 (|sorted?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1| |#1|) $) 6
   (|has| $ (|finiteAggregate|)))
  (((|Boolean|) $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|sort!|
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) 6
   (AND (|has| $ (|shallowlyMutable|)) (|has| $ (|finiteAggregate|))))
  (($ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|shallowlyMutable|))
        (|has| $ (|finiteAggregate|)))))
 (|sort|
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) 6 (|has| $ (|finiteAggregate|)))
  (($ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|smaller?|
  (((|Boolean|) $ $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))))
 (|size?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|setelt!| ((|#1| $ (|Integer|) |#1|) 6 (|has| $ (|shallowlyMutable|)))
  ((|#1| $ (|UniversalSegment| (|Integer|)) |#1|) 6
   (|has| $ (|shallowlyMutable|))))
 (|select|
  (($ (|Mapping| (|Boolean|) |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|sample| (($) 6 T CONST))
 (|rightTrim|
  (($ $ |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|reverse!|
  (($ $) 6 (AND (|has| $ (|shallowlyMutable|)) (|has| $ (|finiteAggregate|)))))
 (|reverse| (($ $) 6 (|has| $ (|finiteAggregate|))))
 (|removeDuplicates|
  (($ $) 6 (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|remove|
  (($ |#1| $) 6 (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))
  (($ (|Mapping| (|Boolean|) |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|reduce|
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1| |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1|) 6 (|has| $ (|finiteAggregate|)))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|qsetelt!| ((|#1| $ (|Integer|) |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|qelt| ((|#1| $ (|Integer|)) 6))
 (|position|
  (((|Integer|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|)))
  (((|Integer|) |#1| $) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))
  (((|Integer|) |#1| $ (|Integer|)) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|point| (($ (|List| |#1|)) 6))
 (|parts| (((|List| |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|outerProduct| (((|Matrix| |#1|) $ $) 6 (|has| |#1| (|Ring|))))
 (|new| (($ (|NonNegativeInteger|) |#1|) 6))
 (|more?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|minIndex| (((|Integer|) $) 6 (|has| (|Integer|) (|OrderedSet|))))
 (|min|
  ((|#1| $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))
  (($ $ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|merge|
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $ $) 6 (|has| $ (|finiteAggregate|)))
  (($ $ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|members| (((|List| |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|member?|
  (((|Boolean|) |#1| $) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|maxIndex| (((|Integer|) $) 6 (|has| (|Integer|) (|OrderedSet|))))
 (|max|
  ((|#1| (|Mapping| (|Boolean|) |#1| |#1|) $) 6 (|has| $ (|finiteAggregate|)))
  ((|#1| $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))
  (($ $ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|map!| (($ (|Mapping| |#1| |#1|) $) 6 (|has| $ (|shallowlyMutable|))))
 (|map| (($ (|Mapping| |#1| |#1|) $) 6) (($ (|Mapping| |#1| |#1| |#1|) $ $) 6))
 (|less?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|length|
  ((|#1| $) 6 (AND (|has| |#1| (|Ring|)) (|has| |#1| (|RadicalCategory|)))))
 (|leftTrim|
  (($ $ |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|latex|
  (((|String|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|)))))
 (|insert| (($ |#1| $ (|Integer|)) 6) (($ $ $ (|Integer|)) 6))
 (|indices| (((|List| (|Integer|)) $) 6))
 (|index?| (((|Boolean|) (|Integer|) $) 6))
 (|hashUpdate!|
  (((|HashState|) (|HashState|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|)))))
 (|hash|
  (((|SingleInteger|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|)))))
 (|first| ((|#1| $) 6 (|has| (|Integer|) (|OrderedSet|)))
  (($ $ (|NonNegativeInteger|)) 6))
 (|find| (((|Union| |#1| "failed") (|Mapping| (|Boolean|) |#1|) $) 6))
 (|fill!| (($ $ |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|extend| (($ $ (|List| |#1|)) 6))
 (|every?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|))))
 (|eval|
  (($ $ (|List| (|Equation| |#1|))) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|Equation| |#1|)) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ |#1| |#1|) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|List| |#1|) (|List| |#1|)) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|)))))
 (|eq?| (((|Boolean|) $ $) 6))
 (|entry?|
  (((|Boolean|) |#1| $) 6
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|entries| (((|List| |#1|) $) 6)) (|empty?| (((|Boolean|) $) 6))
 (|empty| (($) 6))
 (|elt| ((|#1| $ (|Integer|) |#1|) 6) ((|#1| $ (|Integer|)) 6)
  (($ $ (|UniversalSegment| (|Integer|))) 6))
 (|dot|
  ((|#1| $ $) 6 (AND (|has| |#1| (|SemiRng|)) (|has| |#1| (|AbelianMonoid|)))))
 (|dimension| (((|PositiveInteger|) $) 6))
 (|delete| (($ $ (|Integer|)) 6) (($ $ (|UniversalSegment| (|Integer|))) 6))
 (|cross| (($ $ $) 6))
 (|count|
  (((|NonNegativeInteger|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|)))
  (((|NonNegativeInteger|) |#1| $) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|copyInto!|
  (($ $ $ (|Integer|)) 6
   (AND (|has| $ (|shallowlyMutable|)) (|has| $ (|finiteAggregate|)))))
 (|copy| (($ $) 6))
 (|convert| (((|InputForm|) $) 6 (|has| |#1| (|ConvertibleTo| (|InputForm|))))
            (($ (|List| |#1|)) 6))
 (|construct| (($ (|List| |#1|)) 6))
 (|concat| (($ $ |#1|) 6) (($ |#1| $) 6) (($ $ $) 6) (($ (|List| $)) 6))
 (|coerce|
  (((|OutputForm|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|CoercibleTo| (|OutputForm|))))))
 (|any?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|))))
 (>=
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (>
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (=
  (((|Boolean|) $ $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|))
       (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))))
 (<=
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (<
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (- (($ $) 6 (|has| |#1| (|AbelianGroup|)))
    (($ $ $) 6 (|has| |#1| (|AbelianGroup|))))
 (+ (($ $ $) 6 (|has| |#1| (|AbelianSemiGroup|))))
 (* (($ (|Integer|) $) 6 (|has| |#1| (|AbelianGroup|)))
    (($ |#1| $) 6 (|has| |#1| (|SemiGroup|)))
    (($ $ |#1|) 6 (|has| |#1| (|SemiGroup|))))
 (|#| (((|NonNegativeInteger|) $) 6 (|has| $ (|finiteAggregate|)))))
PTCAT
(((|VectorCategory| |#1|) . T))
(((|Aggregate|) . T)
 ((|BasicType|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|BasicType|))))
 ((|CoercibleTo| (|OutputForm|)) OR
  (|has| |t#1| (|CoercibleTo| (|OutputForm|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|Collection| |t#1|) . T)
 ((|Comparable|) OR
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|ConvertibleTo| (|InputForm|)) |has| |t#1| (|ConvertibleTo| (|InputForm|)))
 ((|Eltable| (|UniversalSegment| (|Integer|)) $) . T)
 ((|Eltable| |t#1| |t#2|) . T) ((|EltableAggregate| |t#1| |t#2|) . T)
 ((|Evalable| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|FiniteLinearAggregate| |t#1|) . T) ((|HomogeneousAggregate| |t#1|) . T)
 ((|HomogeneousAggregate| |t#2|) . T)
 ((|IndexedAggregate| (|Integer|) |t#1|) . T)
 ((|InnerEvalable| |t#1| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|LinearAggregate| |t#1|) . T) ((|OneDimensionalArrayAggregate| |t#1|) . T)
 ((|OrderedSet|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|PartialOrder|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|SetCategory|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|Type|) . T) ((|VectorCategory| |#1|) . T) ((|finiteAggregate|) . T)
 ((|shallowlyMutable|) . T))
((|constructor|
  (NIL
   "PointCategory is the category of points in space which may be plotted via the graphics facilities. Functions are provided for defining points and handling elements of points."))
 (|extend| (($ $ (|List| |#1|)) "\\spad{extend(x,{} l,{} r)} \\undocumented"))
 (|cross|
  (($ $ $)
   "\\spad{cross(p,{} q)} computes the cross product of the two points \\spad{p} and \\spad{q}. Error if the \\spad{p} and \\spad{q} are not 3 dimensional"))
 (|convert|
  (($ (|List| |#1|))
   "\\spad{convert(l)} takes a list of elements,{} \\spad{l},{} from the domain Ring and returns the form of point category."))
 (|dimension|
  (((|PositiveInteger|) $)
   "\\spad{dimension(s)} returns the dimension of the point category \\spad{s}."))
 (|point|
  (($ (|List| |#1|))
   "\\spad{point(l)} returns a point category defined by a list \\spad{l} of elements from the domain \\spad{R}.")))
(("documentation" 0 11387) ("ancestors" 0 9626) ("parents" 0 9594)
 ("abbreviation" 0 9588) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1106) ("modemaps" 0 444) ("sourceFile" 0 407)
 ("constructorCategory" 0 120) ("constructorModemap" 0 51)
 ("constructorKind" 0 40) ("constructorForm" 0 20))