2521                (MAKEPROP '|Finite| 'NILADIC T)
(|Finite|)
|category|
(((|Finite|) (|Category|)) (T |Finite|))
(|Join| (|SetCategory|) (|ConvertibleTo| (|InputForm|)) (|Comparable|)
        (CATEGORY |domain| (SIGNATURE |size| ((|NonNegativeInteger|)))
         (SIGNATURE |index| ($ (|PositiveInteger|)))
         (SIGNATURE |lookup| ((|PositiveInteger|) $)) (SIGNATURE |random| ($))
         (SIGNATURE |enumerate| ((|List| $)))))
"/git/fricas/src/algebra/FINITE.spad"
((|size| (*1 *2)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))
 (|index| (*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|Finite|))))
 (|lookup| (*1 *2 *1)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|PositiveInteger|))))
 (|random| (*1 *1) (|ofCategory| *1 (|Finite|)))
 (|enumerate| (*1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|Finite|)))))
((~= (((|Boolean|) $ $) 6)) (|smaller?| (((|Boolean|) $ $) 6))
 (|size| (((|NonNegativeInteger|)) 6)) (|random| (($) 6))
 (|lookup| (((|PositiveInteger|) $) 6)) (|latex| (((|String|) $) 6))
 (|index| (($ (|PositiveInteger|)) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|enumerate| (((|List| $)) 6))
 (|convert| (((|InputForm|) $) 6)) (|coerce| (((|OutputForm|) $) 6))
 (= (((|Boolean|) $ $) 6)))
FINITE
(((|SetCategory|) . T) ((|ConvertibleTo| (|InputForm|)) . T)
 ((|Comparable|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|Comparable|) . T)
 ((|ConvertibleTo| (|InputForm|)) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "The category of domains composed of a finite set of elements. We include the functions \\spadfun{lookup} and \\spadfun{index} to give a bijection between the finite set and an initial segment of positive integers. \\blankline"))
 (|enumerate|
  (((|List| $)) "\\spad{enumerate()} returns list of elements of the set."))
 (|random| (($) "\\spad{random()} returns a random element from the set."))
 (|lookup|
  (((|PositiveInteger|) $)
   "\\spad{lookup(x)} returns a positive integer such that \\spad{x = index lookup x}."))
 (|index|
  (($ (|PositiveInteger|))
   "\\spad{index(i)} takes a positive integer \\spad{i} less than or equal to \\spad{size()} and returns the \\spad{i}\\spad{-}th element of the set. This operation establishes a bijection between the elements of the finite set and \\spad{1..size()}."))
 (|size|
  (((|NonNegativeInteger|))
   "\\spad{size()} returns the number of elements in the set.")))
(("documentation" 0 1576) ("ancestors" 0 1435) ("parents" 0 1351)
 ("abbreviation" 0 1344) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 898) ("modemaps" 0 475) ("sourceFile" 0 437)
 ("constructorCategory" 0 115) ("constructorModemap" 0 74)
 ("constructorKind" 0 63) ("constructorForm" 0 52) ("NILADIC" 0 20))