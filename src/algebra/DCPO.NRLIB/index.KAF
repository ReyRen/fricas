8066                (|Dcpo| S)
|category|
(((|Dcpo| |#1|) (|Category|) (|SetCategory|)) (T |Dcpo|))
(|Join| (|Poset| |t#1|)
        (CATEGORY |domain|
         (SIGNATURE |join|
          ((|NonNegativeInteger|) $ (|NonNegativeInteger|)
           (|NonNegativeInteger|)))))
"/git/fricas/src/algebra/DCPO.spad"
((|join| (*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Dcpo| *3))
       (|ofCategory| *3 (|SetCategory|)))))
((~= (((|Boolean|) $ $) 6))
 (|zetaMatrix| (((|IncidenceAlgebra| (|Integer|) |#1|) $) 6))
 (|upperSet| (($ $) 6)) (|unit| (($ (|List| |#1|) (|String|)) 6))
 (|terminal| (($ |#1|) 6))
 (|subdiagramSvg|
  (((|Void|) (|Scene| (|SCartesian| 2)) $ (|Boolean|) (|Boolean|)) 6))
 (|spanningTreeNode| (((|Tree| (|Integer|)) $ (|NonNegativeInteger|)) 6))
 (|spanningTreeArrow| (((|Tree| (|Integer|)) $ (|NonNegativeInteger|)) 6))
 (|spanningForestNode| (((|List| (|Tree| (|Integer|))) $) 6))
 (|spanningForestArrow| (((|List| (|Tree| (|Integer|))) $) 6))
 (|setVert| (((|Void|) $ (|List| |#1|)) 6))
 (|setArr| (((|Void|) $ (|List| (|List| (|Boolean|)))) 6))
 (|routeNodes|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)
    (|NonNegativeInteger|))
   6))
 (|routeArrows|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)
    (|NonNegativeInteger|))
   6))
 (|powerSetStructure| (($ |#1|) 6))
 (|outDegree| (((|NonNegativeInteger|) $ (|NonNegativeInteger|)) 6))
 (|opposite| (($ $) 6)) (|objectToIndex| (((|NonNegativeInteger|) $ |#1|) 6))
 (|nodeToNode| (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|nodeToArrow| (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|nodeFromNode|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|nodeFromArrow|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|moebius| (((|IncidenceAlgebra| (|Integer|) |#1|) $) 6))
 (|min| (((|NonNegativeInteger|) $) 6)
  (((|NonNegativeInteger|) $ (|List| (|NonNegativeInteger|))) 6))
 (|merge| (($ $ $) 6))
 (|meetIfCan|
  (((|Union| (|NonNegativeInteger|) #1="failed") $ (|NonNegativeInteger|)
    (|NonNegativeInteger|))
   6)
  (((|Union| (|NonNegativeInteger|) #1#) $ (|List| (|NonNegativeInteger|))) 6))
 (|max| (((|NonNegativeInteger|) $) 6)
  (((|NonNegativeInteger|) $ (|List| (|NonNegativeInteger|))) 6))
 (|mapContra|
  (($ $ (|List| (|NonNegativeInteger|)) (|List| |#1|) (|Integer|) (|Integer|))
   6))
 (|map|
  (($ $ (|List| (|NonNegativeInteger|)) (|List| |#1|) (|Integer|) (|Integer|))
   6))
 (|lub|
  (((|Union| (|NonNegativeInteger|) #1#) $ (|List| (|NonNegativeInteger|))) 6))
 (|lowerSet| (($ $) 6)) (|looseEquals| (((|Boolean|) $ $) 6))
 (|loopsNodes| (((|List| (|Loop|)) $) 6))
 (|loopsAtNode| (((|List| (|Loop|)) $ (|NonNegativeInteger|)) 6))
 (|loopsArrows| (((|List| (|Loop|)) $) 6))
 (|le| (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|latex| (((|String|) $) 6))
 (|laplacianMatrix| (((|Matrix| (|Integer|)) $) 6))
 (|kgraph| (($ (|List| |#1|) (|String|)) 6))
 (|joinIfCan|
  (((|Union| (|NonNegativeInteger|) #1#) $ (|NonNegativeInteger|)
    (|NonNegativeInteger|))
   6)
  (((|Union| (|NonNegativeInteger|) #1#) $ (|List| (|NonNegativeInteger|))) 6))
 (|join|
  (((|NonNegativeInteger|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|isGreaterThan?|
  (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|isFunctional?| (((|Boolean|) $) 6))
 (|isFixPoint?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|isDirected?| (((|Boolean|)) 6))
 (|isDirectSuccessor?|
  (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|isChain?| (((|Boolean|) $) 6)) (|isAntisymmetric?| (((|Boolean|) $) 6))
 (|isAntiChain?| (((|Boolean|) $) 6)) (|isAcyclic?| (((|Boolean|) $) 6))
 (|initial| (($) 6)) (|indexToObject| ((|#1| $ (|NonNegativeInteger|)) 6))
 (|incidenceMatrix| (((|Matrix| (|Integer|)) $) 6))
 (|inDegree| (((|NonNegativeInteger|) $ (|NonNegativeInteger|)) 6))
 (|implies| (((|Boolean|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|glb|
  (((|Union| (|NonNegativeInteger|) #1#) $ (|List| (|NonNegativeInteger|))) 6))
 (|getVertices|
  (((|List|
     (|Record| (|:| |value| |#1|) (|:| |posX| (|NonNegativeInteger|))
               (|:| |posY| (|NonNegativeInteger|))))
    $)
   6))
 (|getVertexIndex| (((|NonNegativeInteger|) $ |#1|) 6))
 (|getVert| (((|List| |#1|) $) 6))
 (|getArrows|
  (((|List|
     (|Record| (|:| |name| (|String|)) (|:| |arrType| (|NonNegativeInteger|))
               (|:| |fromOb| (|NonNegativeInteger|))
               (|:| |toOb| (|NonNegativeInteger|)) (|:| |xOffset| (|Integer|))
               (|:| |yOffset| (|Integer|))
               (|:| |map| (|List| (|NonNegativeInteger|)))))
    $)
   6))
 (|getArrowIndex|
  (((|NonNegativeInteger|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|getArr| (((|List| (|List| (|Boolean|))) $) 6))
 (|flatten| (($ (|DirectedGraph| $)) 6))
 (|finitePoset| (($ (|List| |#1|) (|List| (|List| (|Boolean|)))) 6)
  (($ (|List| |#1|) (|Mapping| (|Boolean|) |#1| |#1|)) 6))
 (|distanceMatrix| (((|Matrix| (|Integer|)) $) 6))
 (|distance| (((|Integer|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|diagramsSvg| (((|Void|) (|String|) (|List| $) (|Boolean|)) 6))
 (|diagramWidth| (((|NonNegativeInteger|) $) 6))
 (|diagramSvg| (((|Void|) (|String|) $ (|Boolean|)) 6))
 (|diagramHeight| (((|NonNegativeInteger|) $) 6))
 (|deepDiagramSvg| (((|Void|) (|String|) $ (|Boolean|)) 6))
 (|cycleOpen| (($ (|List| |#1|) (|String|)) 6))
 (|cycleClosed| (($ (|List| |#1|) (|String|)) 6))
 (|createY|
  (((|NonNegativeInteger|) (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|createX|
  (((|NonNegativeInteger|) (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|createWidth| (((|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|coverMatrix| (((|IncidenceAlgebra| (|Integer|) |#1|) $) 6))
 (|completeTransitivity| (($ $) 6)) (|completeReflexivity| (($ $) 6))
 (|coerce| (((|OutputForm|) $) 6))
 (|arrowsToNode|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowsToArrow|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowsFromNode|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowsFromArrow|
  (((|List| (|NonNegativeInteger|)) $ (|NonNegativeInteger|)) 6))
 (|arrowName| (((|String|) $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (|adjacencyMatrix| (((|Matrix| (|NonNegativeInteger|)) $) 6))
 (|addObject!| (($ $ |#1|) 6)
  (($ $
    (|Record| (|:| |value| |#1|) (|:| |posX| (|NonNegativeInteger|))
              (|:| |posY| (|NonNegativeInteger|))))
   6))
 (|addArrow!|
  (($ $
    (|Record| (|:| |name| (|String|)) (|:| |arrType| (|NonNegativeInteger|))
              (|:| |fromOb| (|NonNegativeInteger|))
              (|:| |toOb| (|NonNegativeInteger|)) (|:| |xOffset| (|Integer|))
              (|:| |yOffset| (|Integer|))
              (|:| |map| (|List| (|NonNegativeInteger|)))))
   6)
  (($ $ (|String|) (|NonNegativeInteger|) (|NonNegativeInteger|)) 6)
  (($ $ (|String|) (|NonNegativeInteger|) (|NonNegativeInteger|)
    (|List| (|NonNegativeInteger|)))
   6)
  (($ $ (|String|) |#1| |#1|) 6)
  (($ $ (|NonNegativeInteger|) (|NonNegativeInteger|)) 6))
 (= (((|Boolean|) $ $) 6)) (+ (($ $ $) 6)))
DCPO
(((|Poset| |#1|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|FiniteGraph| |t#1|) . T) ((|Poset| |#1|) . T) ((|Preorder| |t#1|) . T)
 ((|SetCategory|) . T))
((|constructor|
  (NIL
   "Directed-complete partial order,{} partial order that is guaranteed to have a join of any two elements. For more documentation see: \\indented{2}{http://www.euclideanspace.com/prog/scratchpad/mycode/discrete/logic/index.\\spad{htm}}"))
 (|join|
  (((|NonNegativeInteger|) $ (|NonNegativeInteger|) (|NonNegativeInteger|))
   "returns the join of 'a' and \\spad{'b'} In this version of join nodes are represented as index values. Not every poset will have a join but DCPO will.")))
(("documentation" 0 7559) ("ancestors" 0 7402) ("parents" 0 7379)
 ("abbreviation" 0 7374) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 457) ("modemaps" 0 311) ("sourceFile" 0 275)
 ("constructorCategory" 0 100) ("constructorModemap" 0 42)
 ("constructorKind" 0 31) ("constructorForm" 0 20))