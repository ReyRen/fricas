3947                (|MatrixCategoryFunctions2| R1 |Row1| |Col1| M1 R2 |Row2|
                                                |Col2| M2)
|package|
(((|MatrixCategoryFunctions2| |#1| |#2| |#3| |#4| |#5| |#6| |#7| |#8|)
  (CATEGORY |package| (SIGNATURE |map| (|#8| (|Mapping| |#5| |#1|) |#4|))
   (SIGNATURE |map|
    ((|Union| |#8| "failed") (|Mapping| (|Union| |#5| "failed") |#1|) |#4|))
   (SIGNATURE |reduce| (|#5| (|Mapping| |#5| |#1| |#5|) |#4| |#5|)))
  (|Join| (|SemiRng|) (|AbelianMonoid|)) (|FiniteLinearAggregate| |#1|)
  (|FiniteLinearAggregate| |#1|) (|MatrixCategory| |#1| |#2| |#3|)
  (|Join| (|SemiRng|) (|AbelianMonoid|)) (|FiniteLinearAggregate| |#5|)
  (|FiniteLinearAggregate| |#5|) (|MatrixCategory| |#5| |#6| |#7|))
 (T |MatrixCategoryFunctions2|))
(CATEGORY |package| (SIGNATURE |map| (|#8| (|Mapping| |#5| |#1|) |#4|))
 (SIGNATURE |map|
  ((|Union| |#8| "failed") (|Mapping| (|Union| |#5| "failed") |#1|) |#4|))
 (SIGNATURE |reduce| (|#5| (|Mapping| |#5| |#1| |#5|) |#4| |#5|)))
"/git/fricas/src/algebra/MATCAT2.spad"
((|reduce| (*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *8 (|FiniteLinearAggregate| *2))
       (|ofCategory| *9 (|FiniteLinearAggregate| *2))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *2 *8 *9 *10))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *10 (|MatrixCategory| *2 *8 *9))))
 (|map| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *8 "failed") *5))
   (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *6 (|FiniteLinearAggregate| *5))
   (|ofCategory| *7 (|FiniteLinearAggregate| *5))
   (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
   (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
   (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *8))
   (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 (|map| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8)))))
((|reduce| ((|#5| (|Mapping| |#5| |#1| |#5|) |#4| |#5|) 39))
 (|map|
  (((|Union| |#8| "failed") (|Mapping| (|Union| |#5| "failed") |#1|) |#4|) 37)
  ((|#8| (|Mapping| |#5| |#1|) |#4|) 31)))
MATCAT2
((|constructor|
  (NIL
   "\\spadtype{MatrixCategoryFunctions2} provides functions between two matrix domains. The functions provided are \\spadfun{map} and \\spadfun{reduce}."))
 (|reduce|
  ((|#5| (|Mapping| |#5| |#1| |#5|) |#4| |#5|)
   "\\spad{reduce(f,{} m,{} r)} traverses \\spad{m} row by row passing \\spad{m}(\\spad{i},{} \\spad{j}) as first argument to \\spad{f}. The second argument to \\spad{f} works as accumulator,{} value from previous call is passed to next call. On first call \\spad{r} is passed as second argument to \\spad{f}. Return value is the last result returned by \\spad{f}."))
 (|map|
  (((|Union| |#8| "failed") (|Mapping| (|Union| |#5| "failed") |#1|) |#4|)
   "\\spad{map(f,{} m)} applies the function \\spad{f} to the elements of the matrix \\spad{m}.")
  ((|#8| (|Mapping| |#5| |#1|) |#4|)
   "\\spad{map(f,{} m)} applies the function \\spad{f} to the elements of the matrix \\spad{m}.")))
(("documentation" 0 3024) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 3016) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2825) ("modemaps" 0 1041) ("sourceFile" 0 1002)
 ("constructorCategory" 0 770) ("constructorModemap" 0 147)
 ("constructorKind" 0 137) ("constructorForm" 0 20))