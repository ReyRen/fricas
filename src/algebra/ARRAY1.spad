)abbrev domain ARRAY1 OneDimensionalArray
++ This is the domain of 1-based one dimensional arrays

OneDimensionalArray(S : Type) : Exports == Implementation where
  ARRAYMININDEX ==> 1       -- if you want to change this, be my guest
  Exports == OneDimensionalArrayAggregate S with
    oneDimensionalArray : List S -> %
        ++ oneDimensionalArray(l) creates an array from a list of elements l
    oneDimensionalArray : (NonNegativeInteger, S) -> %
        ++ oneDimensionalArray(n, s) creates an array from n copies of element s
  Implementation == IndexedOneDimensionalArray(S, ARRAYMININDEX) add

    -- qelt and qsetelt! are logically unnecessary, but good for
    -- performance
    Qelt1 ==> QAREF1O$Lisp
    Qsetelt1 ==> QSETAREF1O$Lisp

    qelt(x, i) == Qelt1(x, i, ARRAYMININDEX)
    qsetelt!(x, i, s) == Qsetelt1(x, i, s, ARRAYMININDEX)

    oneDimensionalArray(u) ==
      n := #u
      n = 0 => empty()
      a := new(n, first u)
      for i in 2..n for x in rest u repeat a.i := x
      a
    oneDimensionalArray(n, s) == new(n, s)

