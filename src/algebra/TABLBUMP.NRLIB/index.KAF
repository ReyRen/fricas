11980               (|TableauxBumpers| S)
|package|
(((|TableauxBumpers| |#1|)
  (CATEGORY |package|
   (SIGNATURE |bumprow|
    ((|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| |#1|))
               (|:| |td| (|List| (|List| |#1|))))
     (|Mapping| (|Boolean|) |#1| |#1|) (|List| |#1|) (|List| (|List| |#1|))))
   (SIGNATURE |bumptab|
    ((|List| (|List| (|List| |#1|))) (|Mapping| (|Boolean|) |#1| |#1|)
     (|List| |#1|) (|List| (|List| (|List| |#1|)))))
   (SIGNATURE |bumptab1|
    ((|List| (|List| (|List| |#1|))) (|List| |#1|)
     (|List| (|List| (|List| |#1|)))))
   (SIGNATURE |untab|
    ((|List| (|List| |#1|)) (|List| (|List| |#1|))
     (|List| (|List| (|List| |#1|)))))
   (SIGNATURE |bat1| ((|List| (|List| |#1|)) (|List| (|List| (|List| |#1|)))))
   (SIGNATURE |bat| ((|List| (|List| |#1|)) (|Tableau| (|List| |#1|))))
   (SIGNATURE |tab1| ((|List| (|List| (|List| |#1|))) (|List| (|List| |#1|))))
   (SIGNATURE |tab| ((|Tableau| (|List| |#1|)) (|List| |#1|)))
   (SIGNATURE |lex| ((|List| (|List| |#1|)) (|List| (|List| |#1|))))
   (SIGNATURE |slex| ((|List| (|List| |#1|)) (|List| |#1|)))
   (SIGNATURE |inverse| ((|List| |#1|) (|List| |#1|)))
   (SIGNATURE |maxrow|
    ((|Record| (|:| |f1| (|List| |#1|))
               (|:| |f2| (|List| (|List| (|List| |#1|))))
               (|:| |f3| (|List| (|List| |#1|)))
               (|:| |f4| (|List| (|List| (|List| |#1|)))))
     (|List| |#1|) (|List| (|List| (|List| |#1|))) (|List| (|List| |#1|))
     (|List| (|List| (|List| |#1|))) (|List| (|List| (|List| |#1|)))
     (|List| (|List| (|List| |#1|)))))
   (SIGNATURE |mr|
    ((|Record| (|:| |f1| (|List| |#1|))
               (|:| |f2| (|List| (|List| (|List| |#1|))))
               (|:| |f3| (|List| (|List| |#1|)))
               (|:| |f4| (|List| (|List| (|List| |#1|)))))
     (|List| (|List| (|List| |#1|))))))
  (|OrderedSet|))
 (T |TableauxBumpers|))
(CATEGORY |package|
 (SIGNATURE |bumprow|
  ((|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| |#1|))
             (|:| |td| (|List| (|List| |#1|))))
   (|Mapping| (|Boolean|) |#1| |#1|) (|List| |#1|) (|List| (|List| |#1|))))
 (SIGNATURE |bumptab|
  ((|List| (|List| (|List| |#1|))) (|Mapping| (|Boolean|) |#1| |#1|)
   (|List| |#1|) (|List| (|List| (|List| |#1|)))))
 (SIGNATURE |bumptab1|
  ((|List| (|List| (|List| |#1|))) (|List| |#1|)
   (|List| (|List| (|List| |#1|)))))
 (SIGNATURE |untab|
  ((|List| (|List| |#1|)) (|List| (|List| |#1|))
   (|List| (|List| (|List| |#1|)))))
 (SIGNATURE |bat1| ((|List| (|List| |#1|)) (|List| (|List| (|List| |#1|)))))
 (SIGNATURE |bat| ((|List| (|List| |#1|)) (|Tableau| (|List| |#1|))))
 (SIGNATURE |tab1| ((|List| (|List| (|List| |#1|))) (|List| (|List| |#1|))))
 (SIGNATURE |tab| ((|Tableau| (|List| |#1|)) (|List| |#1|)))
 (SIGNATURE |lex| ((|List| (|List| |#1|)) (|List| (|List| |#1|))))
 (SIGNATURE |slex| ((|List| (|List| |#1|)) (|List| |#1|)))
 (SIGNATURE |inverse| ((|List| |#1|) (|List| |#1|)))
 (SIGNATURE |maxrow|
  ((|Record| (|:| |f1| (|List| |#1|))
             (|:| |f2| (|List| (|List| (|List| |#1|))))
             (|:| |f3| (|List| (|List| |#1|)))
             (|:| |f4| (|List| (|List| (|List| |#1|)))))
   (|List| |#1|) (|List| (|List| (|List| |#1|))) (|List| (|List| |#1|))
   (|List| (|List| (|List| |#1|))) (|List| (|List| (|List| |#1|)))
   (|List| (|List| (|List| |#1|)))))
 (SIGNATURE |mr|
  ((|Record| (|:| |f1| (|List| |#1|))
             (|:| |f2| (|List| (|List| (|List| |#1|))))
             (|:| |f3| (|List| (|List| |#1|)))
             (|:| |f4| (|List| (|List| (|List| |#1|)))))
   (|List| (|List| (|List| |#1|))))))
"/git/fricas/src/algebra/TABLBUMP.spad"
((|mr| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *4))
                             (|:| |f2| (|List| (|List| (|List| *4))))
                             (|:| |f3| (|List| (|List| *4)))
                             (|:| |f4| (|List| (|List| (|List| *4))))))
       (|isDomain| *1 (|TableauxBumpers| *4))))
 (|maxrow| (*1 *2 *3 *4 *5 *4 *4 *4)
  (AND (|isDomain| *4 (|List| (|List| (|List| *6))))
       (|isDomain| *5 (|List| (|List| *6))) (|isDomain| *3 (|List| *6))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *6))
                             (|:| |f2| (|List| (|List| (|List| *6))))
                             (|:| |f3| (|List| (|List| *6)))
                             (|:| |f4| (|List| (|List| (|List| *6))))))
       (|isDomain| *1 (|TableauxBumpers| *6))))
 (|inverse| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))
 (|slex| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))
 (|lex| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))
 (|tab| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Tableau| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))
 (|tab1| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *1 (|TableauxBumpers| *4))))
 (|bat| (*1 *2 *3)
  (AND (|isDomain| *3 (|Tableau| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))
 (|bat1| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))
       (|ofCategory| *4 (|OrderedSet|))))
 (|untab| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))
 (|bumptab1| (*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))
 (|bumptab| (*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *5))))
 (|bumprow| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6 *6))
       (|isDomain| *5 (|List| (|List| *6))) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *4 (|List| *6))
       (|isDomain| *2
                   (|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| *6))
                             (|:| |td| (|List| (|List| *6)))))
       (|isDomain| *1 (|TableauxBumpers| *6)))))
((|untab|
  (((|List| (|List| |#1|)) (|List| (|List| |#1|))
    (|List| (|List| (|List| |#1|))))
   40))
 (|tab1| (((|List| (|List| (|List| |#1|))) (|List| (|List| |#1|))) 24))
 (|tab| (((|Tableau| (|List| |#1|)) (|List| |#1|)) 34))
 (|slex| (((|List| (|List| |#1|)) (|List| |#1|)) 30))
 (|mr|
  (((|Record| (|:| |f1| (|List| |#1|))
              (|:| |f2| (|List| (|List| (|List| |#1|))))
              (|:| |f3| (|List| (|List| |#1|)))
              (|:| |f4| (|List| (|List| (|List| |#1|)))))
    (|List| (|List| (|List| |#1|))))
   38))
 (|maxrow|
  (((|Record| (|:| |f1| (|List| |#1|))
              (|:| |f2| (|List| (|List| (|List| |#1|))))
              (|:| |f3| (|List| (|List| |#1|)))
              (|:| |f4| (|List| (|List| (|List| |#1|)))))
    (|List| |#1|) (|List| (|List| (|List| |#1|))) (|List| (|List| |#1|))
    (|List| (|List| (|List| |#1|))) (|List| (|List| (|List| |#1|)))
    (|List| (|List| (|List| |#1|))))
   37))
 (|lex| (((|List| (|List| |#1|)) (|List| (|List| |#1|))) 28))
 (|inverse| (((|List| |#1|) (|List| |#1|)) 31))
 (|bumptab1|
  (((|List| (|List| (|List| |#1|))) (|List| |#1|)
    (|List| (|List| (|List| |#1|))))
   18))
 (|bumptab|
  (((|List| (|List| (|List| |#1|))) (|Mapping| (|Boolean|) |#1| |#1|)
    (|List| |#1|) (|List| (|List| (|List| |#1|))))
   15))
 (|bumprow|
  (((|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| |#1|))
              (|:| |td| (|List| (|List| |#1|))))
    (|Mapping| (|Boolean|) |#1| |#1|) (|List| |#1|) (|List| (|List| |#1|)))
   13))
 (|bat1| (((|List| (|List| |#1|)) (|List| (|List| (|List| |#1|)))) 41))
 (|bat| (((|List| (|List| |#1|)) (|Tableau| (|List| |#1|))) 43)))
TABLBUMP
((|constructor|
  (NIL
   "TableauBumpers implements the Schenstead-Knuth correspondence between sequences and pairs of Young tableaux. The 2 Young tableaux are represented as a single tableau with pairs as components."))
 (|mr|
  (((|Record| (|:| |f1| (|List| |#1|))
              (|:| |f2| (|List| (|List| (|List| |#1|))))
              (|:| |f3| (|List| (|List| |#1|)))
              (|:| |f4| (|List| (|List| (|List| |#1|)))))
    (|List| (|List| (|List| |#1|))))
   "\\spad{mr(t)} is an auxiliary function which finds the position of the maximum element of a tableau \\spad{t} which is in the lowest row,{} producing a record of results"))
 (|maxrow|
  (((|Record| (|:| |f1| (|List| |#1|))
              (|:| |f2| (|List| (|List| (|List| |#1|))))
              (|:| |f3| (|List| (|List| |#1|)))
              (|:| |f4| (|List| (|List| (|List| |#1|)))))
    (|List| |#1|) (|List| (|List| (|List| |#1|))) (|List| (|List| |#1|))
    (|List| (|List| (|List| |#1|))) (|List| (|List| (|List| |#1|)))
    (|List| (|List| (|List| |#1|))))
   "\\spad{maxrow(a,{} b,{} c,{} d,{} e)} is an auxiliary function for \\spad{mr}"))
 (|inverse|
  (((|List| |#1|) (|List| |#1|))
   "\\spad{inverse(ls)} forms the inverse of a sequence \\spad{ls}"))
 (|slex|
  (((|List| (|List| |#1|)) (|List| |#1|))
   "\\spad{slex(ls)} sorts the argument sequence \\spad{ls},{} then zips (see \\spadfunFrom{map}{\\spad{ListFunctions3}}) the original argument sequence with the sorted result to a list of pairs"))
 (|lex|
  (((|List| (|List| |#1|)) (|List| (|List| |#1|)))
   "\\spad{lex(ls)} sorts a list of pairs to lexicographic order"))
 (|tab|
  (((|Tableau| (|List| |#1|)) (|List| |#1|))
   "\\spad{tab(ls)} creates a tableau from \\spad{ls} by first creating a list of pairs using \\spadfunFrom{slex}{TableauBumpers},{} then creating a tableau using \\spadfunFrom{\\spad{tab1}}{TableauBumpers}."))
 (|tab1|
  (((|List| (|List| (|List| |#1|))) (|List| (|List| |#1|)))
   "\\spad{tab1(lp)} creates a tableau from a list of pairs \\spad{lp}"))
 (|bat|
  (((|List| (|List| |#1|)) (|Tableau| (|List| |#1|)))
   "\\spad{bat(ls)} unbumps a tableau \\spad{ls}"))
 (|bat1|
  (((|List| (|List| |#1|)) (|List| (|List| (|List| |#1|))))
   "\\spad{bat1(llp)} unbumps a tableau \\spad{llp}. Operation \\spad{bat1} is the inverse of \\spad{tab1}."))
 (|untab|
  (((|List| (|List| |#1|)) (|List| (|List| |#1|))
    (|List| (|List| (|List| |#1|))))
   "\\spad{untab(lp,{} llp)} is an auxiliary function which unbumps a tableau \\spad{llp},{} using \\spad{lp} to accumulate pairs"))
 (|bumptab1|
  (((|List| (|List| (|List| |#1|))) (|List| |#1|)
    (|List| (|List| (|List| |#1|))))
   "\\spad{bumptab1(pr,{} t)} bumps a tableau \\spad{t} with a pair \\spad{pr} using comparison function \\spadfun{<},{} returning a new tableau"))
 (|bumptab|
  (((|List| (|List| (|List| |#1|))) (|Mapping| (|Boolean|) |#1| |#1|)
    (|List| |#1|) (|List| (|List| (|List| |#1|))))
   "\\spad{bumptab(cf,{} pr,{} t)} bumps a tableau \\spad{t} with a pair \\spad{pr} using comparison function \\spad{cf},{} returning a new tableau"))
 (|bumprow|
  (((|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| |#1|))
              (|:| |td| (|List| (|List| |#1|))))
    (|Mapping| (|Boolean|) |#1| |#1|) (|List| |#1|) (|List| (|List| |#1|)))
   "\\spad{bumprow(cf,{} pr,{} r)} is an auxiliary function which bumps a row \\spad{r} with a pair \\spad{pr} using comparison function \\spad{cf},{} and returns a record")))
(("documentation" 0 8530) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 8521) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 6877) ("modemaps" 0 3623) ("sourceFile" 0 3583)
 ("constructorCategory" 0 1887) ("constructorModemap" 0 52)
 ("constructorKind" 0 42) ("constructorForm" 0 20))