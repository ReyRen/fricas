24760               (|ElementaryFunction| R F)
|package|
(((|ElementaryFunction| |#1| |#2|)
  (CATEGORY |package| (SIGNATURE |exp| (|#2| |#2|))
   (SIGNATURE |log| (|#2| |#2|)) (SIGNATURE |sin| (|#2| |#2|))
   (SIGNATURE |cos| (|#2| |#2|)) (SIGNATURE |tan| (|#2| |#2|))
   (SIGNATURE |cot| (|#2| |#2|)) (SIGNATURE |sec| (|#2| |#2|))
   (SIGNATURE |csc| (|#2| |#2|)) (SIGNATURE |asin| (|#2| |#2|))
   (SIGNATURE |acos| (|#2| |#2|)) (SIGNATURE |atan| (|#2| |#2|))
   (SIGNATURE |acot| (|#2| |#2|)) (SIGNATURE |asec| (|#2| |#2|))
   (SIGNATURE |acsc| (|#2| |#2|)) (SIGNATURE |sinh| (|#2| |#2|))
   (SIGNATURE |cosh| (|#2| |#2|)) (SIGNATURE |tanh| (|#2| |#2|))
   (SIGNATURE |coth| (|#2| |#2|)) (SIGNATURE |sech| (|#2| |#2|))
   (SIGNATURE |csch| (|#2| |#2|)) (SIGNATURE |asinh| (|#2| |#2|))
   (SIGNATURE |acosh| (|#2| |#2|)) (SIGNATURE |atanh| (|#2| |#2|))
   (SIGNATURE |acoth| (|#2| |#2|)) (SIGNATURE |asech| (|#2| |#2|))
   (SIGNATURE |acsch| (|#2| |#2|)) (SIGNATURE |pi| (|#2|))
   (SIGNATURE |belong?| ((|Boolean|) (|BasicOperator|)))
   (SIGNATURE |operator| ((|BasicOperator|) (|BasicOperator|)))
   (SIGNATURE |iisqrt2| (|#2|)) (SIGNATURE |iisqrt3| (|#2|))
   (SIGNATURE |iiexp| (|#2| |#2|)) (SIGNATURE |iilog| (|#2| |#2|))
   (SIGNATURE |iisin| (|#2| |#2|)) (SIGNATURE |iicos| (|#2| |#2|))
   (SIGNATURE |iitan| (|#2| |#2|)) (SIGNATURE |iicot| (|#2| |#2|))
   (SIGNATURE |iisec| (|#2| |#2|)) (SIGNATURE |iicsc| (|#2| |#2|))
   (SIGNATURE |iiasin| (|#2| |#2|)) (SIGNATURE |iiacos| (|#2| |#2|))
   (SIGNATURE |iiatan| (|#2| |#2|)) (SIGNATURE |iiacot| (|#2| |#2|))
   (SIGNATURE |iiasec| (|#2| |#2|)) (SIGNATURE |iiacsc| (|#2| |#2|))
   (SIGNATURE |iisinh| (|#2| |#2|)) (SIGNATURE |iicosh| (|#2| |#2|))
   (SIGNATURE |iitanh| (|#2| |#2|)) (SIGNATURE |iicoth| (|#2| |#2|))
   (SIGNATURE |iisech| (|#2| |#2|)) (SIGNATURE |iicsch| (|#2| |#2|))
   (SIGNATURE |iiasinh| (|#2| |#2|)) (SIGNATURE |iiacosh| (|#2| |#2|))
   (SIGNATURE |iiatanh| (|#2| |#2|)) (SIGNATURE |iiacoth| (|#2| |#2|))
   (SIGNATURE |iiasech| (|#2| |#2|)) (SIGNATURE |iiacsch| (|#2| |#2|))
   (SIGNATURE |specialTrigs|
    ((|Union| |#2| "failed") |#2|
     (|List| (|Record| (|:| |func| |#2|) (|:| |pole| (|Boolean|))))))
   (SIGNATURE |localReal?| ((|Boolean|) |#2|)))
  (|Join| (|Comparable|) (|IntegralDomain|))
  (|Join| (|FunctionSpace| |#1|) (|RadicalCategory|)))
 (T |ElementaryFunction|))
(CATEGORY |package| (SIGNATURE |exp| (|#2| |#2|)) (SIGNATURE |log| (|#2| |#2|))
 (SIGNATURE |sin| (|#2| |#2|)) (SIGNATURE |cos| (|#2| |#2|))
 (SIGNATURE |tan| (|#2| |#2|)) (SIGNATURE |cot| (|#2| |#2|))
 (SIGNATURE |sec| (|#2| |#2|)) (SIGNATURE |csc| (|#2| |#2|))
 (SIGNATURE |asin| (|#2| |#2|)) (SIGNATURE |acos| (|#2| |#2|))
 (SIGNATURE |atan| (|#2| |#2|)) (SIGNATURE |acot| (|#2| |#2|))
 (SIGNATURE |asec| (|#2| |#2|)) (SIGNATURE |acsc| (|#2| |#2|))
 (SIGNATURE |sinh| (|#2| |#2|)) (SIGNATURE |cosh| (|#2| |#2|))
 (SIGNATURE |tanh| (|#2| |#2|)) (SIGNATURE |coth| (|#2| |#2|))
 (SIGNATURE |sech| (|#2| |#2|)) (SIGNATURE |csch| (|#2| |#2|))
 (SIGNATURE |asinh| (|#2| |#2|)) (SIGNATURE |acosh| (|#2| |#2|))
 (SIGNATURE |atanh| (|#2| |#2|)) (SIGNATURE |acoth| (|#2| |#2|))
 (SIGNATURE |asech| (|#2| |#2|)) (SIGNATURE |acsch| (|#2| |#2|))
 (SIGNATURE |pi| (|#2|)) (SIGNATURE |belong?| ((|Boolean|) (|BasicOperator|)))
 (SIGNATURE |operator| ((|BasicOperator|) (|BasicOperator|)))
 (SIGNATURE |iisqrt2| (|#2|)) (SIGNATURE |iisqrt3| (|#2|))
 (SIGNATURE |iiexp| (|#2| |#2|)) (SIGNATURE |iilog| (|#2| |#2|))
 (SIGNATURE |iisin| (|#2| |#2|)) (SIGNATURE |iicos| (|#2| |#2|))
 (SIGNATURE |iitan| (|#2| |#2|)) (SIGNATURE |iicot| (|#2| |#2|))
 (SIGNATURE |iisec| (|#2| |#2|)) (SIGNATURE |iicsc| (|#2| |#2|))
 (SIGNATURE |iiasin| (|#2| |#2|)) (SIGNATURE |iiacos| (|#2| |#2|))
 (SIGNATURE |iiatan| (|#2| |#2|)) (SIGNATURE |iiacot| (|#2| |#2|))
 (SIGNATURE |iiasec| (|#2| |#2|)) (SIGNATURE |iiacsc| (|#2| |#2|))
 (SIGNATURE |iisinh| (|#2| |#2|)) (SIGNATURE |iicosh| (|#2| |#2|))
 (SIGNATURE |iitanh| (|#2| |#2|)) (SIGNATURE |iicoth| (|#2| |#2|))
 (SIGNATURE |iisech| (|#2| |#2|)) (SIGNATURE |iicsch| (|#2| |#2|))
 (SIGNATURE |iiasinh| (|#2| |#2|)) (SIGNATURE |iiacosh| (|#2| |#2|))
 (SIGNATURE |iiatanh| (|#2| |#2|)) (SIGNATURE |iiacoth| (|#2| |#2|))
 (SIGNATURE |iiasech| (|#2| |#2|)) (SIGNATURE |iiacsch| (|#2| |#2|))
 (SIGNATURE |specialTrigs|
  ((|Union| |#2| "failed") |#2|
   (|List| (|Record| (|:| |func| |#2|) (|:| |pole| (|Boolean|))))))
 (SIGNATURE |localReal?| ((|Boolean|) |#2|)))
"/git/fricas/src/algebra/EF.spad"
((|localReal?| (*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *3))
       (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))
 (|specialTrigs| (*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|List| (|Record| (|:| |func| *2) (|:| |pole| (|Boolean|)))))
   (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))
   (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|ElementaryFunction| *4 *2))))
 (|iiacsch| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiasech| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiacoth| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiatanh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiacosh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiasinh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iicsch| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iisech| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iicoth| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iitanh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iicosh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iisinh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiacsc| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiasec| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiacot| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiatan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiacos| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiasin| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iicsc| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iisec| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iicot| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iitan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iicos| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iisin| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iilog| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iiexp| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|iisqrt3| (*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 (|iisqrt2| (*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 (|operator| (*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *4))
       (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|belong?| (*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *5))
       (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))
 (|pi| (*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 (|acsch| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|asech| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|acoth| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|atanh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|acosh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|asinh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|csch| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|sech| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|coth| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|tanh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|cosh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|sinh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|acsc| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|asec| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|acot| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|atan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|acos| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|asin| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|csc| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|sec| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|cot| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|tan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|cos| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|sin| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|log| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 (|exp| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))))
((|tanh| ((|#2| |#2|) 76)) (|tan| ((|#2| |#2|) 64))
 (|specialTrigs|
  (((|Union| |#2| "failed") |#2|
    (|List| (|Record| (|:| |func| |#2|) (|:| |pole| (|Boolean|)))))
   115))
 (|sinh| ((|#2| |#2|) 74)) (|sin| ((|#2| |#2|) 62)) (|sech| ((|#2| |#2|) 78))
 (|sec| ((|#2| |#2|) 66)) (|pi| ((|#2|) 42))
 (|operator| (((|BasicOperator|) (|BasicOperator|)) 94))
 (|log| ((|#2| |#2|) 60)) (|localReal?| (((|Boolean|) |#2|) 134))
 (|iitanh| ((|#2| |#2|) 181)) (|iitan| ((|#2| |#2|) 157))
 (|iisqrt3| ((|#2|) 55)) (|iisqrt2| ((|#2|) 54)) (|iisinh| ((|#2| |#2|) 177))
 (|iisin| ((|#2| |#2|) 153)) (|iisech| ((|#2| |#2|) 185))
 (|iisec| ((|#2| |#2|) 161)) (|iilog| ((|#2| |#2|) 149))
 (|iiexp| ((|#2| |#2|) 151)) (|iicsch| ((|#2| |#2|) 187))
 (|iicsc| ((|#2| |#2|) 163)) (|iicoth| ((|#2| |#2|) 183))
 (|iicot| ((|#2| |#2|) 159)) (|iicosh| ((|#2| |#2|) 179))
 (|iicos| ((|#2| |#2|) 155)) (|iiatanh| ((|#2| |#2|) 193))
 (|iiatan| ((|#2| |#2|) 169)) (|iiasinh| ((|#2| |#2|) 189))
 (|iiasin| ((|#2| |#2|) 165)) (|iiasech| ((|#2| |#2|) 197))
 (|iiasec| ((|#2| |#2|) 173)) (|iiacsch| ((|#2| |#2|) 199))
 (|iiacsc| ((|#2| |#2|) 175)) (|iiacoth| ((|#2| |#2|) 195))
 (|iiacot| ((|#2| |#2|) 171)) (|iiacosh| ((|#2| |#2|) 191))
 (|iiacos| ((|#2| |#2|) 167)) (|exp| ((|#2| |#2|) 61))
 (|csch| ((|#2| |#2|) 79)) (|csc| ((|#2| |#2|) 67)) (|coth| ((|#2| |#2|) 77))
 (|cot| ((|#2| |#2|) 65)) (|cosh| ((|#2| |#2|) 75)) (|cos| ((|#2| |#2|) 63))
 (|belong?| (((|Boolean|) (|BasicOperator|)) 92)) (|atanh| ((|#2| |#2|) 82))
 (|atan| ((|#2| |#2|) 70)) (|asinh| ((|#2| |#2|) 80)) (|asin| ((|#2| |#2|) 68))
 (|asech| ((|#2| |#2|) 84)) (|asec| ((|#2| |#2|) 72))
 (|acsch| ((|#2| |#2|) 85)) (|acsc| ((|#2| |#2|) 73))
 (|acoth| ((|#2| |#2|) 83)) (|acot| ((|#2| |#2|) 71))
 (|acosh| ((|#2| |#2|) 81)) (|acos| ((|#2| |#2|) 69)))
EF
((|constructor| (NIL "Provides elementary functions over an integral domain."))
 (|localReal?|
  (((|Boolean|) |#2|) "\\spad{localReal?(x)} should be local but conditional"))
 (|specialTrigs|
  (((|Union| |#2| "failed") |#2|
    (|List| (|Record| (|:| |func| |#2|) (|:| |pole| (|Boolean|)))))
   "\\spad{specialTrigs(x,{} l)} should be local but conditional"))
 (|iiacsch| ((|#2| |#2|) "\\spad{iiacsch(x)} should be local but conditional"))
 (|iiasech| ((|#2| |#2|) "\\spad{iiasech(x)} should be local but conditional"))
 (|iiacoth| ((|#2| |#2|) "\\spad{iiacoth(x)} should be local but conditional"))
 (|iiatanh| ((|#2| |#2|) "\\spad{iiatanh(x)} should be local but conditional"))
 (|iiacosh| ((|#2| |#2|) "\\spad{iiacosh(x)} should be local but conditional"))
 (|iiasinh| ((|#2| |#2|) "\\spad{iiasinh(x)} should be local but conditional"))
 (|iicsch| ((|#2| |#2|) "\\spad{iicsch(x)} should be local but conditional"))
 (|iisech| ((|#2| |#2|) "\\spad{iisech(x)} should be local but conditional"))
 (|iicoth| ((|#2| |#2|) "\\spad{iicoth(x)} should be local but conditional"))
 (|iitanh| ((|#2| |#2|) "\\spad{iitanh(x)} should be local but conditional"))
 (|iicosh| ((|#2| |#2|) "\\spad{iicosh(x)} should be local but conditional"))
 (|iisinh| ((|#2| |#2|) "\\spad{iisinh(x)} should be local but conditional"))
 (|iiacsc| ((|#2| |#2|) "\\spad{iiacsc(x)} should be local but conditional"))
 (|iiasec| ((|#2| |#2|) "\\spad{iiasec(x)} should be local but conditional"))
 (|iiacot| ((|#2| |#2|) "\\spad{iiacot(x)} should be local but conditional"))
 (|iiatan| ((|#2| |#2|) "\\spad{iiatan(x)} should be local but conditional"))
 (|iiacos| ((|#2| |#2|) "\\spad{iiacos(x)} should be local but conditional"))
 (|iiasin| ((|#2| |#2|) "\\spad{iiasin(x)} should be local but conditional"))
 (|iicsc| ((|#2| |#2|) "\\spad{iicsc(x)} should be local but conditional"))
 (|iisec| ((|#2| |#2|) "\\spad{iisec(x)} should be local but conditional"))
 (|iicot| ((|#2| |#2|) "\\spad{iicot(x)} should be local but conditional"))
 (|iitan| ((|#2| |#2|) "\\spad{iitan(x)} should be local but conditional"))
 (|iicos| ((|#2| |#2|) "\\spad{iicos(x)} should be local but conditional"))
 (|iisin| ((|#2| |#2|) "\\spad{iisin(x)} should be local but conditional"))
 (|iilog| ((|#2| |#2|) "\\spad{iilog(x)} should be local but conditional"))
 (|iiexp| ((|#2| |#2|) "\\spad{iiexp(x)} should be local but conditional"))
 (|iisqrt3| ((|#2|) "\\spad{iisqrt3()} should be local but conditional"))
 (|iisqrt2| ((|#2|) "\\spad{iisqrt2()} should be local but conditional"))
 (|operator|
  (((|BasicOperator|) (|BasicOperator|))
   "\\spad{operator(p)} returns an elementary operator with the same symbol as \\spad{p}"))
 (|belong?|
  (((|Boolean|) (|BasicOperator|))
   "\\spad{belong?(p)} returns \\spad{true} if operator \\spad{p} is elementary"))
 (|pi| ((|#2|) "\\spad{\\spad{pi}()} returns the \\spad{pi} operator"))
 (|acsch|
  ((|#2| |#2|)
   "\\spad{acsch(x)} applies the inverse hyperbolic cosecant operator to \\spad{x}"))
 (|asech|
  ((|#2| |#2|)
   "\\spad{asech(x)} applies the inverse hyperbolic secant operator to \\spad{x}"))
 (|acoth|
  ((|#2| |#2|)
   "\\spad{acoth(x)} applies the inverse hyperbolic cotangent operator to \\spad{x}"))
 (|atanh|
  ((|#2| |#2|)
   "\\spad{atanh(x)} applies the inverse hyperbolic tangent operator to \\spad{x}"))
 (|acosh|
  ((|#2| |#2|)
   "\\spad{acosh(x)} applies the inverse hyperbolic cosine operator to \\spad{x}"))
 (|asinh|
  ((|#2| |#2|)
   "\\spad{asinh(x)} applies the inverse hyperbolic sine operator to \\spad{x}"))
 (|csch|
  ((|#2| |#2|)
   "\\spad{csch(x)} applies the hyperbolic cosecant operator to \\spad{x}"))
 (|sech|
  ((|#2| |#2|)
   "\\spad{sech(x)} applies the hyperbolic secant operator to \\spad{x}"))
 (|coth|
  ((|#2| |#2|)
   "\\spad{coth(x)} applies the hyperbolic cotangent operator to \\spad{x}"))
 (|tanh|
  ((|#2| |#2|)
   "\\spad{tanh(x)} applies the hyperbolic tangent operator to \\spad{x}"))
 (|cosh|
  ((|#2| |#2|)
   "\\spad{cosh(x)} applies the hyperbolic cosine operator to \\spad{x}"))
 (|sinh|
  ((|#2| |#2|)
   "\\spad{sinh(x)} applies the hyperbolic sine operator to \\spad{x}"))
 (|acsc|
  ((|#2| |#2|)
   "\\spad{acsc(x)} applies the inverse cosecant operator to \\spad{x}"))
 (|asec|
  ((|#2| |#2|)
   "\\spad{asec(x)} applies the inverse secant operator to \\spad{x}"))
 (|acot|
  ((|#2| |#2|)
   "\\spad{acot(x)} applies the inverse cotangent operator to \\spad{x}"))
 (|atan|
  ((|#2| |#2|)
   "\\spad{atan(x)} applies the inverse tangent operator to \\spad{x}"))
 (|acos|
  ((|#2| |#2|)
   "\\spad{acos(x)} applies the inverse cosine operator to \\spad{x}"))
 (|asin|
  ((|#2| |#2|)
   "\\spad{asin(x)} applies the inverse sine operator to \\spad{x}"))
 (|csc|
  ((|#2| |#2|) "\\spad{csc(x)} applies the cosecant operator to \\spad{x}"))
 (|sec|
  ((|#2| |#2|) "\\spad{sec(x)} applies the secant operator to \\spad{x}"))
 (|cot|
  ((|#2| |#2|) "\\spad{cot(x)} applies the cotangent operator to \\spad{x}"))
 (|tan|
  ((|#2| |#2|) "\\spad{tan(x)} applies the tangent operator to \\spad{x}"))
 (|cos|
  ((|#2| |#2|) "\\spad{cos(x)} applies the cosine operator to \\spad{x}"))
 (|sin| ((|#2| |#2|) "\\spad{sin(x)} applies the sine operator to \\spad{x}"))
 (|log|
  ((|#2| |#2|) "\\spad{log(x)} applies the logarithm operator to \\spad{x}"))
 (|exp|
  ((|#2| |#2|) "\\spad{exp(x)} applies the exponential operator to \\spad{x}")))
(("documentation" 0 19368) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 19365) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 17572) ("modemaps" 0 4478) ("sourceFile" 0 4444)
 ("constructorCategory" 0 2366) ("constructorModemap" 0 57)
 ("constructorKind" 0 47) ("constructorForm" 0 20))