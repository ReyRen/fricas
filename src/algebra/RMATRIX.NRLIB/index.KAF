10492               (|RectangularMatrix| |m| |n| R)
|domain|
(((|RectangularMatrix| |#1| |#2| |#3|)
  (|Join|
   (|RectangularMatrixCategory| |#1| |#2| |#3| (|DirectProduct| |#2| |#3|)
                                (|DirectProduct| |#1| |#3|))
   (|CoercibleTo| (|Matrix| |#3|))
   (CATEGORY |domain|
    (IF (|has| |#3| (|Field|))
        (ATTRIBUTE (|VectorSpace| |#3|))
        |noBranch|)
    (IF (|has| |#3| (|ConvertibleTo| (|InputForm|)))
        (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
        |noBranch|)
    (SIGNATURE |rectangularMatrix| ($ (|Matrix| |#3|)))
    (SIGNATURE |coerce| ((|Matrix| |#3|) $))))
  (|NonNegativeInteger|) (|NonNegativeInteger|)
  (|Join| (|SemiRng|) (|AbelianMonoid|)))
 (T |RectangularMatrix|))
(|Join|
 (|RectangularMatrixCategory| |#1| |#2| |#3| (|DirectProduct| |#2| |#3|)
                              (|DirectProduct| |#1| |#3|))
 (|CoercibleTo| (|Matrix| |#3|))
 (CATEGORY |domain|
  (IF (|has| |#3| (|Field|))
      (ATTRIBUTE (|VectorSpace| |#3|))
      |noBranch|)
  (IF (|has| |#3| (|ConvertibleTo| (|InputForm|)))
      (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
      |noBranch|)
  (SIGNATURE |rectangularMatrix| ($ (|Matrix| |#3|)))
  (SIGNATURE |coerce| ((|Matrix| |#3|) $))))
"/git/fricas/src/algebra/RMATRIX.spad"
((|coerce| (*1 *2 *1)
           (AND (|isDomain| *2 (|Matrix| *5))
                (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
                (|ofType| *3 (|NonNegativeInteger|))
                (|ofType| *4 (|NonNegativeInteger|))
                (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 (|rectangularMatrix| (*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|)))))
((~= (((|Boolean|) $ $) NIL))
 (|zero?| (((|Boolean|) $) NIL (|has| |#3| (|AbelianMonoid|))))
 (|symmetric?| (((|Boolean|) $) NIL))
 (|subtractIfCan|
  (((|Union| $ "failed") $ $) NIL (|has| |#3| (|AbelianGroup|))))
 (|square?| (((|Boolean|) $) NIL))
 (|smaller?| (((|Boolean|) $ $) NIL (|has| |#3| (|Finite|))))
 (|size?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|size| (((|NonNegativeInteger|)) NIL (|has| |#3| (|Finite|))))
 (|sample| (($) NIL T CONST))
 (|rowEchelon| (($ $) 36 (|has| |#3| (|EuclideanDomain|))))
 (|row| (((|DirectProduct| |#2| |#3|) $ (|Integer|)) 27))
 (|rectangularMatrix| (($ (|Matrix| |#3|)) 34))
 (|rank| (((|NonNegativeInteger|) $) 42 (|has| |#3| (|IntegralDomain|))))
 (|random| (($) NIL (|has| |#3| (|Finite|))))
 (|qelt| ((|#3| $ (|Integer|) (|Integer|)) NIL))
 (|parts| (((|List| |#3|) $) NIL (|has| $ (|finiteAggregate|))))
 (|opposite?| (((|Boolean|) $ $) NIL (|has| |#3| (|AbelianMonoid|))))
 (|nullity| (((|NonNegativeInteger|) $) 44 (|has| |#3| (|IntegralDomain|))))
 (|nullSpace|
  (((|List| (|DirectProduct| |#1| |#3|)) $) 46
   (|has| |#3| (|IntegralDomain|))))
 (|nrows| (((|NonNegativeInteger|) $) NIL))
 (|ncols| (((|NonNegativeInteger|) $) NIL))
 (|more?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|minRowIndex| (((|Integer|) $) NIL)) (|minColIndex| (((|Integer|) $) NIL))
 (|min|
  ((|#3| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#3| (|OrderedSet|)))))
 (|members| (((|List| |#3|) $) NIL (|has| $ (|finiteAggregate|))))
 (|member?|
  (((|Boolean|) |#3| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#3| (|BasicType|)))))
 (|maxRowIndex| (((|Integer|) $) NIL)) (|maxColIndex| (((|Integer|) $) NIL))
 (|max|
  ((|#3| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#3| (|OrderedSet|))))
  ((|#3| (|Mapping| (|Boolean|) |#3| |#3|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|matrix| (($ (|List| (|List| |#3|))) 22))
 (|map!| (($ (|Mapping| |#3| |#3|) $) NIL (|has| $ (|shallowlyMutable|))))
 (|map| (($ (|Mapping| |#3| |#3|) $) NIL)
  (($ (|Mapping| |#3| |#3| |#3|) $ $) NIL))
 (|lookup| (((|PositiveInteger|) $) NIL (|has| |#3| (|Finite|))))
 (|listOfLists| (((|List| (|List| |#3|)) $) NIL))
 (|less?| (((|Boolean|) $ (|NonNegativeInteger|)) NIL))
 (|latex| (((|String|) $) NIL))
 (|index| (($ (|PositiveInteger|)) NIL (|has| |#3| (|Finite|))))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|exquo| (((|Union| $ "failed") $ |#3|) NIL (|has| |#3| (|IntegralDomain|))))
 (|every?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#3|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|eval|
  (($ $ (|List| |#3|) (|List| |#3|)) NIL
   (AND (|has| |#3| (|Evalable| |#3|)) (|has| |#3| (|SetCategory|))))
  (($ $ |#3| |#3|) NIL
   (AND (|has| |#3| (|Evalable| |#3|)) (|has| |#3| (|SetCategory|))))
  (($ $ (|Equation| |#3|)) NIL
   (AND (|has| |#3| (|Evalable| |#3|)) (|has| |#3| (|SetCategory|))))
  (($ $ (|List| (|Equation| |#3|))) NIL
   (AND (|has| |#3| (|Evalable| |#3|)) (|has| |#3| (|SetCategory|)))))
 (|eq?| (((|Boolean|) $ $) NIL))
 (|enumerate| (((|List| $)) NIL (|has| |#3| (|Finite|))))
 (|empty?| (((|Boolean|) $) NIL)) (|empty| (($) NIL))
 (|elt| ((|#3| $ (|Integer|) (|Integer|)) NIL)
  ((|#3| $ (|Integer|) (|Integer|) |#3|) NIL))
 (|dimension| (((|CardinalNumber|)) 49 (|has| |#3| (|Field|))))
 (|diagonal?| (((|Boolean|) $) NIL))
 (|count|
  (((|NonNegativeInteger|) |#3| $) NIL
   (AND (|has| $ (|finiteAggregate|)) (|has| |#3| (|BasicType|))))
  (((|NonNegativeInteger|) (|Mapping| (|Boolean|) |#3|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|copy| (($ $) NIL))
 (|convert|
  (((|InputForm|) $) 56 (|has| |#3| (|ConvertibleTo| (|InputForm|)))))
 (|columnSpace|
  (((|List| (|DirectProduct| |#1| |#3|)) $) 40
   (|has| |#3| (|EuclideanDomain|))))
 (|column| (((|DirectProduct| |#1| |#3|) $ (|Integer|)) 31))
 (|coerce| (((|OutputForm|) $) 14) (((|Matrix| |#3|) $) 33))
 (|any?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#3|) $) NIL
   (|has| $ (|finiteAggregate|))))
 (|antisymmetric?| (((|Boolean|) $) NIL))
 (|Zero| (($) 11 (|has| |#3| (|AbelianMonoid|)) CONST))
 (= (((|Boolean|) $ $) NIL)) (/ (($ $ |#3|) NIL (|has| |#3| (|Field|))))
 (- (($ $) NIL (|has| |#3| (|AbelianGroup|)))
    (($ $ $) NIL (|has| |#3| (|AbelianGroup|))))
 (+ (($ $ $) NIL))
 (* (($ (|PositiveInteger|) $) NIL) (($ |#3| $) NIL) (($ $ |#3|) NIL)
    (($ (|NonNegativeInteger|) $) NIL (|has| |#3| (|AbelianMonoid|)))
    (($ (|Integer|) $) NIL (|has| |#3| (|AbelianGroup|))))
 (|#| (((|NonNegativeInteger|) $) NIL (|has| $ (|finiteAggregate|)))))
((|HasCategory| |#3| '(|AbelianGroup|)) (|HasCategory| |#3| '(|Finite|))
 (|HasCategory| |#3| '(|Field|))
 (OR (|HasCategory| |#3| '(|CommutativeRing|)) (|HasCategory| |#3| '(|Field|)))
 (AND (|HasCategory| |#3| (LIST '|Evalable| (|devaluate| |#3|)))
      (|HasCategory| |#3| '(|SetCategory|)))
 (OR
  (AND (|HasCategory| |#3| (LIST '|Evalable| (|devaluate| |#3|)))
       (|HasCategory| |#3| '(|CommutativeRing|)))
  (AND (|HasCategory| |#3| (LIST '|Evalable| (|devaluate| |#3|)))
       (|HasCategory| |#3| '(|Field|)))
  (AND (|HasCategory| |#3| (LIST '|Evalable| (|devaluate| |#3|)))
       (|HasCategory| |#3| '(|Finite|)))
  (AND (|HasCategory| |#3| (LIST '|Evalable| (|devaluate| |#3|)))
       (|HasCategory| |#3| '(|SetCategory|))))
 (|HasCategory| |#3| '(|BasicType|)) (|HasCategory| |#3| '(|OrderedSet|))
 (|HasCategory| |#3| '(|EuclideanDomain|))
 (|HasCategory| |#3| '(|IntegralDomain|))
 (|HasCategory| |#3| '(|AbelianMonoid|))
 (OR (|HasCategory| |#3| '(|AbelianGroup|))
     (|HasCategory| |#3| '(|AbelianMonoid|)))
 (|HasCategory| |#3| (LIST '|ConvertibleTo| '(|InputForm|)))
 (OR (|HasCategory| |#3| (LIST '|ConvertibleTo| '(|InputForm|)))
     (AND (|HasCategory| |#3| (LIST '|Evalable| (|devaluate| |#3|)))
          (|HasCategory| |#3| '(|Finite|)))
     (AND (|HasCategory| |#3| '(|AbelianGroup|))
          (|HasCategory| |#3| '(|Finite|)))
     (AND (|HasCategory| |#3| '(|AbelianMonoid|))
          (|HasCategory| |#3| '(|Finite|)))
     (AND (|HasCategory| |#3| '(|CommutativeRing|))
          (|HasCategory| |#3| '(|Finite|)))
     (AND (|HasCategory| |#3| '(|Field|)) (|HasCategory| |#3| '(|Finite|))))
 (|HasCategory| $ '(|shallowlyMutable|)) (|HasCategory| $ '(|finiteAggregate|))
 (AND (|HasCategory| |#3| '(|BasicType|))
      (|HasCategory| $ '(|finiteAggregate|)))
 (AND (|HasCategory| |#3| '(|OrderedSet|))
      (|HasCategory| $ '(|finiteAggregate|))))
RMATRIX
(((|RectangularMatrixCategory| |#1| |#2| |#3| (|DirectProduct| |#2| |#3|)
                               (|DirectProduct| |#1| |#3|))
  . T)
 ((|CoercibleTo| (|Matrix| |#3|)) . T)
 ((|VectorSpace| |#3|) |has| |#3| (|Field|))
 ((|ConvertibleTo| (|InputForm|)) |has| |#3| (|ConvertibleTo| (|InputForm|))))
(((|AbelianGroup|) |has| |t#1| (|AbelianGroup|))
 ((|AbelianMonoid|) OR (|has| |t#1| (|AbelianMonoid|))
  (AND (|has| |t#1| (|AbelianGroup|)) (|has| |t#3| (|CommutativeRing|)))
  (AND (|has| |#3| (|Field|)) (|has| |t#1| (|AbelianGroup|))))
 ((|AbelianSemiGroup|) . T) ((|Aggregate|) . T) ((|BasicType|) . T)
 ((|BiModule| |t#1| |t#1|) OR (|has| |t#3| (|CommutativeRing|))
  (|has| |#3| (|Field|)))
 ((|BiModule| |t#3| |t#3|) . T)
 ((|CancellationAbelianMonoid|) |has| |t#1| (|AbelianGroup|))
 ((|CoercibleTo| (|Matrix| |#3|)) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|Comparable|) |has| |t#3| (|Finite|))
 ((|ConvertibleTo| (|InputForm|)) OR (|has| |t#3| (|Finite|))
  (|has| |#3| (|ConvertibleTo| (|InputForm|))))
 ((|Evalable| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|Finite|) |has| |t#3| (|Finite|)) ((|HomogeneousAggregate| |t#3|) . T)
 ((|InnerEvalable| |t#1| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|LeftModule| |t#1|) . T) ((|Module| |t#1|) |has| |#3| (|Field|))
 ((|Module| |t#3|) |has| |t#3| (|CommutativeRing|))
 ((|RectangularMatrixCategory| |#1| |#2| |#3| (|DirectProduct| |#2| |#3|)
                               (|DirectProduct| |#1| |#3|))
  . T)
 ((|RightModule| |t#2|) . T) ((|SetCategory|) . T) ((|Type|) . T)
 ((|VectorSpace| |#3|) |has| |#3| (|Field|)) ((|finiteAggregate|) . T))
((|constructor|
  (NIL
   "\\spadtype{RectangularMatrix} is a matrix domain where the number of rows and the number of columns are parameters of the domain."))
 (|coerce|
  (((|Matrix| |#3|) $)
   "\\spad{coerce(m)} converts a matrix of type \\spadtype{RectangularMatrix} to a matrix of type \\spad{Matrix}."))
 (|rectangularMatrix|
  (($ (|Matrix| |#3|))
   "\\spad{rectangularMatrix(m)} converts a matrix of type \\spadtype{Matrix} to a matrix of type \\spad{RectangularMatrix}.")))
(("documentation" 0 10007) ("ancestors" 0 8622) ("parents" 0 8318)
 ("abbreviation" 0 8310) ("predicates" 0 6420) ("superDomain" 0 NIL)
 ("operationAlist" 0 1866) ("modemaps" 0 1275) ("sourceFile" 0 1236)
 ("constructorCategory" 0 739) ("constructorModemap" 0 61)
 ("constructorKind" 0 52) ("constructorForm" 0 20))