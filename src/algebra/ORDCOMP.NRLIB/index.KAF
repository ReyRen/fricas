7469                (|OrderedCompletion| R)
|domain|
(((|OrderedCompletion| |#1|)
  (|Join| (|SetCategory|) (|FullyRetractableTo| |#1|)
          (CATEGORY |domain| (SIGNATURE |plusInfinity| ($))
           (SIGNATURE |minusInfinity| ($))
           (SIGNATURE |finite?| ((|Boolean|) $))
           (SIGNATURE |infinite?| ((|Boolean|) $))
           (SIGNATURE |whatInfinity| ((|SingleInteger|) $))
           (IF (|has| |#1| (|AbelianMonoid|))
               (SIGNATURE + ($ $ $))
               |noBranch|)
           (IF (|has| |#1| (|AbelianGroup|))
               (SIGNATURE - ($ $))
               |noBranch|)
           (IF (|has| |#1| (|OrderedSet|))
               (ATTRIBUTE (|OrderedSet|))
               |noBranch|)
           (IF (|has| |#1| (|IntegerNumberSystem|))
               (PROGN
                (SIGNATURE |rational?| ((|Boolean|) $))
                (SIGNATURE |rational| ((|Fraction| (|Integer|)) $))
                (SIGNATURE |rationalIfCan|
                 ((|Union| (|Fraction| (|Integer|)) "failed") $)))
               |noBranch|)))
  (|SetCategory|))
 (T |OrderedCompletion|))
(|Join| (|SetCategory|) (|FullyRetractableTo| |#1|)
        (CATEGORY |domain| (SIGNATURE |plusInfinity| ($))
         (SIGNATURE |minusInfinity| ($)) (SIGNATURE |finite?| ((|Boolean|) $))
         (SIGNATURE |infinite?| ((|Boolean|) $))
         (SIGNATURE |whatInfinity| ((|SingleInteger|) $))
         (IF (|has| |#1| (|AbelianMonoid|))
             (SIGNATURE + ($ $ $))
             |noBranch|)
         (IF (|has| |#1| (|AbelianGroup|))
             (SIGNATURE - ($ $))
             |noBranch|)
         (IF (|has| |#1| (|OrderedSet|))
             (ATTRIBUTE (|OrderedSet|))
             |noBranch|)
         (IF (|has| |#1| (|IntegerNumberSystem|))
             (PROGN
              (SIGNATURE |rational?| ((|Boolean|) $))
              (SIGNATURE |rational| ((|Fraction| (|Integer|)) $))
              (SIGNATURE |rationalIfCan|
               ((|Union| (|Fraction| (|Integer|)) "failed") $)))
             |noBranch|)))
"/git/fricas/src/algebra/ORDCOMP.spad"
((|plusInfinity| (*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (|minusInfinity| (*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (|finite?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 (|infinite?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 (|whatInfinity| (*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 (+ (*1 *1 *1 *1)
    (AND (|isDomain| *1 (|OrderedCompletion| *2))
         (|ofCategory| *2 (|AbelianMonoid|))
         (|ofCategory| *2 (|SetCategory|))))
 (- (*1 *1 *1)
    (AND (|isDomain| *1 (|OrderedCompletion| *2))
         (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|SetCategory|))))
 (|rational?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 (|rational| (*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 (|rationalIfCan| (*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OrderedCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|)))))
((~= (((|Boolean|) $ $) NIL)) (|whatInfinity| (((|SingleInteger|) $) 26))
 (|smaller?| (((|Boolean|) $ $) NIL (|has| |#1| (|OrderedSet|))))
 (|retractIfCan|
  (((|Union| (|Integer|) #1="failed") $) NIL
   (|has| |#1| (|RetractableTo| (|Integer|))))
  (((|Union| (|Fraction| (|Integer|)) #1#) $) NIL
   (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))
  (((|Union| |#1| #1#) $) 16))
 (|retract| (((|Integer|) $) NIL (|has| |#1| (|RetractableTo| (|Integer|))))
            (((|Fraction| (|Integer|)) $) NIL
             (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))
            ((|#1| $) 9))
 (|rationalIfCan|
  (((|Union| (|Fraction| (|Integer|)) "failed") $) 41
   (|has| |#1| (|IntegerNumberSystem|))))
 (|rational?| (((|Boolean|) $) 36 (|has| |#1| (|IntegerNumberSystem|))))
 (|rational|
  (((|Fraction| (|Integer|)) $) 39 (|has| |#1| (|IntegerNumberSystem|))))
 (|plusInfinity| (($) 13)) (|minusInfinity| (($) 14))
 (|min| (($ $ $) NIL (|has| |#1| (|OrderedSet|))))
 (|max| (($ $ $) NIL (|has| |#1| (|OrderedSet|))))
 (|latex| (((|String|) $) NIL)) (|infinite?| (((|Boolean|) $) 12))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|finite?| (((|Boolean|) $) 11))
 (|coerce| (((|OutputForm|) $) 24)
           (($ (|Integer|)) NIL (|has| |#1| (|RetractableTo| (|Integer|))))
           (($ (|Fraction| (|Integer|))) NIL
            (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))
           (($ |#1|) 8))
 (>= (((|Boolean|) $ $) NIL (|has| |#1| (|OrderedSet|))))
 (> (((|Boolean|) $ $) NIL (|has| |#1| (|OrderedSet|))))
 (= (((|Boolean|) $ $) 29))
 (<= (((|Boolean|) $ $) NIL (|has| |#1| (|OrderedSet|))))
 (< (((|Boolean|) $ $) 35 (|has| |#1| (|OrderedSet|))))
 (- (($ $) 31 (|has| |#1| (|AbelianGroup|))))
 (+ (($ $ $) 33 (|has| |#1| (|AbelianMonoid|)))))
((|HasCategory| |#1| (LIST '|RetractableTo| (LIST '|Fraction| '(|Integer|))))
 (|HasCategory| |#1| (LIST '|RetractableTo| '(|Integer|)))
 (|HasCategory| |#1| '(|OrderedSet|)) (|HasCategory| |#1| '(|AbelianMonoid|))
 (|HasCategory| |#1| '(|AbelianGroup|))
 (|HasCategory| |#1| '(|IntegerNumberSystem|)))
ORDCOMP
(((|SetCategory|) . T) ((|FullyRetractableTo| |#1|) . T)
 ((|OrderedSet|) |has| |#1| (|OrderedSet|)))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|Comparable|) |has| |#1| (|OrderedSet|)) ((|FullyRetractableTo| |#1|) . T)
 ((|OrderedSet|) |has| |#1| (|OrderedSet|))
 ((|PartialOrder|) |has| |#1| (|OrderedSet|))
 ((|RetractableTo| (|Fraction| (|Integer|))) |has| |t#1|
  (|RetractableTo| (|Fraction| (|Integer|))))
 ((|RetractableTo| (|Integer|)) |has| |t#1| (|RetractableTo| (|Integer|)))
 ((|RetractableTo| |t#1|) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "Adjunction of two real infinites quantities to a set. Date Created: 4 Oct 1989"))
 (|rationalIfCan|
  (((|Union| (|Fraction| (|Integer|)) "failed") $)
   "\\spad{rationalIfCan(x)} returns \\spad{x} as a finite rational number if it is one and \"failed\" otherwise."))
 (|rational|
  (((|Fraction| (|Integer|)) $)
   "\\spad{rational(x)} returns \\spad{x} as a finite rational number. Error: if \\spad{x} cannot be so converted."))
 (|rational?|
  (((|Boolean|) $)
   "\\spad{rational?(x)} tests if \\spad{x} is a finite rational number."))
 (|whatInfinity|
  (((|SingleInteger|) $)
   "\\spad{whatInfinity(x)} returns 0 if \\spad{x} is finite,{} 1 if \\spad{x} is +infinity,{} and \\spad{-1} if \\spad{x} is -infinity."))
 (|infinite?|
  (((|Boolean|) $)
   "\\spad{infinite?(x)} tests if \\spad{x} is +infinity or -infinity,{}"))
 (|finite?|
  (((|Boolean|) $) "\\spad{finite?(x)} tests if \\spad{x} is finite."))
 (|minusInfinity| (($) "\\spad{minusInfinity()} returns -infinity."))
 (|plusInfinity| (($) "\\spad{plusInfinity()} returns +infinity.")))
(("documentation" 0 6388) ("ancestors" 0 5930) ("parents" 0 5828)
 ("abbreviation" 0 5820) ("predicates" 0 5517) ("superDomain" 0 NIL)
 ("operationAlist" 0 3682) ("modemaps" 0 2079) ("sourceFile" 0 2040)
 ("constructorCategory" 0 1110) ("constructorModemap" 0 53)
 ("constructorKind" 0 44) ("constructorForm" 0 20))