2116                (MAKEPROP '|NonAssociativeRng| 'NILADIC T)
(|NonAssociativeRng|)
|category|
(((|NonAssociativeRng|) (|Category|)) (T |NonAssociativeRng|))
(|Join| (|NonAssociativeSemiRng|) (|AbelianGroup|)
        (CATEGORY |domain| (SIGNATURE |associator| ($ $ $ $))
         (SIGNATURE |commutator| ($ $ $))))
"/git/fricas/src/algebra/NARNG.spad"
((|associator| (*1 *1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))
 (|commutator| (*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|sample| (($) 6 T CONST))
 (|rightPower| (($ $ (|PositiveInteger|)) 6))
 (|opposite?| (((|Boolean|) $ $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6)) (|latex| (((|String|) $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6)) (|associator| (($ $ $ $) 6))
 (|antiCommutator| (($ $ $) 6)) (^ (($ $ (|PositiveInteger|)) 6))
 (|Zero| (($) 6 T CONST)) (= (((|Boolean|) $ $) 6)) (- (($ $ $) 6) (($ $) 6))
 (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6)))
NARNG
(((|NonAssociativeSemiRng|) . T) ((|AbelianGroup|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CoercibleTo| (|OutputForm|)) . T) ((|Magma|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "NonAssociativeRng is a basic ring-type structure,{} not necessarily commutative or associative,{} and not necessarily with unit. Axioms \\indented{2}{\\spad{x*}(\\spad{y+z}) = x*y + \\spad{x*z}} \\indented{2}{(x+y)\\spad{*z} = \\spad{x*z} + \\spad{y*z}} Common Additional Axioms \\indented{2}{noZeroDivisors\\space{2}ab = 0 \\spad{=>} \\spad{a=0} or \\spad{b=0}}"))
 (|commutator| (($ $ $) "\\spad{commutator(a,{} b)} returns \\spad{a*b-b*a}."))
 (|associator|
  (($ $ $ $)
   "\\spad{associator(a,{} b,{} c)} returns \\spad{(a*b)*c-a*(b*c)}.")))
(("documentation" 0 1542) ("ancestors" 0 1300) ("parents" 0 1243)
 ("abbreviation" 0 1237) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 497) ("modemaps" 0 353) ("sourceFile" 0 316)
 ("constructorCategory" 0 159) ("constructorModemap" 0 96)
 ("constructorKind" 0 85) ("constructorForm" 0 63) ("NILADIC" 0 20))