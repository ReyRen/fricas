40069               (|PolynomialSetUtilitiesPackage| R E V P)
|package|
(((|PolynomialSetUtilitiesPackage| |#1| |#2| |#3| |#4|)
  (CATEGORY |package|
   (SIGNATURE |removeRedundantFactors| ((|List| |#4|) (|List| |#4|)))
   (SIGNATURE |removeRedundantFactors| ((|List| |#4|) |#4| |#4|))
   (SIGNATURE |removeSquaresIfCan| ((|List| |#4|) (|List| |#4|)))
   (SIGNATURE |unprotectedRemoveRedundantFactors| ((|List| |#4|) |#4| |#4|))
   (SIGNATURE |removeRedundantFactors| ((|List| |#4|) (|List| |#4|) |#4|))
   (SIGNATURE |removeRedundantFactors|
    ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
   (SIGNATURE |removeRedundantFactors|
    ((|List| |#4|) (|List| |#4|) (|List| |#4|)
     (|Mapping| (|List| |#4|) (|List| |#4|))))
   (SIGNATURE |certainlySubVariety?| ((|Boolean|) (|List| |#4|) (|List| |#4|)))
   (SIGNATURE |possiblyNewVariety?|
    ((|Boolean|) (|List| |#4|) (|List| (|List| |#4|))))
   (SIGNATURE |probablyZeroDim?| ((|Boolean|) (|List| |#4|)))
   (SIGNATURE |selectPolynomials|
    ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
     (|Mapping| (|Boolean|) |#4|) (|List| |#4|)))
   (SIGNATURE |selectOrPolynomials|
    ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
     (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|)))
   (SIGNATURE |selectAndPolynomials|
    ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
     (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|)))
   (SIGNATURE |quasiMonicPolynomials|
    ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
     (|List| |#4|)))
   (SIGNATURE |univariate?| ((|Boolean|) |#4|))
   (SIGNATURE |univariatePolynomials|
    ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
     (|List| |#4|)))
   (SIGNATURE |linear?| ((|Boolean|) |#4|))
   (SIGNATURE |linearPolynomials|
    ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
     (|List| |#4|)))
   (SIGNATURE |bivariate?| ((|Boolean|) |#4|))
   (SIGNATURE |bivariatePolynomials|
    ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
     (|List| |#4|)))
   (SIGNATURE |removeRoughlyRedundantFactorsInPols|
    ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
   (SIGNATURE |removeRoughlyRedundantFactorsInPols|
    ((|List| |#4|) (|List| |#4|) (|List| |#4|) (|Boolean|)))
   (SIGNATURE |removeRoughlyRedundantFactorsInPol| (|#4| |#4| (|List| |#4|)))
   (SIGNATURE |interReduce| ((|List| |#4|) (|List| |#4|)))
   (SIGNATURE |roughBasicSet|
    ((|Union|
      (|Record| (|:| |bas| (|GeneralTriangularSet| |#1| |#2| |#3| |#4|))
                (|:| |top| (|List| |#4|)))
      "failed")
     (|List| |#4|)))
   (SIGNATURE |crushedSet| ((|List| |#4|) (|List| |#4|)))
   (SIGNATURE |rewriteSetByReducingWithParticularGenerators|
    ((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4|)
     (|Mapping| (|Boolean|) |#4| |#4|) (|Mapping| |#4| |#4| |#4|)))
   (SIGNATURE |rewriteIdealWithQuasiMonicGenerators|
    ((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4| |#4|)
     (|Mapping| |#4| |#4| |#4|)))
   (IF (|has| |#1| (|GcdDomain|))
       (PROGN
        (SIGNATURE |squareFreeFactors| ((|List| |#4|) |#4|))
        (SIGNATURE |univariatePolynomialsGcds| ((|List| |#4|) (|List| |#4|)))
        (SIGNATURE |univariatePolynomialsGcds|
         ((|List| |#4|) (|List| |#4|) (|Boolean|)))
        (SIGNATURE |removeRoughlyRedundantFactorsInContents|
         ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
        (SIGNATURE |removeRedundantFactorsInContents|
         ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
        (SIGNATURE |removeRedundantFactorsInPols|
         ((|List| |#4|) (|List| |#4|) (|List| |#4|))))
       |noBranch|)
   (IF (|has| |#1| (|PolynomialFactorizationExplicit|))
       (IF (|has| |#1| (|CharacteristicZero|))
           (PROGN
            (SIGNATURE |irreducibleFactors| ((|List| |#4|) (|List| |#4|)))
            (SIGNATURE |lazyIrreducibleFactors| ((|List| |#4|) (|List| |#4|)))
            (SIGNATURE |removeIrreducibleRedundantFactors|
             ((|List| |#4|) (|List| |#4|) (|List| |#4|))))
           |noBranch|)
       |noBranch|))
  (|IntegralDomain|) (|OrderedAbelianMonoidSup|) (|OrderedSet|)
  (|RecursivePolynomialCategory| |#1| |#2| |#3|))
 (T |PolynomialSetUtilitiesPackage|))
(CATEGORY |package|
 (SIGNATURE |removeRedundantFactors| ((|List| |#4|) (|List| |#4|)))
 (SIGNATURE |removeRedundantFactors| ((|List| |#4|) |#4| |#4|))
 (SIGNATURE |removeSquaresIfCan| ((|List| |#4|) (|List| |#4|)))
 (SIGNATURE |unprotectedRemoveRedundantFactors| ((|List| |#4|) |#4| |#4|))
 (SIGNATURE |removeRedundantFactors| ((|List| |#4|) (|List| |#4|) |#4|))
 (SIGNATURE |removeRedundantFactors|
  ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
 (SIGNATURE |removeRedundantFactors|
  ((|List| |#4|) (|List| |#4|) (|List| |#4|)
   (|Mapping| (|List| |#4|) (|List| |#4|))))
 (SIGNATURE |certainlySubVariety?| ((|Boolean|) (|List| |#4|) (|List| |#4|)))
 (SIGNATURE |possiblyNewVariety?|
  ((|Boolean|) (|List| |#4|) (|List| (|List| |#4|))))
 (SIGNATURE |probablyZeroDim?| ((|Boolean|) (|List| |#4|)))
 (SIGNATURE |selectPolynomials|
  ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
   (|Mapping| (|Boolean|) |#4|) (|List| |#4|)))
 (SIGNATURE |selectOrPolynomials|
  ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
   (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|)))
 (SIGNATURE |selectAndPolynomials|
  ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
   (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|)))
 (SIGNATURE |quasiMonicPolynomials|
  ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
   (|List| |#4|)))
 (SIGNATURE |univariate?| ((|Boolean|) |#4|))
 (SIGNATURE |univariatePolynomials|
  ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
   (|List| |#4|)))
 (SIGNATURE |linear?| ((|Boolean|) |#4|))
 (SIGNATURE |linearPolynomials|
  ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
   (|List| |#4|)))
 (SIGNATURE |bivariate?| ((|Boolean|) |#4|))
 (SIGNATURE |bivariatePolynomials|
  ((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
   (|List| |#4|)))
 (SIGNATURE |removeRoughlyRedundantFactorsInPols|
  ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
 (SIGNATURE |removeRoughlyRedundantFactorsInPols|
  ((|List| |#4|) (|List| |#4|) (|List| |#4|) (|Boolean|)))
 (SIGNATURE |removeRoughlyRedundantFactorsInPol| (|#4| |#4| (|List| |#4|)))
 (SIGNATURE |interReduce| ((|List| |#4|) (|List| |#4|)))
 (SIGNATURE |roughBasicSet|
  ((|Union|
    (|Record| (|:| |bas| (|GeneralTriangularSet| |#1| |#2| |#3| |#4|))
              (|:| |top| (|List| |#4|)))
    "failed")
   (|List| |#4|)))
 (SIGNATURE |crushedSet| ((|List| |#4|) (|List| |#4|)))
 (SIGNATURE |rewriteSetByReducingWithParticularGenerators|
  ((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4|)
   (|Mapping| (|Boolean|) |#4| |#4|) (|Mapping| |#4| |#4| |#4|)))
 (SIGNATURE |rewriteIdealWithQuasiMonicGenerators|
  ((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4| |#4|)
   (|Mapping| |#4| |#4| |#4|)))
 (IF (|has| |#1| (|GcdDomain|))
     (PROGN
      (SIGNATURE |squareFreeFactors| ((|List| |#4|) |#4|))
      (SIGNATURE |univariatePolynomialsGcds| ((|List| |#4|) (|List| |#4|)))
      (SIGNATURE |univariatePolynomialsGcds|
       ((|List| |#4|) (|List| |#4|) (|Boolean|)))
      (SIGNATURE |removeRoughlyRedundantFactorsInContents|
       ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
      (SIGNATURE |removeRedundantFactorsInContents|
       ((|List| |#4|) (|List| |#4|) (|List| |#4|)))
      (SIGNATURE |removeRedundantFactorsInPols|
       ((|List| |#4|) (|List| |#4|) (|List| |#4|))))
     |noBranch|)
 (IF (|has| |#1| (|PolynomialFactorizationExplicit|))
     (IF (|has| |#1| (|CharacteristicZero|))
         (PROGN
          (SIGNATURE |irreducibleFactors| ((|List| |#4|) (|List| |#4|)))
          (SIGNATURE |lazyIrreducibleFactors| ((|List| |#4|) (|List| |#4|)))
          (SIGNATURE |removeIrreducibleRedundantFactors|
           ((|List| |#4|) (|List| |#4|) (|List| |#4|))))
         |noBranch|)
     |noBranch|))
"/git/fricas/src/algebra/PSETPK.spad"
((|removeIrreducibleRedundantFactors| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|lazyIrreducibleFactors| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|irreducibleFactors| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|removeRedundantFactorsInPols| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|removeRedundantFactorsInContents| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|removeRoughlyRedundantFactorsInContents| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|univariatePolynomialsGcds| (*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|univariatePolynomialsGcds| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|squareFreeFactors| (*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 (|rewriteIdealWithQuasiMonicGenerators| (*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *8))
       (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
       (|isDomain| *4 (|Mapping| *8 *8 *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))
 (|rewriteSetByReducingWithParticularGenerators| (*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|Mapping| (|Boolean|) *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *6 *7 *8 *9))))
 (|crushedSet| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|roughBasicSet| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |bas| (|GeneralTriangularSet| *4 *5 *6 *7))
                         (|:| |top| (|List| *7))))
   (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|interReduce| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|removeRoughlyRedundantFactorsInPol| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *2))))
 (|removeRoughlyRedundantFactorsInPols| (*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|removeRoughlyRedundantFactorsInPols| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|bivariatePolynomials| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|bivariate?| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 (|linearPolynomials| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|linear?| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 (|univariatePolynomials| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|univariate?| (*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 (|quasiMonicPolynomials| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|selectAndPolynomials| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))
 (|selectOrPolynomials| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))
 (|selectPolynomials| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))
 (|probablyZeroDim?| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|possiblyNewVariety?| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))
 (|certainlySubVariety?| (*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|removeRedundantFactors| (*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *7) (|List| *7)))
       (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))
 (|removeRedundantFactors| (*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|removeRedundantFactors| (*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))))
 (|unprotectedRemoveRedundantFactors| (*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 (|removeSquaresIfCan| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 (|removeRedundantFactors| (*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 (|removeRedundantFactors| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6)))))
((|unprotectedRemoveRedundantFactors| (((|List| |#4|) |#4| |#4|) 118))
 (|univariatePolynomialsGcds|
  (((|List| |#4|) (|List| |#4|) (|Boolean|)) 106 (|has| |#1| (|GcdDomain|)))
  (((|List| |#4|) (|List| |#4|)) 107 (|has| |#1| (|GcdDomain|))))
 (|univariatePolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   34))
 (|univariate?| (((|Boolean|) |#4|) 33))
 (|squareFreeFactors| (((|List| |#4|) |#4|) 103 (|has| |#1| (|GcdDomain|))))
 (|selectPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|Mapping| (|Boolean|) |#4|) (|List| |#4|))
   19))
 (|selectOrPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|))
   21))
 (|selectAndPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|))
   22))
 (|roughBasicSet|
  (((|Union|
     (|Record| (|:| |bas| (|GeneralTriangularSet| |#1| |#2| |#3| |#4|))
               (|:| |top| (|List| |#4|)))
     "failed")
    (|List| |#4|))
   74))
 (|rewriteSetByReducingWithParticularGenerators|
  (((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4|)
    (|Mapping| (|Boolean|) |#4| |#4|) (|Mapping| |#4| |#4| |#4|))
   86))
 (|rewriteIdealWithQuasiMonicGenerators|
  (((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4| |#4|)
    (|Mapping| |#4| |#4| |#4|))
   110))
 (|removeSquaresIfCan| (((|List| |#4|) (|List| |#4|)) 109))
 (|removeRoughlyRedundantFactorsInPols|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|) (|Boolean|)) 48)
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)) 50))
 (|removeRoughlyRedundantFactorsInPol| ((|#4| |#4| (|List| |#4|)) 49))
 (|removeRoughlyRedundantFactorsInContents|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)) 114 (|has| |#1| (|GcdDomain|))))
 (|removeRedundantFactorsInPols|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)) 117 (|has| |#1| (|GcdDomain|))))
 (|removeRedundantFactorsInContents|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)) 116 (|has| |#1| (|GcdDomain|))))
 (|removeRedundantFactors|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)
    (|Mapping| (|List| |#4|) (|List| |#4|)))
   88)
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)) 90)
  (((|List| |#4|) (|List| |#4|) |#4|) 121) (((|List| |#4|) |#4| |#4|) 119)
  (((|List| |#4|) (|List| |#4|)) 89))
 (|removeIrreducibleRedundantFactors|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)) 100
   (AND (|has| |#1| (|CharacteristicZero|))
        (|has| |#1| (|PolynomialFactorizationExplicit|)))))
 (|quasiMonicPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   41))
 (|probablyZeroDim?| (((|Boolean|) (|List| |#4|)) 63))
 (|possiblyNewVariety?|
  (((|Boolean|) (|List| |#4|) (|List| (|List| |#4|))) 53))
 (|linearPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   28))
 (|linear?| (((|Boolean|) |#4|) 27))
 (|lazyIrreducibleFactors|
  (((|List| |#4|) (|List| |#4|)) 99
   (AND (|has| |#1| (|CharacteristicZero|))
        (|has| |#1| (|PolynomialFactorizationExplicit|)))))
 (|irreducibleFactors|
  (((|List| |#4|) (|List| |#4|)) 98
   (AND (|has| |#1| (|CharacteristicZero|))
        (|has| |#1| (|PolynomialFactorizationExplicit|)))))
 (|interReduce| (((|List| |#4|) (|List| |#4|)) 67))
 (|crushedSet| (((|List| |#4|) (|List| |#4|)) 80))
 (|certainlySubVariety?| (((|Boolean|) (|List| |#4|) (|List| |#4|)) 51))
 (|bivariatePolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   39))
 (|bivariate?| (((|Boolean|) |#4|) 35)))
((AND (|HasCategory| |#1| '(|CharacteristicZero|))
      (|HasCategory| |#1| '(|PolynomialFactorizationExplicit|)))
 (|HasCategory| |#1| '(|GcdDomain|)))
PSETPK
((|constructor|
  (NIL
   "This package provides modest routines for polynomial system solving. The aim of many of the operations of this package is to remove certain factors in some polynomials in order to avoid unnecessary computations in algorithms involving splitting techniques by partial factorization."))
 (|removeIrreducibleRedundantFactors|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|))
   "\\spad{removeIrreducibleRedundantFactors(lp,{} lq)} returns the same as \\spad{irreducibleFactors(concat(lp,{} lq))} assuming that \\spad{irreducibleFactors(lp)} returns \\spad{lp} up to replacing some polynomial \\spad{pj} in \\spad{lp} by some polynomial \\spad{qj} associated to \\spad{pj}."))
 (|lazyIrreducibleFactors|
  (((|List| |#4|) (|List| |#4|))
   "\\spad{lazyIrreducibleFactors(lp)} returns \\spad{lf} such that if \\spad{lp = [p1,{} ...,{} pn]} and \\spad{lf = [f1,{} ...,{} fm]} then \\spad{p1*p2*...*pn=0} means \\spad{f1*f2*...*fm=0},{} and the \\spad{\\spad{fi}} are irreducible over \\spad{R} and are pairwise distinct. The algorithm tries to avoid factorization into irreducible factors as far as possible and makes previously use of \\spad{gcd} techniques over \\spad{R}."))
 (|irreducibleFactors|
  (((|List| |#4|) (|List| |#4|))
   "\\spad{irreducibleFactors(lp)} returns \\spad{lf} such that if \\spad{lp = [p1,{} ...,{} pn]} and \\spad{lf = [f1,{} ...,{} fm]} then \\spad{p1*p2*...*pn=0} means \\spad{f1*f2*...*fm=0},{} and the \\spad{\\spad{fi}} are irreducible over \\spad{R} and are pairwise distinct."))
 (|removeRedundantFactorsInPols|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|))
   "\\spad{removeRedundantFactorsInPols(lp,{} lf)} returns \\spad{newlp} where \\spad{newlp} is obtained from \\spad{lp} by removing in every polynomial \\spad{p} of \\spad{lp} any non trivial factor of any polynomial \\spad{f} in \\spad{lf}. Moreover,{} squares over \\spad{R} are first removed in every polynomial \\spad{lp}."))
 (|removeRedundantFactorsInContents|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|))
   "\\spad{removeRedundantFactorsInContents(lp,{} lf)} returns \\spad{newlp} where \\spad{newlp} is obtained from \\spad{lp} by removing in the content of every polynomial of \\spad{lp} any non trivial factor of any polynomial \\spad{f} in \\spad{lf}. Moreover,{} squares over \\spad{R} are first removed in the content of every polynomial of \\spad{lp}."))
 (|removeRoughlyRedundantFactorsInContents|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|))
   "\\spad{removeRoughlyRedundantFactorsInContents(lp,{} lf)} returns \\spad{newlp}where \\spad{newlp} is obtained from \\spad{lp} by removing in the content of every polynomial of \\spad{lp} any occurence of a polynomial \\spad{f} in \\spad{lf}. Moreover,{} squares over \\spad{R} are first removed in the content of every polynomial of \\spad{lp}."))
 (|univariatePolynomialsGcds|
  (((|List| |#4|) (|List| |#4|) (|Boolean|))
   "\\spad{univariatePolynomialsGcds(lp,{} opt)} returns the same as \\spad{univariatePolynomialsGcds(lp)} if \\spad{opt} is \\spad{false} and if the previous operation does not return any non null and constant polynomial,{} else return \\spad{[1]}.")
  (((|List| |#4|) (|List| |#4|))
   "\\spad{univariatePolynomialsGcds(lp)} returns \\spad{lg} where \\spad{lg} is a list of the gcds of every pair in \\spad{lp} of univariate polynomials in the same main variable."))
 (|squareFreeFactors|
  (((|List| |#4|) |#4|)
   "\\spad{squareFreeFactors(p)} returns the square-free factors of \\spad{p} over \\spad{R}"))
 (|rewriteIdealWithQuasiMonicGenerators|
  (((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4| |#4|)
    (|Mapping| |#4| |#4| |#4|))
   "\\spad{rewriteIdealWithQuasiMonicGenerators(lp,{} redOp?,{} redOp)} returns \\spad{lq} where \\spad{lq} and \\spad{lp} generate the same ideal in \\spad{R^(-1) P} and \\spad{lq} has rank not higher than the one of \\spad{lp}. Moreover,{} \\spad{lq} is computed by reducing \\spad{lp} \\spad{w}.\\spad{r}.\\spad{t}. some basic set of the ideal generated by the quasi-monic polynomials in \\spad{lp}."))
 (|rewriteSetByReducingWithParticularGenerators|
  (((|List| |#4|) (|List| |#4|) (|Mapping| (|Boolean|) |#4|)
    (|Mapping| (|Boolean|) |#4| |#4|) (|Mapping| |#4| |#4| |#4|))
   "\\spad{rewriteSetByReducingWithParticularGenerators(lp,{} pred?,{} redOp?,{} redOp)} returns \\spad{lq} where \\spad{lq} is computed by the following algorithm. Chose a basic set \\spad{w}.\\spad{r}.\\spad{t}. the reduction-test \\spad{redOp?} among the polynomials satisfying property \\spad{pred?},{} if it is empty then leave,{} else reduce the other polynomials by this basic set \\spad{w}.\\spad{r}.\\spad{t}. the reduction-operation \\spad{redOp}. Repeat while another basic set with smaller rank can be computed. See code. If \\spad{pred?} is \\spad{quasiMonic?} the ideal is unchanged."))
 (|crushedSet|
  (((|List| |#4|) (|List| |#4|))
   "\\spad{crushedSet(lp)} returns \\spad{lq} such that \\spad{lp} and and \\spad{lq} generate the same ideal and no rough basic sets reduce (in the sense of Groebner bases) the other polynomials in \\spad{lq}."))
 (|roughBasicSet|
  (((|Union|
     (|Record| (|:| |bas| (|GeneralTriangularSet| |#1| |#2| |#3| |#4|))
               (|:| |top| (|List| |#4|)))
     "failed")
    (|List| |#4|))
   "\\spad{roughBasicSet(lp)} returns the smallest (with Ritt-Wu ordering) triangular set contained in \\spad{lp}."))
 (|interReduce|
  (((|List| |#4|) (|List| |#4|))
   "\\spad{interReduce(lp)} returns \\spad{lq} such that \\spad{lp} and \\spad{lq} generate the same ideal and no polynomial in \\spad{lq} is reducible by the others in the sense of Groebner bases. Since no assumptions are required the result may depend on the ordering the reductions are performed."))
 (|removeRoughlyRedundantFactorsInPol|
  ((|#4| |#4| (|List| |#4|))
   "\\spad{removeRoughlyRedundantFactorsInPol(p,{} lf)} returns the same as removeRoughlyRedundantFactorsInPols([\\spad{p}],{} \\spad{lf},{} \\spad{true})"))
 (|removeRoughlyRedundantFactorsInPols|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|) (|Boolean|))
   "\\spad{removeRoughlyRedundantFactorsInPols(lp,{} lf,{} opt)} returns the same as \\spad{removeRoughlyRedundantFactorsInPols(lp,{} lf)} if \\spad{opt} is \\spad{false} and if the previous operation does not return any non null and constant polynomial,{} else return \\spad{[1]}.")
  (((|List| |#4|) (|List| |#4|) (|List| |#4|))
   "\\spad{removeRoughlyRedundantFactorsInPols(lp,{} lf)} returns \\spad{newlp}where \\spad{newlp} is obtained from \\spad{lp} by removing in every polynomial \\spad{p} of \\spad{lp} any occurrence of a polynomial \\spad{f} in \\spad{lf}. This may involve a lot of exact-quotients computations."))
 (|bivariatePolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   "\\spad{bivariatePolynomials(lp)} returns \\spad{bps,{} nbps} where \\spad{bps} is a list of the bivariate polynomials,{} and \\spad{nbps} are the other ones."))
 (|bivariate?|
  (((|Boolean|) |#4|)
   "\\spad{bivariate?(p)} returns \\spad{true} iff \\spad{p} involves two and only two variables."))
 (|linearPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   "\\spad{linearPolynomials(lp)} returns \\spad{lps,{} nlps} where \\spad{lps} is a list of the linear polynomials in \\spad{lp},{} and \\spad{nlps} are the other ones."))
 (|linear?|
  (((|Boolean|) |#4|)
   "\\spad{linear?(p)} returns \\spad{true} iff \\spad{p} does not lie in the base ring \\spad{R} and has main degree \\spad{1}."))
 (|univariatePolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   "\\spad{univariatePolynomials(lp)} returns \\spad{ups,{} nups} where \\spad{ups} is a list of the univariate polynomials,{} and \\spad{nups} are the other ones."))
 (|univariate?|
  (((|Boolean|) |#4|)
   "\\spad{univariate?(p)} returns \\spad{true} iff \\spad{p} involves one and only one variable."))
 (|quasiMonicPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| |#4|))
   "\\spad{quasiMonicPolynomials(lp)} returns \\spad{qmps,{} nqmps} where \\spad{qmps} is a list of the quasi-monic polynomials in \\spad{lp} and \\spad{nqmps} are the other ones."))
 (|selectAndPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|))
   "\\spad{selectAndPolynomials(lpred?,{} ps)} returns \\spad{gps,{} bps} where \\spad{gps} is a list of the polynomial \\spad{p} in \\spad{ps} such that \\spad{pred?(p)} holds for every \\spad{pred?} in \\spad{lpred?} and \\spad{bps} are the other ones."))
 (|selectOrPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|List| (|Mapping| (|Boolean|) |#4|)) (|List| |#4|))
   "\\spad{selectOrPolynomials(lpred?,{} ps)} returns \\spad{gps,{} bps} where \\spad{gps} is a list of the polynomial \\spad{p} in \\spad{ps} such that \\spad{pred?(p)} holds for some \\spad{pred?} in \\spad{lpred?} and \\spad{bps} are the other ones."))
 (|selectPolynomials|
  (((|Record| (|:| |goodPols| (|List| |#4|)) (|:| |badPols| (|List| |#4|)))
    (|Mapping| (|Boolean|) |#4|) (|List| |#4|))
   "\\spad{selectPolynomials(pred?,{} ps)} returns \\spad{gps,{} bps} where \\spad{gps} is a list of the polynomial \\spad{p} in \\spad{ps} such that \\spad{pred?(p)} holds and \\spad{bps} are the other ones."))
 (|probablyZeroDim?|
  (((|Boolean|) (|List| |#4|))
   "\\spad{probablyZeroDim?(lp)} returns \\spad{true} iff the number of polynomials in \\spad{lp} is not smaller than the number of variables occurring in these polynomials."))
 (|possiblyNewVariety?|
  (((|Boolean|) (|List| |#4|) (|List| (|List| |#4|)))
   "\\spad{possiblyNewVariety?(newlp,{} llp)} returns \\spad{true} iff for every \\spad{lp} in \\spad{llp} certainlySubVariety?(\\spad{newlp},{} \\spad{lp}) does not hold."))
 (|certainlySubVariety?|
  (((|Boolean|) (|List| |#4|) (|List| |#4|))
   "\\spad{certainlySubVariety?(newlp,{} lp)} returns \\spad{true} iff for every \\spad{p} in \\spad{lp} the remainder of \\spad{p} by \\spad{newlp} using the division algorithm of Groebner techniques is zero."))
 (|unprotectedRemoveRedundantFactors|
  (((|List| |#4|) |#4| |#4|)
   "\\spad{unprotectedRemoveRedundantFactors(p,{} q)} returns the same as \\spad{removeRedundantFactors(p,{} q)} but does assume that neither \\spad{p} nor \\spad{q} lie in the base ring \\spad{R} and assumes that \\spad{infRittWu?(p,{} q)} holds. Moreover,{} if \\spad{R} is \\spad{gcd}-domain,{} then \\spad{p} and \\spad{q} are assumed to be square free."))
 (|removeSquaresIfCan|
  (((|List| |#4|) (|List| |#4|))
   "\\spad{removeSquaresIfCan(lp)} returns \\spad{removeDuplicates [squareFreePart(p)\\$P for p in lp]} if \\spad{R} is \\spad{gcd}-domain else returns \\spad{lp}."))
 (|removeRedundantFactors|
  (((|List| |#4|) (|List| |#4|) (|List| |#4|)
    (|Mapping| (|List| |#4|) (|List| |#4|)))
   "\\spad{removeRedundantFactors(lp,{} lq,{} remOp)} returns the same as \\spad{concat(remOp(removeRoughlyRedundantFactorsInPols(lp,{} lq)),{} lq)} assuming that \\spad{remOp(lq)} returns \\spad{lq} up to similarity.")
  (((|List| |#4|) (|List| |#4|) (|List| |#4|))
   "\\spad{removeRedundantFactors(lp,{} lq)} returns the same as \\spad{removeRedundantFactors(concat(lp,{} lq))} assuming that \\spad{removeRedundantFactors(lp)} returns \\spad{lp} up to replacing some polynomial \\spad{pj} in \\spad{lp} by some polynomial \\spad{qj} associated to \\spad{pj}.")
  (((|List| |#4|) (|List| |#4|) |#4|)
   "\\spad{removeRedundantFactors(lp,{} q)} returns the same as \\spad{removeRedundantFactors(cons(q,{} lp))} assuming that \\spad{removeRedundantFactors(lp)} returns \\spad{lp} up to replacing some polynomial \\spad{pj} in \\spad{lp} by some some polynomial \\spad{qj} associated to \\spad{pj}.")
  (((|List| |#4|) |#4| |#4|)
   "\\spad{removeRedundantFactors(p,{} q)} returns the same as \\spad{removeRedundantFactors([p,{} q])}")
  (((|List| |#4|) (|List| |#4|))
   "\\spad{removeRedundantFactors(lp)} returns \\spad{lq} such that if \\spad{lp = [p1,{} ...,{} pn]} and \\spad{lq = [q1,{} ...,{} qm]} then the product \\spad{p1*p2*...*pn} vanishes iff the product \\spad{q1*q2*...*qm} vanishes,{} and the product of degrees of the \\spad{\\spad{qi}} is not greater than the one of the \\spad{pj},{} and no polynomial in \\spad{lq} divides another polynomial in \\spad{lq}. In particular,{} polynomials lying in the base ring \\spad{R} are removed. Moreover,{} \\spad{lq} is sorted \\spad{w}.\\spad{r}.\\spad{t} \\spad{infRittWu?}. Furthermore,{} if \\spad{R} is \\spad{gcd}-domain,{} the polynomials in \\spad{lq} are pairwise without common non trivial factor.")))
(("documentation" 0 27264) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 27257) ("predicates" 0 27103) ("superDomain" 0 NIL)
 ("operationAlist" 0 23382) ("modemaps" 0 8228) ("sourceFile" 0 8190)
 ("constructorCategory" 0 4315) ("constructorModemap" 0 72)
 ("constructorKind" 0 62) ("constructorForm" 0 20))