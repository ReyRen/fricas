13401               (MAKEPROP '|BasicOperator| 'NILADIC T)
(|BasicOperator|)
|domain|
(((|BasicOperator|)
  (|Join| (|OrderedSet|)
          (CATEGORY |domain| (SIGNATURE |name| ((|Symbol|) $))
           (SIGNATURE |properties| ((|AssociationList| (|Symbol|) (|None|)) $))
           (SIGNATURE |copy| ($ $)) (SIGNATURE |operator| ($ (|Symbol|)))
           (SIGNATURE |operator| ($ (|Symbol|) (|NonNegativeInteger|)))
           (SIGNATURE |arity| ((|Union| (|NonNegativeInteger|) "failed") $))
           (SIGNATURE |nullary?| ((|Boolean|) $))
           (SIGNATURE |unary?| ((|Boolean|) $))
           (SIGNATURE |nary?| ((|Boolean|) $))
           (SIGNATURE |weight| ((|NonNegativeInteger|) $))
           (SIGNATURE |weight| ($ $ (|NonNegativeInteger|)))
           (SIGNATURE |equality| ($ $ (|Mapping| (|Boolean|) $ $)))
           (SIGNATURE |comparison| ($ $ (|Mapping| (|Boolean|) $ $)))
           (SIGNATURE |display|
            ((|Union| (|Mapping| (|OutputForm|) (|List| (|OutputForm|)))
                      "failed")
             $))
           (SIGNATURE |display|
            ($ $ (|Mapping| (|OutputForm|) (|List| (|OutputForm|)))))
           (SIGNATURE |display|
            ($ $ (|Mapping| (|OutputForm|) (|OutputForm|))))
           (SIGNATURE |input|
            ($ $ (|Mapping| (|InputForm|) (|List| (|InputForm|)))))
           (SIGNATURE |input|
            ((|Union| (|Mapping| (|InputForm|) (|List| (|InputForm|)))
                      "failed")
             $))
           (SIGNATURE |is?| ((|Boolean|) $ (|Symbol|)))
           (SIGNATURE |has?| ((|Boolean|) $ (|Symbol|)))
           (SIGNATURE |assert| ($ $ (|Symbol|)))
           (SIGNATURE |deleteProperty!| ($ $ (|Symbol|)))
           (SIGNATURE |property| ((|Union| (|None|) "failed") $ (|Symbol|)))
           (SIGNATURE |setProperty| ($ $ (|Symbol|) (|None|)))
           (SIGNATURE |setProperties|
            ($ $ (|AssociationList| (|Symbol|) (|None|)))))))
 (T |BasicOperator|))
(|Join| (|OrderedSet|)
        (CATEGORY |domain| (SIGNATURE |name| ((|Symbol|) $))
         (SIGNATURE |properties| ((|AssociationList| (|Symbol|) (|None|)) $))
         (SIGNATURE |copy| ($ $)) (SIGNATURE |operator| ($ (|Symbol|)))
         (SIGNATURE |operator| ($ (|Symbol|) (|NonNegativeInteger|)))
         (SIGNATURE |arity| ((|Union| (|NonNegativeInteger|) "failed") $))
         (SIGNATURE |nullary?| ((|Boolean|) $))
         (SIGNATURE |unary?| ((|Boolean|) $))
         (SIGNATURE |nary?| ((|Boolean|) $))
         (SIGNATURE |weight| ((|NonNegativeInteger|) $))
         (SIGNATURE |weight| ($ $ (|NonNegativeInteger|)))
         (SIGNATURE |equality| ($ $ (|Mapping| (|Boolean|) $ $)))
         (SIGNATURE |comparison| ($ $ (|Mapping| (|Boolean|) $ $)))
         (SIGNATURE |display|
          ((|Union| (|Mapping| (|OutputForm|) (|List| (|OutputForm|)))
                    "failed")
           $))
         (SIGNATURE |display|
          ($ $ (|Mapping| (|OutputForm|) (|List| (|OutputForm|)))))
         (SIGNATURE |display| ($ $ (|Mapping| (|OutputForm|) (|OutputForm|))))
         (SIGNATURE |input|
          ($ $ (|Mapping| (|InputForm|) (|List| (|InputForm|)))))
         (SIGNATURE |input|
          ((|Union| (|Mapping| (|InputForm|) (|List| (|InputForm|))) "failed")
           $))
         (SIGNATURE |is?| ((|Boolean|) $ (|Symbol|)))
         (SIGNATURE |has?| ((|Boolean|) $ (|Symbol|)))
         (SIGNATURE |assert| ($ $ (|Symbol|)))
         (SIGNATURE |deleteProperty!| ($ $ (|Symbol|)))
         (SIGNATURE |property| ((|Union| (|None|) "failed") $ (|Symbol|)))
         (SIGNATURE |setProperty| ($ $ (|Symbol|) (|None|)))
         (SIGNATURE |setProperties|
          ($ $ (|AssociationList| (|Symbol|) (|None|))))))
"/git/fricas/src/algebra/BOP.spad"
((|name| (*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 (|properties| (*1 *2 *1)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))
 (|copy| (*1 *1 *1) (|isDomain| *1 (|BasicOperator|)))
 (|operator| (*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 (|operator| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 (|arity| (*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|BasicOperator|))))
 (|nullary?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))
 (|unary?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))
 (|nary?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))
 (|weight| (*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 (|weight| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 (|equality| (*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))
 (|comparison| (*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))
 (|display| (*1 *2 *1)
            (|partial| AND
             (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
             (|isDomain| *1 (|BasicOperator|))))
 (|display| (*1 *1 *1 *2)
            (AND
             (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
             (|isDomain| *1 (|BasicOperator|))))
 (|display| (*1 *1 *1 *2)
            (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|OutputForm|)))
                 (|isDomain| *1 (|BasicOperator|))))
 (|input| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
       (|isDomain| *1 (|BasicOperator|))))
 (|input| (*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 (|is?| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))
 (|has?| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))
 (|assert| (*1 *1 *1 *2)
           (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 (|deleteProperty!| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 (|property| (*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|None|))
   (|isDomain| *1 (|BasicOperator|))))
 (|setProperty| (*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|BasicOperator|))))
 (|setProperties| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|)))))
((~= (((|Boolean|) $ $) NIL))
 (|weight| (((|NonNegativeInteger|) $) 74) (($ $ (|NonNegativeInteger|)) 34))
 (|unary?| (((|Boolean|) $) 36)) (|smaller?| (((|Boolean|) $ $) NIL))
 (|setProperty| (($ $ (|Symbol|) (|None|)) 30))
 (|setProperties| (($ $ (|AssociationList| (|Symbol|) (|None|))) 18))
 (|property| (((|Union| (|None|) "failed") $ (|Symbol|)) 28))
 (|properties| (((|AssociationList| (|Symbol|) (|None|)) $) 17))
 (|operator| (($ (|Symbol|)) 20) (($ (|Symbol|) (|NonNegativeInteger|)) 25))
 (|nullary?| (((|Boolean|) $) 35)) (|nary?| (((|Boolean|) $) 37))
 (|name| (((|Symbol|) $) 13)) (|min| (($ $ $) NIL)) (|max| (($ $ $) NIL))
 (|latex| (((|String|) $) NIL)) (|is?| (((|Boolean|) $ (|Symbol|)) 15))
 (|input| (($ $ (|Mapping| (|InputForm|) (|List| (|InputForm|)))) 54)
  (((|Union| (|Mapping| (|InputForm|) (|List| (|InputForm|))) "failed") $) 58))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|has?| (((|Boolean|) $ (|Symbol|)) 33))
 (|equality| (($ $ (|Mapping| (|Boolean|) $ $)) 39))
 (|display|
  (((|Union| (|Mapping| (|OutputForm|) (|List| (|OutputForm|))) "failed") $)
   56)
  (($ $ (|Mapping| (|OutputForm|) (|List| (|OutputForm|)))) 45)
  (($ $ (|Mapping| (|OutputForm|) (|OutputForm|))) 47))
 (|deleteProperty!| (($ $ (|Symbol|)) 49)) (|copy| (($ $) 65))
 (|comparison| (($ $ (|Mapping| (|Boolean|) $ $)) 40))
 (|coerce| (((|OutputForm|) $) 52)) (|assert| (($ $ (|Symbol|)) 31))
 (|arity| (((|Union| (|NonNegativeInteger|) "failed") $) 60))
 (>= (((|Boolean|) $ $) NIL)) (> (((|Boolean|) $ $) NIL))
 (= (((|Boolean|) $ $) 73)) (<= (((|Boolean|) $ $) NIL))
 (< (((|Boolean|) $ $) 79)))
BOP
(((|OrderedSet|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|Comparable|) . T)
 ((|OrderedSet|) . T) ((|PartialOrder|) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "A basic operator is an object that can be applied to a list of arguments from a set,{} the result being a kernel over that set."))
 (|setProperties|
  (($ $ (|AssociationList| (|Symbol|) (|None|)))
   "\\spad{setProperties(op,{} l)} sets the property list of \\spad{op} to \\spad{l}. Argument \\spad{op} is modified \"in place\",{} \\spadignore{i.e.} no copy is made."))
 (|setProperty|
  (($ $ (|Symbol|) (|None|))
   "\\spad{setProperty(op,{} s,{} v)} attaches property \\spad{s} to \\spad{op},{} and sets its value to \\spad{v}. Argument \\spad{op} is modified \"in place\",{} \\spadignore{i.e.} no copy is made."))
 (|property|
  (((|Union| (|None|) "failed") $ (|Symbol|))
   "\\spad{property(op,{} s)} returns the value of property \\spad{s} if it is attached to \\spad{op},{} and \"failed\" otherwise."))
 (|deleteProperty!|
  (($ $ (|Symbol|))
   "\\spad{deleteProperty!(op,{} s)} unattaches property \\spad{s} from \\spad{op}. Argument \\spad{op} is modified \"in place\",{} \\spadignore{i.e.} no copy is made."))
 (|assert|
  (($ $ (|Symbol|))
   "\\spad{assert(op,{} s)} attaches property \\spad{s} to \\spad{op}. Argument \\spad{op} is modified \"in place\",{} \\spadignore{i.e.} no copy is made."))
 (|has?|
  (((|Boolean|) $ (|Symbol|))
   "\\spad{has?(op,{} s)} tests if property \\spad{s} is attached to \\spad{op}."))
 (|is?|
  (((|Boolean|) $ (|Symbol|))
   "\\spad{is?(op,{} s)} tests if the name of \\spad{op} is \\spad{s}."))
 (|input|
  (((|Union| (|Mapping| (|InputForm|) (|List| (|InputForm|))) "failed") $)
   "\\spad{input(op)} returns the \"\\%input\" property of \\spad{op} if it has one attached,{} \"failed\" otherwise.")
  (($ $ (|Mapping| (|InputForm|) (|List| (|InputForm|))))
   "\\spad{input(op,{} foo)} attaches foo as the \"\\%input\" property of \\spad{op}. If \\spad{op} has a \"\\%input\" property \\spad{f},{} then \\spad{op(a1,{}...,{}an)} gets converted to InputForm as \\spad{f(a1,{} ...,{} an)}."))
 (|display|
  (($ $ (|Mapping| (|OutputForm|) (|OutputForm|)))
   "\\spad{display(op,{} foo)} attaches foo as the \"\\%display\" property of \\spad{op}. If \\spad{op} has a \"\\%display\" property \\spad{f},{} then \\spad{op(a)} gets converted to OutputForm as \\spad{f(a)}. Argument \\spad{op} must be unary.")
  (($ $ (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
   "\\spad{display(op,{} foo)} attaches foo as the \"\\%display\" property of \\spad{op}. If \\spad{op} has a \"\\%display\" property \\spad{f},{} then \\spad{op(a1,{}...,{}an)} gets converted to OutputForm as \\spad{f(a1,{} ...,{} an)}.")
  (((|Union| (|Mapping| (|OutputForm|) (|List| (|OutputForm|))) "failed") $)
   "\\spad{display(op)} returns the \"\\%display\" property of \\spad{op} if it has one attached,{} and \"failed\" otherwise."))
 (|comparison|
  (($ $ (|Mapping| (|Boolean|) $ $))
   "\\spad{comparison(op,{} foo?)} attaches foo? as the \"\\%less?\" property to \\spad{op}. If \\spad{op1} and \\spad{op2} have the same name,{} and one of them has a \"\\%less?\" property \\spad{f},{} then \\spad{f(op1,{} op2)} is called to decide whether \\spad{op1 < op2}."))
 (|equality|
  (($ $ (|Mapping| (|Boolean|) $ $))
   "\\spad{equality(op,{} foo?)} attaches foo? as the \"\\%equal?\" property to \\spad{op}. If \\spad{op1} and \\spad{op2} have the same name,{} and one of them has an \"\\%equal?\" property \\spad{f},{} then \\spad{f(op1,{} op2)} is called to decide whether \\spad{op1} and \\spad{op2} should be considered equal."))
 (|weight|
  (($ $ (|NonNegativeInteger|))
   "\\spad{weight(op,{} n)} attaches the weight \\spad{n} to \\spad{op}.")
  (((|NonNegativeInteger|) $)
   "\\spad{weight(op)} returns the weight attached to \\spad{op}."))
 (|nary?|
  (((|Boolean|) $)
   "\\spad{nary?(op)} tests if \\spad{op} has arbitrary arity."))
 (|unary?|
  (((|Boolean|) $) "\\spad{unary?(op)} tests if \\spad{op} is unary."))
 (|nullary?|
  (((|Boolean|) $) "\\spad{nullary?(op)} tests if \\spad{op} is nullary."))
 (|arity|
  (((|Union| (|NonNegativeInteger|) "failed") $)
   "\\spad{arity(op)} returns \\spad{n} if \\spad{op} is \\spad{n}-ary,{} and \"failed\" if \\spad{op} has arbitrary arity."))
 (|operator|
  (($ (|Symbol|) (|NonNegativeInteger|))
   "\\spad{operator(f,{} n)} makes \\spad{f} into an \\spad{n}-ary operator.")
  (($ (|Symbol|))
   "\\spad{operator(f)} makes \\spad{f} into an operator with arbitrary arity."))
 (|copy| (($ $) "\\spad{copy(op)} returns a copy of \\spad{op}."))
 (|properties|
  (((|AssociationList| (|Symbol|) (|None|)) $)
   "\\spad{properties(op)} returns the list of all the properties currently attached to \\spad{op}."))
 (|name| (((|Symbol|) $) "\\spad{name(op)} returns the name of \\spad{op}.")))
(("documentation" 0 8698) ("ancestors" 0 8551) ("parents" 0 8528)
 ("abbreviation" 0 8524) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 6866) ("modemaps" 0 3764) ("sourceFile" 0 3729)
 ("constructorCategory" 0 1979) ("constructorModemap" 0 86)
 ("constructorKind" 0 77) ("constructorForm" 0 59) ("NILADIC" 0 20))