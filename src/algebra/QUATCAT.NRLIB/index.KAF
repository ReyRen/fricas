13552               (|QuaternionCategory| R)
|category|
(((|QuaternionCategory| |#1|) (|Category|) (|CommutativeRing|))
 (T |QuaternionCategory|))
(|Join| (|Algebra| |t#1|) (|FullyRetractableTo| |t#1|)
        (|DifferentialExtension| |t#1|) (|FullyEvalableOver| |t#1|)
        (|FullyLinearlyExplicitOver| |t#1|)
        (CATEGORY |domain| (SIGNATURE |conjugate| ($ $))
         (SIGNATURE |imagI| (|t#1| $)) (SIGNATURE |imagJ| (|t#1| $))
         (SIGNATURE |imagK| (|t#1| $)) (SIGNATURE |norm| (|t#1| $))
         (SIGNATURE |quatern| ($ |t#1| |t#1| |t#1| |t#1|))
         (SIGNATURE |real| (|t#1| $))
         (IF (|has| |t#1| (|EntireRing|))
             (ATTRIBUTE (|EntireRing|))
             |noBranch|)
         (IF (|has| |t#1| (|OrderedSet|))
             (ATTRIBUTE (|OrderedSet|))
             |noBranch|)
         (IF (|has| |t#1| (|Field|))
             (ATTRIBUTE (|DivisionRing|))
             |noBranch|)
         (IF (|has| |t#1| (|ConvertibleTo| (|InputForm|)))
             (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
             |noBranch|)
         (IF (|has| |t#1| (|CharacteristicZero|))
             (ATTRIBUTE (|CharacteristicZero|))
             |noBranch|)
         (IF (|has| |t#1| (|CharacteristicNonZero|))
             (ATTRIBUTE (|CharacteristicNonZero|))
             |noBranch|)
         (IF (|has| |t#1| (|RealNumberSystem|))
             (SIGNATURE |abs| (|t#1| $))
             |noBranch|)
         (IF (|has| |t#1| (|IntegerNumberSystem|))
             (PROGN
              (SIGNATURE |rational?| ((|Boolean|) $))
              (SIGNATURE |rational| ((|Fraction| (|Integer|)) $))
              (SIGNATURE |rationalIfCan|
               ((|Union| (|Fraction| (|Integer|)) "failed") $)))
             |noBranch|)))
"/git/fricas/src/algebra/QUATCAT.spad"
((|conjugate| (*1 *1 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|imagI| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|imagJ| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|imagK| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|norm| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|quatern| (*1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|real| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|abs| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 (|rational?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 (|rational| (*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 (|rationalIfCan| (*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|QuaternionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|))))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6
   (|has| |#1| (|EntireRing|))))
 (|unitCanonical| (($ $) 6 (|has| |#1| (|EntireRing|))))
 (|unit?| (((|Boolean|) $) 6 (|has| |#1| (|EntireRing|))))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6))
 (|smaller?| (((|Boolean|) $ $) 6 (|has| |#1| (|OrderedSet|))))
 (|sample| (($) 6 T CONST)) (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|retractIfCan|
  (((|Union| (|Integer|) #2="failed") $) 6
   (|has| |#1| (|RetractableTo| (|Integer|))))
  (((|Union| (|Fraction| (|Integer|)) #2#) $) 6
   (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))
  (((|Union| |#1| #2#) $) 6))
 (|retract| (((|Integer|) $) 6 (|has| |#1| (|RetractableTo| (|Integer|))))
            (((|Fraction| (|Integer|)) $) 6
             (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))
            ((|#1| $) 6))
 (|reducedSystem|
  (((|Matrix| (|Integer|)) (|Matrix| $)) 6
   (|has| |#1| (|LinearlyExplicitOver| (|Integer|))))
  (((|Record| (|:| |mat| (|Matrix| (|Integer|)))
              (|:| |vec| (|Vector| (|Integer|))))
    (|Matrix| $) (|Vector| $))
   6 (|has| |#1| (|LinearlyExplicitOver| (|Integer|))))
  (((|Record| (|:| |mat| (|Matrix| |#1|)) (|:| |vec| (|Vector| |#1|)))
    (|Matrix| $) (|Vector| $))
   6)
  (((|Matrix| |#1|) (|Matrix| $)) 6))
 (|recip| (((|Union| $ #1#) $) 6)) (|real| ((|#1| $) 6))
 (|rationalIfCan|
  (((|Union| (|Fraction| (|Integer|)) "failed") $) 6
   (|has| |#1| (|IntegerNumberSystem|))))
 (|rational?| (((|Boolean|) $) 6 (|has| |#1| (|IntegerNumberSystem|))))
 (|rational|
  (((|Fraction| (|Integer|)) $) 6 (|has| |#1| (|IntegerNumberSystem|))))
 (|quatern| (($ |#1| |#1| |#1| |#1|) 6)) (|opposite?| (((|Boolean|) $ $) 6))
 (|one?| (((|Boolean|) $) 6)) (|norm| ((|#1| $) 6))
 (|min| (($ $ $) 6 (|has| |#1| (|OrderedSet|))))
 (|max| (($ $ $) 6 (|has| |#1| (|OrderedSet|))))
 (|map| (($ (|Mapping| |#1| |#1|) $) 6)) (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|latex| (((|String|) $) 6)) (|inv| (($ $) 6 (|has| |#1| (|Field|))))
 (|imagK| ((|#1| $) 6)) (|imagJ| ((|#1| $) 6)) (|imagI| ((|#1| $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|exquo| (((|Union| $ "failed") $ $) 6 (|has| |#1| (|EntireRing|))))
 (|eval| (($ $ (|List| |#1|) (|List| |#1|)) 6 (|has| |#1| (|Evalable| |#1|)))
         (($ $ |#1| |#1|) 6 (|has| |#1| (|Evalable| |#1|)))
         (($ $ (|Equation| |#1|)) 6 (|has| |#1| (|Evalable| |#1|)))
         (($ $ (|List| (|Equation| |#1|))) 6 (|has| |#1| (|Evalable| |#1|)))
         (($ $ (|List| (|Symbol|)) (|List| |#1|)) 6
          (|has| |#1| (|InnerEvalable| (|Symbol|) |#1|)))
         (($ $ (|Symbol|) |#1|) 6
          (|has| |#1| (|InnerEvalable| (|Symbol|) |#1|))))
 (|elt| (($ $ |#1|) 6 (|has| |#1| (|Eltable| |#1| |#1|))))
 (|differentiate| (($ $) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|NonNegativeInteger|)) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|Symbol|)) 6 (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Mapping| |#1| |#1|) (|NonNegativeInteger|)) 6)
  (($ $ (|Mapping| |#1| |#1|)) 6))
 (|convert| (((|InputForm|) $) 6 (|has| |#1| (|ConvertibleTo| (|InputForm|)))))
 (|conjugate| (($ $) 6)) (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ (|Integer|)) 6) (($ |#1|) 6)
           (($ (|Fraction| (|Integer|))) 6
            (OR (|has| |#1| (|Field|))
                (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))))
 (|charthRoot|
  (((|Union| $ "failed") $) 6 (|has| |#1| (|CharacteristicNonZero|))))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|associator| (($ $ $ $) 6))
 (|associates?| (((|Boolean|) $ $) 6 (|has| |#1| (|EntireRing|))))
 (|antiCommutator| (($ $ $) 6)) (|annihilate?| (((|Boolean|) $ $) 6))
 (|abs| ((|#1| $) 6 (|has| |#1| (|RealNumberSystem|))))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6)
  (($ $ (|Integer|)) 6 (|has| |#1| (|Field|))))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST))
 (D (($ $) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|NonNegativeInteger|)) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|Symbol|)) 6 (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Mapping| |#1| |#1|) (|NonNegativeInteger|)) 6)
  (($ $ (|Mapping| |#1| |#1|)) 6))
 (>= (((|Boolean|) $ $) 6 (|has| |#1| (|OrderedSet|))))
 (> (((|Boolean|) $ $) 6 (|has| |#1| (|OrderedSet|))))
 (= (((|Boolean|) $ $) 6))
 (<= (((|Boolean|) $ $) 6 (|has| |#1| (|OrderedSet|))))
 (< (((|Boolean|) $ $) 6 (|has| |#1| (|OrderedSet|))))
 (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6) (($ $ |#1|) 6) (($ |#1| $) 6)
    (($ $ (|Fraction| (|Integer|))) 6 (|has| |#1| (|Field|)))
    (($ (|Fraction| (|Integer|)) $) 6 (|has| |#1| (|Field|)))))
QUATCAT
(((|Algebra| |#1|) . T) ((|FullyRetractableTo| |#1|) . T)
 ((|DifferentialExtension| |#1|) . T) ((|FullyEvalableOver| |#1|) . T)
 ((|FullyLinearlyExplicitOver| |#1|) . T)
 ((|EntireRing|) |has| |#1| (|EntireRing|))
 ((|OrderedSet|) |has| |#1| (|OrderedSet|))
 ((|DivisionRing|) |has| |#1| (|Field|))
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|)))
 ((|CharacteristicZero|) |has| |#1| (|CharacteristicZero|))
 ((|CharacteristicNonZero|) |has| |#1| (|CharacteristicNonZero|)))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) |has| |#1| (|Field|))
 ((|Algebra| |#1|) . T) ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CharacteristicNonZero|) |has| |#1| (|CharacteristicNonZero|))
 ((|CharacteristicZero|) |has| |#1| (|CharacteristicZero|))
 ((|CoercibleTo| (|OutputForm|)) . T)
 ((|Comparable|) |has| |#1| (|OrderedSet|))
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|)))
 ((|DifferentialExtension| |#1|) . T)
 ((|DifferentialRing|) |has| |t#1| (|DifferentialRing|))
 ((|DivisionRing|) |has| |#1| (|Field|))
 ((|Eltable| |t#1| $) |has| |t#1| (|Eltable| |t#1| |t#1|))
 ((|EntireRing|) |has| |#1| (|EntireRing|))
 ((|Evalable| |t#1|) |has| |t#1| (|Evalable| |t#1|))
 ((|FullyEvalableOver| |#1|) . T) ((|FullyLinearlyExplicitOver| |#1|) . T)
 ((|FullyRetractableTo| |#1|) . T)
 ((|InnerEvalable| (|Symbol|) |t#1|) |has| |t#1|
  (|InnerEvalable| (|Symbol|) |t#1|))
 ((|InnerEvalable| |t#1| |t#1|) |has| |t#1| (|Evalable| |t#1|))
 ((|LeftModule| |t#1|) . T)
 ((|LinearlyExplicitOver| (|Integer|)) |has| |t#1|
  (|LinearlyExplicitOver| (|Integer|)))
 ((|LinearlyExplicitOver| |t#1|) . T) ((|Magma|) . T) ((|MagmaWithUnit|) . T)
 ((|Module| |t#1|) . T) ((|Monoid|) . T) ((|NonAssociativeRing|) . T)
 ((|NonAssociativeRng|) . T) ((|NonAssociativeSemiRing|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|OrderedSet|) |has| |#1| (|OrderedSet|))
 ((|PartialDifferentialRing| (|Symbol|)) |has| |t#1|
  (|PartialDifferentialRing| (|Symbol|)))
 ((|PartialOrder|) |has| |#1| (|OrderedSet|))
 ((|RetractableTo| (|Fraction| (|Integer|))) |has| |t#1|
  (|RetractableTo| (|Fraction| (|Integer|))))
 ((|RetractableTo| (|Integer|)) |has| |t#1| (|RetractableTo| (|Integer|)))
 ((|RetractableTo| |t#1|) . T) ((|RightModule| |t#2|) . T) ((|Ring|) . T)
 ((|Rng|) . T) ((|SemiGroup|) . T) ((|SemiRing|) . T) ((|SemiRng|) . T)
 ((|SetCategory|) . T) ((|TwoSidedRecip|) |has| |#1| (|Field|))
 ((|noZeroDivisors|) |has| |#1| (|EntireRing|)) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "\\spadtype{QuaternionCategory} describes the category of quaternions and implements functions that are not representation specific."))
 (|rationalIfCan|
  (((|Union| (|Fraction| (|Integer|)) "failed") $)
   "\\spad{rationalIfCan(q)} returns \\spad{q} as a rational number,{} or \"failed\" if this is not possible. Note: if \\spad{rational?(q)} is \\spad{true},{} the conversion can be done and the rational number will be returned."))
 (|rational|
  (((|Fraction| (|Integer|)) $)
   "\\spad{rational(q)} tries to convert \\spad{q} into a rational number. Error: if this is not possible. If \\spad{rational?(q)} is \\spad{true},{} the conversion will be done and the rational number returned."))
 (|rational?|
  (((|Boolean|) $)
   "\\spad{rational?(q)} returns {\\it \\spad{true}} if all the imaginary parts of \\spad{q} are zero and the real part can be converted into a rational number,{} and {\\it \\spad{false}} otherwise."))
 (|abs|
  ((|#1| $)
   "\\spad{abs(q)} computes the absolute value of quaternion \\spad{q} (sqrt of norm)."))
 (|real|
  ((|#1| $) "\\spad{real(q)} extracts the real part of quaternion \\spad{q}."))
 (|quatern|
  (($ |#1| |#1| |#1| |#1|)
   "\\spad{quatern(r,{} i,{} j,{} k)} constructs a quaternion from scalars."))
 (|norm|
  ((|#1| $)
   "\\spad{norm(q)} computes the norm of \\spad{q} (the sum of the squares of the components)."))
 (|imagK|
  ((|#1| $)
   "\\spad{imagK(q)} extracts the imaginary \\spad{k} part of quaternion \\spad{q}."))
 (|imagJ|
  ((|#1| $)
   "\\spad{imagJ(q)} extracts the imaginary \\spad{j} part of quaternion \\spad{q}."))
 (|imagI|
  ((|#1| $)
   "\\spad{imagI(q)} extracts the imaginary \\spad{i} part of quaternion \\spad{q}."))
 (|conjugate|
  (($ $)
   "\\spad{conjugate(q)} negates the imaginary parts of quaternion \\spad{q}.")))
(("documentation" 0 11727) ("ancestors" 0 9613) ("parents" 0 9108)
 ("abbreviation" 0 9100) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 3444) ("modemaps" 0 1793) ("sourceFile" 0 1754)
 ("constructorCategory" 0 147) ("constructorModemap" 0 56)
 ("constructorKind" 0 45) ("constructorForm" 0 20))