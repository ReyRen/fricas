15848               (MAKEPROP '|OpenMathDevice| 'NILADIC T)
(|OpenMathDevice|)
|domain|
(((|OpenMathDevice|)
  (CATEGORY |domain|
   (SIGNATURE |OMopenFile| ($ (|String|) (|String|) (|OpenMathEncoding|)))
   (SIGNATURE |OMopenString| ($ (|String|) (|OpenMathEncoding|)))
   (SIGNATURE |OMclose| ((|Void|) $))
   (SIGNATURE |OMsetEncoding| ((|Void|) $ (|OpenMathEncoding|)))
   (SIGNATURE |OMputApp| ((|Void|) $)) (SIGNATURE |OMputAtp| ((|Void|) $))
   (SIGNATURE |OMputAttr| ((|Void|) $)) (SIGNATURE |OMputBind| ((|Void|) $))
   (SIGNATURE |OMputBVar| ((|Void|) $)) (SIGNATURE |OMputError| ((|Void|) $))
   (SIGNATURE |OMputObject| ((|Void|) $))
   (SIGNATURE |OMputEndApp| ((|Void|) $))
   (SIGNATURE |OMputEndAtp| ((|Void|) $))
   (SIGNATURE |OMputEndAttr| ((|Void|) $))
   (SIGNATURE |OMputEndBind| ((|Void|) $))
   (SIGNATURE |OMputEndBVar| ((|Void|) $))
   (SIGNATURE |OMputEndError| ((|Void|) $))
   (SIGNATURE |OMputEndObject| ((|Void|) $))
   (SIGNATURE |OMputInteger| ((|Void|) $ (|Integer|)))
   (SIGNATURE |OMputFloat| ((|Void|) $ (|DoubleFloat|)))
   (SIGNATURE |OMputVariable| ((|Void|) $ (|Symbol|)))
   (SIGNATURE |OMputString| ((|Void|) $ (|String|)))
   (SIGNATURE |OMputSymbol| ((|Void|) $ (|String|) (|String|)))
   (SIGNATURE |OMgetApp| ((|Void|) $)) (SIGNATURE |OMgetAtp| ((|Void|) $))
   (SIGNATURE |OMgetAttr| ((|Void|) $)) (SIGNATURE |OMgetBind| ((|Void|) $))
   (SIGNATURE |OMgetBVar| ((|Void|) $)) (SIGNATURE |OMgetError| ((|Void|) $))
   (SIGNATURE |OMgetObject| ((|Void|) $))
   (SIGNATURE |OMgetEndApp| ((|Void|) $))
   (SIGNATURE |OMgetEndAtp| ((|Void|) $))
   (SIGNATURE |OMgetEndAttr| ((|Void|) $))
   (SIGNATURE |OMgetEndBind| ((|Void|) $))
   (SIGNATURE |OMgetEndBVar| ((|Void|) $))
   (SIGNATURE |OMgetEndError| ((|Void|) $))
   (SIGNATURE |OMgetEndObject| ((|Void|) $))
   (SIGNATURE |OMgetInteger| ((|Integer|) $))
   (SIGNATURE |OMgetFloat| ((|DoubleFloat|) $))
   (SIGNATURE |OMgetVariable| ((|Symbol|) $))
   (SIGNATURE |OMgetString| ((|String|) $))
   (SIGNATURE |OMgetSymbol|
    ((|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))) $))
   (SIGNATURE |OMgetType| ((|Symbol|) $))))
 (T |OpenMathDevice|))
(CATEGORY |domain|
 (SIGNATURE |OMopenFile| ($ (|String|) (|String|) (|OpenMathEncoding|)))
 (SIGNATURE |OMopenString| ($ (|String|) (|OpenMathEncoding|)))
 (SIGNATURE |OMclose| ((|Void|) $))
 (SIGNATURE |OMsetEncoding| ((|Void|) $ (|OpenMathEncoding|)))
 (SIGNATURE |OMputApp| ((|Void|) $)) (SIGNATURE |OMputAtp| ((|Void|) $))
 (SIGNATURE |OMputAttr| ((|Void|) $)) (SIGNATURE |OMputBind| ((|Void|) $))
 (SIGNATURE |OMputBVar| ((|Void|) $)) (SIGNATURE |OMputError| ((|Void|) $))
 (SIGNATURE |OMputObject| ((|Void|) $)) (SIGNATURE |OMputEndApp| ((|Void|) $))
 (SIGNATURE |OMputEndAtp| ((|Void|) $)) (SIGNATURE |OMputEndAttr| ((|Void|) $))
 (SIGNATURE |OMputEndBind| ((|Void|) $))
 (SIGNATURE |OMputEndBVar| ((|Void|) $))
 (SIGNATURE |OMputEndError| ((|Void|) $))
 (SIGNATURE |OMputEndObject| ((|Void|) $))
 (SIGNATURE |OMputInteger| ((|Void|) $ (|Integer|)))
 (SIGNATURE |OMputFloat| ((|Void|) $ (|DoubleFloat|)))
 (SIGNATURE |OMputVariable| ((|Void|) $ (|Symbol|)))
 (SIGNATURE |OMputString| ((|Void|) $ (|String|)))
 (SIGNATURE |OMputSymbol| ((|Void|) $ (|String|) (|String|)))
 (SIGNATURE |OMgetApp| ((|Void|) $)) (SIGNATURE |OMgetAtp| ((|Void|) $))
 (SIGNATURE |OMgetAttr| ((|Void|) $)) (SIGNATURE |OMgetBind| ((|Void|) $))
 (SIGNATURE |OMgetBVar| ((|Void|) $)) (SIGNATURE |OMgetError| ((|Void|) $))
 (SIGNATURE |OMgetObject| ((|Void|) $)) (SIGNATURE |OMgetEndApp| ((|Void|) $))
 (SIGNATURE |OMgetEndAtp| ((|Void|) $)) (SIGNATURE |OMgetEndAttr| ((|Void|) $))
 (SIGNATURE |OMgetEndBind| ((|Void|) $))
 (SIGNATURE |OMgetEndBVar| ((|Void|) $))
 (SIGNATURE |OMgetEndError| ((|Void|) $))
 (SIGNATURE |OMgetEndObject| ((|Void|) $))
 (SIGNATURE |OMgetInteger| ((|Integer|) $))
 (SIGNATURE |OMgetFloat| ((|DoubleFloat|) $))
 (SIGNATURE |OMgetVariable| ((|Symbol|) $))
 (SIGNATURE |OMgetString| ((|String|) $))
 (SIGNATURE |OMgetSymbol|
  ((|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))) $))
 (SIGNATURE |OMgetType| ((|Symbol|) $)))
"/git/fricas/src/algebra/OMDEV.spad"
((|OMgetType| (*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetSymbol| (*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetString| (*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetVariable| (*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetFloat| (*1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetInteger| (*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetEndObject| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetEndError| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetEndBVar| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetEndBind| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetEndAttr| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetEndAtp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetEndApp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetObject| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetError| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetBVar| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetBind| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetAttr| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetAtp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMgetApp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputSymbol| (*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputString| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputVariable| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputFloat| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputInteger| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputEndObject| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputEndError| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputEndBVar| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputEndBind| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputEndAttr| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputEndAtp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputEndApp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputObject| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputError| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputBVar| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputBind| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputAttr| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputAtp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMputApp| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMsetEncoding| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMclose| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))
 (|OMopenString| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))
 (|OMopenFile| (*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|)))))
((|OMsetEncoding| (((|Void|) $ (|OpenMathEncoding|)) 12))
 (|OMputVariable| (((|Void|) $ (|Symbol|)) 32))
 (|OMputSymbol| (((|Void|) $ (|String|) (|String|)) 34))
 (|OMputString| (((|Void|) $ (|String|)) 33)) (|OMputObject| (((|Void|) $) 19))
 (|OMputInteger| (((|Void|) $ (|Integer|)) 28))
 (|OMputFloat| (((|Void|) $ (|DoubleFloat|)) 30))
 (|OMputError| (((|Void|) $) 18)) (|OMputEndObject| (((|Void|) $) 26))
 (|OMputEndError| (((|Void|) $) 25)) (|OMputEndBind| (((|Void|) $) 23))
 (|OMputEndBVar| (((|Void|) $) 24)) (|OMputEndAttr| (((|Void|) $) 22))
 (|OMputEndAtp| (((|Void|) $) 21)) (|OMputEndApp| (((|Void|) $) 20))
 (|OMputBind| (((|Void|) $) 16)) (|OMputBVar| (((|Void|) $) 17))
 (|OMputAttr| (((|Void|) $) 15)) (|OMputAtp| (((|Void|) $) 14))
 (|OMputApp| (((|Void|) $) 13))
 (|OMopenString| (($ (|String|) (|OpenMathEncoding|)) 9))
 (|OMopenFile| (($ (|String|) (|String|) (|OpenMathEncoding|)) 8))
 (|OMgetVariable| (((|Symbol|) $) 51)) (|OMgetType| (((|Symbol|) $) 55))
 (|OMgetSymbol|
  (((|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))) $) 54))
 (|OMgetString| (((|String|) $) 52)) (|OMgetObject| (((|Void|) $) 41))
 (|OMgetInteger| (((|Integer|) $) 49)) (|OMgetFloat| (((|DoubleFloat|) $) 50))
 (|OMgetError| (((|Void|) $) 40)) (|OMgetEndObject| (((|Void|) $) 48))
 (|OMgetEndError| (((|Void|) $) 47)) (|OMgetEndBind| (((|Void|) $) 45))
 (|OMgetEndBVar| (((|Void|) $) 46)) (|OMgetEndAttr| (((|Void|) $) 44))
 (|OMgetEndAtp| (((|Void|) $) 43)) (|OMgetEndApp| (((|Void|) $) 42))
 (|OMgetBind| (((|Void|) $) 38)) (|OMgetBVar| (((|Void|) $) 39))
 (|OMgetAttr| (((|Void|) $) 37)) (|OMgetAtp| (((|Void|) $) 36))
 (|OMgetApp| (((|Void|) $) 35)) (|OMclose| (((|Void|) $) 11)))
OMDEV
((|constructor|
  (NIL
   "\\spadtype{OpenMathDevice} provides support for reading and writing openMath objects to files,{} strings etc. It also provides access to low-level operations from within the interpreter."))
 (|OMgetType|
  (((|Symbol|) $)
   "\\spad{OMgetType(dev)} returns the type of the next object on \\spad{dev}."))
 (|OMgetSymbol|
  (((|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))) $)
   "\\spad{OMgetSymbol(dev)} reads a symbol from \\spad{dev}."))
 (|OMgetString|
  (((|String|) $) "\\spad{OMgetString(dev)} reads a string from \\spad{dev}."))
 (|OMgetVariable|
  (((|Symbol|) $)
   "\\spad{OMgetVariable(dev)} reads a variable from \\spad{dev}."))
 (|OMgetFloat|
  (((|DoubleFloat|) $)
   "\\spad{OMgetFloat(dev)} reads a float from \\spad{dev}."))
 (|OMgetInteger|
  (((|Integer|) $)
   "\\spad{OMgetInteger(dev)} reads an integer from \\spad{dev}."))
 (|OMgetEndObject|
  (((|Void|) $)
   "\\spad{OMgetEndObject(dev)} reads an end object token from \\spad{dev}."))
 (|OMgetEndError|
  (((|Void|) $)
   "\\spad{OMgetEndError(dev)} reads an end error token from \\spad{dev}."))
 (|OMgetEndBVar|
  (((|Void|) $)
   "\\spad{OMgetEndBVar(dev)} reads an end bound variable list token from \\spad{dev}."))
 (|OMgetEndBind|
  (((|Void|) $)
   "\\spad{OMgetEndBind(dev)} reads an end binder token from \\spad{dev}."))
 (|OMgetEndAttr|
  (((|Void|) $)
   "\\spad{OMgetEndAttr(dev)} reads an end attribute token from \\spad{dev}."))
 (|OMgetEndAtp|
  (((|Void|) $)
   "\\spad{OMgetEndAtp(dev)} reads an end attribute pair token from \\spad{dev}."))
 (|OMgetEndApp|
  (((|Void|) $)
   "\\spad{OMgetEndApp(dev)} reads an end application token from \\spad{dev}."))
 (|OMgetObject|
  (((|Void|) $)
   "\\spad{OMgetObject(dev)} reads a begin object token from \\spad{dev}."))
 (|OMgetError|
  (((|Void|) $)
   "\\spad{OMgetError(dev)} reads a begin error token from \\spad{dev}."))
 (|OMgetBVar|
  (((|Void|) $)
   "\\spad{OMgetBVar(dev)} reads a begin bound variable list token from \\spad{dev}."))
 (|OMgetBind|
  (((|Void|) $)
   "\\spad{OMgetBind(dev)} reads a begin binder token from \\spad{dev}."))
 (|OMgetAttr|
  (((|Void|) $)
   "\\spad{OMgetAttr(dev)} reads a begin attribute token from \\spad{dev}."))
 (|OMgetAtp|
  (((|Void|) $)
   "\\spad{OMgetAtp(dev)} reads a begin attribute pair token from \\spad{dev}."))
 (|OMgetApp|
  (((|Void|) $)
   "\\spad{OMgetApp(dev)} reads a begin application token from \\spad{dev}."))
 (|OMputSymbol|
  (((|Void|) $ (|String|) (|String|))
   "\\spad{OMputSymbol(dev,{} cd,{} s)} writes the symbol \\spad{s} from \\spad{CD} \\spad{cd} to \\spad{dev}."))
 (|OMputString|
  (((|Void|) $ (|String|))
   "\\spad{OMputString(dev,{} i)} writes the string \\spad{i} to \\spad{dev}."))
 (|OMputVariable|
  (((|Void|) $ (|Symbol|))
   "\\spad{OMputVariable(dev,{} i)} writes the variable \\spad{i} to \\spad{dev}."))
 (|OMputFloat|
  (((|Void|) $ (|DoubleFloat|))
   "\\spad{OMputFloat(dev,{} i)} writes the float \\spad{i} to \\spad{dev}."))
 (|OMputInteger|
  (((|Void|) $ (|Integer|))
   "\\spad{OMputInteger(dev,{} i)} writes the integer \\spad{i} to \\spad{dev}."))
 (|OMputEndObject|
  (((|Void|) $)
   "\\spad{OMputEndObject(dev)} writes an end object token to \\spad{dev}."))
 (|OMputEndError|
  (((|Void|) $)
   "\\spad{OMputEndError(dev)} writes an end error token to \\spad{dev}."))
 (|OMputEndBVar|
  (((|Void|) $)
   "\\spad{OMputEndBVar(dev)} writes an end bound variable list token to \\spad{dev}."))
 (|OMputEndBind|
  (((|Void|) $)
   "\\spad{OMputEndBind(dev)} writes an end binder token to \\spad{dev}."))
 (|OMputEndAttr|
  (((|Void|) $)
   "\\spad{OMputEndAttr(dev)} writes an end attribute token to \\spad{dev}."))
 (|OMputEndAtp|
  (((|Void|) $)
   "\\spad{OMputEndAtp(dev)} writes an end attribute pair token to \\spad{dev}."))
 (|OMputEndApp|
  (((|Void|) $)
   "\\spad{OMputEndApp(dev)} writes an end application token to \\spad{dev}."))
 (|OMputObject|
  (((|Void|) $)
   "\\spad{OMputObject(dev)} writes a begin object token to \\spad{dev}."))
 (|OMputError|
  (((|Void|) $)
   "\\spad{OMputError(dev)} writes a begin error token to \\spad{dev}."))
 (|OMputBVar|
  (((|Void|) $)
   "\\spad{OMputBVar(dev)} writes a begin bound variable list token to \\spad{dev}."))
 (|OMputBind|
  (((|Void|) $)
   "\\spad{OMputBind(dev)} writes a begin binder token to \\spad{dev}."))
 (|OMputAttr|
  (((|Void|) $)
   "\\spad{OMputAttr(dev)} writes a begin attribute token to \\spad{dev}."))
 (|OMputAtp|
  (((|Void|) $)
   "\\spad{OMputAtp(dev)} writes a begin attribute pair token to \\spad{dev}."))
 (|OMputApp|
  (((|Void|) $)
   "\\spad{OMputApp(dev)} writes a begin application token to \\spad{dev}."))
 (|OMsetEncoding|
  (((|Void|) $ (|OpenMathEncoding|))
   "\\spad{OMsetEncoding(dev,{} enc)} sets the encoding used for reading or writing OpenMath objects to or from \\spad{dev} to \\spad{enc}."))
 (|OMclose|
  (((|Void|) $)
   "\\spad{OMclose(dev)} closes \\spad{dev},{} flushing output if necessary."))
 (|OMopenString|
  (($ (|String|) (|OpenMathEncoding|))
   "\\spad{OMopenString(s,{} mode)} opens the string \\spad{s} for reading or writing OpenMath objects in encoding \\spad{enc}."))
 (|OMopenFile|
  (($ (|String|) (|String|) (|OpenMathEncoding|))
   "\\spad{OMopenFile(f,{} mode,{} enc)} opens file \\spad{f} for reading or writing OpenMath objects (depending on \\spad{mode} which can be \\spad{\"r\"},{} \\spad{\"w\"} or \"a\" for read,{} write and append respectively),{} in the encoding \\spad{enc}.")))
(("documentation" 0 10355) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 10349) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 8656) ("modemaps" 0 4124) ("sourceFile" 0 4087)
 ("constructorCategory" 0 2151) ("constructorModemap" 0 88)
 ("constructorKind" 0 79) ("constructorForm" 0 60) ("NILADIC" 0 20))