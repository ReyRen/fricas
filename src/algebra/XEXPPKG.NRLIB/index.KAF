2381                (|XExponentialPackage| R |VarSet| XPOLY)
|package|
(((|XExponentialPackage| |#1| |#2| |#3|)
  (CATEGORY |package| (SIGNATURE |exp| (|#3| |#3| (|NonNegativeInteger|)))
   (SIGNATURE |log| (|#3| |#3| (|NonNegativeInteger|)))
   (SIGNATURE |Hausdorff| (|#3| |#3| |#3| (|NonNegativeInteger|))))
  (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))) (|OrderedSet|)
  (|XPolynomialsCat| |#2| |#1|))
 (T |XExponentialPackage|))
(CATEGORY |package| (SIGNATURE |exp| (|#3| |#3| (|NonNegativeInteger|)))
 (SIGNATURE |log| (|#3| |#3| (|NonNegativeInteger|)))
 (SIGNATURE |Hausdorff| (|#3| |#3| |#3| (|NonNegativeInteger|))))
"/git/fricas/src/algebra/XEXPPKG.spad"
((|Hausdorff| (*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 (|log| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 (|exp| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4)))))
((|log| ((|#3| |#3| (|NonNegativeInteger|)) 23))
 (|exp| ((|#3| |#3| (|NonNegativeInteger|)) 28))
 (|Hausdorff| ((|#3| |#3| |#3| (|NonNegativeInteger|)) 29)))
XEXPPKG
((|constructor|
  (NIL
   "This package provides computations of logarithms and exponentials for polynomials in non-commutative variables. \\newline Author: Michel Petitot (petitot@lifl.\\spad{fr})."))
 (|Hausdorff|
  ((|#3| |#3| |#3| (|NonNegativeInteger|))
   "\\spad{Hausdorff(a,{} b,{} n)} returns log(exp(a)*exp(\\spad{b})) truncated at order \\spad{n}."))
 (|log|
  ((|#3| |#3| (|NonNegativeInteger|))
   "\\spad{log(p,{} n)} returns the logarithm of \\spad{p} truncated at order \\spad{n}."))
 (|exp|
  ((|#3| |#3| (|NonNegativeInteger|))
   "\\spad{exp(p,{} n)} returns the exponential of \\spad{p} truncated at order \\spad{n}.")))
(("documentation" 0 1740) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 1732) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1573) ("modemaps" 0 675) ("sourceFile" 0 636)
 ("constructorCategory" 0 443) ("constructorModemap" 0 71)
 ("constructorKind" 0 61) ("constructorForm" 0 20))