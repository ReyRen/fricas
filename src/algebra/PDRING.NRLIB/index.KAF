5610                (|PartialDifferentialRing| S)
|category|
(((|PartialDifferentialRing| |#1|) (|Category|) (|SetCategory|))
 (T |PartialDifferentialRing|))
(|Join| (|Ring|)
        (CATEGORY |domain| (SIGNATURE |differentiate| ($ $ |t#1|))
         (SIGNATURE |differentiate| ($ $ (|List| |t#1|)))
         (SIGNATURE |differentiate| ($ $ |t#1| (|NonNegativeInteger|)))
         (SIGNATURE |differentiate|
          ($ $ (|List| |t#1|) (|List| (|NonNegativeInteger|))))
         (SIGNATURE D ($ $ |t#1|)) (SIGNATURE D ($ $ (|List| |t#1|)))
         (SIGNATURE D ($ $ |t#1| (|NonNegativeInteger|)))
         (SIGNATURE D ($ $ (|List| |t#1|) (|List| (|NonNegativeInteger|))))))
"/git/fricas/src/algebra/PDRING.spad"
((|differentiate| (*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (|differentiate| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 (|differentiate| (*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (|differentiate| (*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 (D (*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (D (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 (D (*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (D (*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|)))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|recip| (((|Union| $ #1#) $) 6)) (|opposite?| (((|Boolean|) $ $) 6))
 (|one?| (((|Boolean|) $) 6)) (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|latex| (((|String|) $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|differentiate| (($ $ |#1|) 6) (($ $ (|List| |#1|)) 6)
  (($ $ |#1| (|NonNegativeInteger|)) 6)
  (($ $ (|List| |#1|) (|List| (|NonNegativeInteger|))) 6))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ (|Integer|)) 6))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|associator| (($ $ $ $) 6))
 (|antiCommutator| (($ $ $) 6)) (|annihilate?| (((|Boolean|) $ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST))
 (D (($ $ |#1|) 6) (($ $ (|List| |#1|)) 6)
  (($ $ |#1| (|NonNegativeInteger|)) 6)
  (($ $ (|List| |#1|) (|List| (|NonNegativeInteger|))) 6))
 (= (((|Boolean|) $ $) 6)) (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6)))
PDRING
(((|Ring|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CoercibleTo| (|OutputForm|)) . T) ((|LeftModule| |t#1|) . T)
 ((|Magma|) . T) ((|MagmaWithUnit|) . T) ((|Monoid|) . T)
 ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "A partial differential ring with differentiations indexed by a parameter type \\spad{S}. \\blankline"))
 (D
  (($ $ (|List| |#1|) (|List| (|NonNegativeInteger|)))
   "\\spad{D(x,{} [s1,{} ...,{} sn],{} [n1,{} ...,{} nn])} computes multiple partial derivatives,{} \\spadignore{i.e.} \\spad{D(...D(x,{} s1,{} n1)...,{} sn,{} nn)}.")
  (($ $ |#1| (|NonNegativeInteger|))
   "\\spad{D(x,{} s,{} n)} computes multiple partial derivatives,{} \\spadignore{i.e.} \\spad{n}-th derivative of \\spad{x} with respect to \\spad{s}.")
  (($ $ (|List| |#1|))
   "\\spad{D(x,{} [s1,{} ...sn])} computes successive partial derivatives,{} \\spadignore{i.e.} \\spad{D(...D(x,{} s1)...,{} sn)}.")
  (($ $ |#1|)
   "\\spad{D(x,{} v)} computes the partial derivative of \\spad{x} with respect to \\spad{v}."))
 (|differentiate|
  (($ $ (|List| |#1|) (|List| (|NonNegativeInteger|)))
   "\\spad{differentiate(x,{} [s1,{} ...,{} sn],{} [n1,{} ...,{} nn])} computes multiple partial derivatives,{} \\spadignore{i.e.}")
  (($ $ |#1| (|NonNegativeInteger|))
   "\\spad{differentiate(x,{} s,{} n)} computes multiple partial derivatives,{} \\spadignore{i.e.} \\spad{n}-th derivative of \\spad{x} with respect to \\spad{s}.")
  (($ $ (|List| |#1|))
   "\\spad{differentiate(x,{} [s1,{} ...sn])} computes successive partial derivatives,{} \\spadignore{i.e.} \\spad{differentiate(...differentiate(x,{} s1)...,{} sn)}.")
  (($ $ |#1|)
   "\\spad{differentiate(x,{} v)} computes the partial derivative of \\spad{x} with respect to \\spad{v}.")))
(("documentation" 0 4071) ("ancestors" 0 3508) ("parents" 0 3491)
 ("abbreviation" 0 3484) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2063) ("modemaps" 0 716) ("sourceFile" 0 678)
 ("constructorCategory" 0 158) ("constructorModemap" 0 61)
 ("constructorKind" 0 50) ("constructorForm" 0 20))