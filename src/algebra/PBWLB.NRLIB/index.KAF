5288                (|PoincareBirkhoffWittLyndonBasis| |VarSet|)
|domain|
(((|PoincareBirkhoffWittLyndonBasis| |#1|)
  (|Join| (|OrderedSet|) (|RetractableTo| (|LyndonWord| |#1|))
          (CATEGORY |domain| (SIGNATURE 1 ($) |constant|)
           (SIGNATURE |coerce| ((|FreeMonoid| |#1|) $))
           (SIGNATURE |coerce| ($ |#1|))
           (SIGNATURE |first| ((|LyndonWord| |#1|) $))
           (SIGNATURE |length| ((|NonNegativeInteger|) $))
           (SIGNATURE |listOfTerms| ((|List| (|LyndonWord| |#1|)) $))
           (SIGNATURE |rest| ($ $)) (SIGNATURE |retractable?| ((|Boolean|) $))
           (SIGNATURE |varList| ((|List| |#1|) $))))
  (|OrderedSet|))
 (T |PoincareBirkhoffWittLyndonBasis|))
(|Join| (|OrderedSet|) (|RetractableTo| (|LyndonWord| |#1|))
        (CATEGORY |domain| (SIGNATURE (|One|) ($) |constant|)
         (SIGNATURE |coerce| ((|FreeMonoid| |#1|) $))
         (SIGNATURE |coerce| ($ |#1|))
         (SIGNATURE |first| ((|LyndonWord| |#1|) $))
         (SIGNATURE |length| ((|NonNegativeInteger|) $))
         (SIGNATURE |listOfTerms| ((|List| (|LyndonWord| |#1|)) $))
         (SIGNATURE |rest| ($ $)) (SIGNATURE |retractable?| ((|Boolean|) $))
         (SIGNATURE |varList| ((|List| |#1|) $))))
"/git/fricas/src/algebra/PBWLB.spad"
((|One| (*1 *1)
        (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
             (|ofCategory| *2 (|OrderedSet|))))
 (|coerce| (*1 *2 *1)
           (AND (|isDomain| *2 (|FreeMonoid| *3))
                (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
                (|ofCategory| *3 (|OrderedSet|))))
 (|coerce| (*1 *1 *2)
           (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
                (|ofCategory| *2 (|OrderedSet|))))
 (|first| (*1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 (|length| (*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 (|listOfTerms| (*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LyndonWord| *3)))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 (|rest| (*1 *1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 (|retractable?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 (|varList| (*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|)))))
((~= (((|Boolean|) $ $) NIL)) (|varList| (((|List| |#1|) $) 16))
 (|smaller?| (((|Boolean|) $ $) NIL)) (|retractable?| (((|Boolean|) $) 38))
 (|retractIfCan| (((|Union| (|LyndonWord| |#1|) "failed") $) 43))
 (|retract| (((|LyndonWord| |#1|) $) 41)) (|rest| (($ $) 18))
 (|min| (($ $ $) NIL)) (|max| (($ $ $) NIL))
 (|listOfTerms| (((|List| (|LyndonWord| |#1|)) $) 23))
 (|length| (((|NonNegativeInteger|) $) 46)) (|latex| (((|String|) $) NIL))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|first| (((|LyndonWord| |#1|) $) 17))
 (|coerce| (((|OutputForm|) $) 37) (($ (|LyndonWord| |#1|)) 21)
           (((|FreeMonoid| |#1|) $) 27) (($ |#1|) 20))
 (|One| (($) 8 T CONST)) (>= (((|Boolean|) $ $) NIL))
 (> (((|Boolean|) $ $) NIL)) (= (((|Boolean|) $ $) 11))
 (<= (((|Boolean|) $ $) NIL)) (< (((|Boolean|) $ $) 49)))
PBWLB
(((|OrderedSet|) . T) ((|RetractableTo| (|LyndonWord| |#1|)) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|Comparable|) . T)
 ((|OrderedSet|) . T) ((|PartialOrder|) . T)
 ((|RetractableTo| (|LyndonWord| |#1|)) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "This domain provides the internal representation of polynomials in non-commutative variables written over the Poincare-Birkhoff-Witt basis. See the \\spadtype{XPBWPolynomial} domain constructor. See Free Lie Algebras by \\spad{C}. Reutenauer (Oxford science publications). \\newline Author: Michel Petitot (petitot@lifl.\\spad{fr})."))
 (|varList|
  (((|List| |#1|) $)
   "\\spad{varList([l1]*[l2]*...[ln])} returns the list of variables in the word \\spad{l1*l2*...*ln}."))
 (|retractable?|
  (((|Boolean|) $)
   "\\spad{retractable?([l1]*[l2]*...[ln])} returns \\spad{true} iff \\spad{n} equals \\spad{1}."))
 (|rest|
  (($ $)
   "\\spad{rest([l1]*[l2]*...[ln])} returns the list \\spad{l2,{} .... ln}."))
 (|listOfTerms|
  (((|List| (|LyndonWord| |#1|)) $)
   "\\spad{listOfTerms([l1]*[l2]*...[ln])} returns the list of words \\spad{l1,{} l2,{} .... ln}."))
 (|length|
  (((|NonNegativeInteger|) $)
   "\\spad{length([l1]*[l2]*...[ln])} returns the length of the word \\spad{l1*l2*...*ln}."))
 (|first|
  (((|LyndonWord| |#1|) $)
   "\\spad{first([l1]*[l2]*...[ln])} returns the Lyndon word \\spad{l1}."))
 (|coerce| (($ |#1|) "\\spad{coerce(v)} return \\spad{v}")
           (((|FreeMonoid| |#1|) $)
            "\\spad{coerce([l1]*[l2]*...[ln])} returns the word \\spad{l1*l2*...*ln},{} where \\spad{[l_i]} is the backeted form of the Lyndon word \\spad{l_i}."))
 ((|One|) (($) "\\spad{1} returns the empty list.")))
(("documentation" 0 3839) ("ancestors" 0 3647) ("parents" 0 3580)
 ("abbreviation" 0 3574) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2711) ("modemaps" 0 1268) ("sourceFile" 0 1231)
 ("constructorCategory" 0 709) ("constructorModemap" 0 74)
 ("constructorKind" 0 65) ("constructorForm" 0 20))