5273                (|FourierSeries| R E)
|domain|
(((|FourierSeries| |#1| |#2|)
  (|Join| (|Algebra| |#1|)
          (CATEGORY |domain|
           (IF (|has| |#2| (|Canonical|))
               (IF (|has| |#1| (|Canonical|))
                   (ATTRIBUTE (|Canonical|))
                   |noBranch|)
               |noBranch|)
           (SIGNATURE |coerce| ($ |#1|))
           (SIGNATURE |coerce| ($ (|FourierComponent| |#2|)))
           (SIGNATURE |makeSin| ($ |#2| |#1|))
           (SIGNATURE |makeCos| ($ |#2| |#1|))))
  (|Join| (|CommutativeRing|) (|Algebra| (|Fraction| (|Integer|))))
  (|Join| (|OrderedSet|) (|AbelianGroup|)))
 (T |FourierSeries|))
(|Join| (|Algebra| |#1|)
        (CATEGORY |domain|
         (IF (|has| |#2| (|Canonical|))
             (IF (|has| |#1| (|Canonical|))
                 (ATTRIBUTE (|Canonical|))
                 |noBranch|)
             |noBranch|)
         (SIGNATURE |coerce| ($ |#1|))
         (SIGNATURE |coerce| ($ (|FourierComponent| |#2|)))
         (SIGNATURE |makeSin| ($ |#2| |#1|))
         (SIGNATURE |makeCos| ($ |#2| |#1|))))
"/git/fricas/src/algebra/FSERIES.spad"
((|coerce| (*1 *1 *2)
           (AND (|isDomain| *1 (|FourierSeries| *2 *3))
                (|ofCategory| *2
                              (|Join| (|CommutativeRing|)
                                      (|Algebra| (|Fraction| (|Integer|)))))
                (|ofCategory| *3 (|Join| (|OrderedSet|) (|AbelianGroup|)))))
 (|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|FourierComponent| *4))
                (|ofCategory| *4 (|Join| (|OrderedSet|) (|AbelianGroup|)))
                (|isDomain| *1 (|FourierSeries| *3 *4))
                (|ofCategory| *3
                              (|Join| (|CommutativeRing|)
                                      (|Algebra| (|Fraction| (|Integer|)))))))
 (|makeSin| (*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))
 (|makeCos| (*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|))))))
((~= (((|Boolean|) $ $) NIL)) (|zero?| (((|Boolean|) $) NIL))
 (|subtractIfCan| (((|Union| $ "failed") $ $) NIL))
 (|sample| (($) NIL T CONST)) (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|recip| (((|Union| $ #1#) $) NIL)) (|opposite?| (((|Boolean|) $ $) NIL))
 (|one?| (((|Boolean|) $) NIL)) (|makeSin| (($ |#2| |#1|) 36))
 (|makeCos| (($ |#2| |#1|) 34)) (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|latex| (((|String|) $) NIL))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|commutator| (($ $ $) NIL))
 (|coerce| (((|OutputForm|) $) NIL) (($ (|Integer|)) NIL) (($ |#1|) NIL)
           (($ (|FourierComponent| |#2|)) 26))
 (|characteristic| (((|NonNegativeInteger|)) NIL))
 (|associator| (($ $ $ $) NIL)) (|antiCommutator| (($ $ $) NIL))
 (|annihilate?| (((|Boolean|) $ $) NIL))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|Zero| (($) 10 T CONST)) (|One| (($) 16 T CONST)) (= (((|Boolean|) $ $) NIL))
 (- (($ $ $) NIL) (($ $) 25)) (+ (($ $ $) 35))
 (* (($ (|PositiveInteger|) $) NIL) (($ $ $) 37) (($ (|Integer|) $) NIL)
    (($ (|NonNegativeInteger|) $) NIL) (($ $ |#1|) NIL) (($ |#1| $) NIL)))
((AND (|HasCategory| |#1| '(|Canonical|)) (|HasCategory| |#2| '(|Canonical|))))
FSERIES
(((|Algebra| |#1|) . T)
 ((|Canonical|) AND (|has| |#2| (|Canonical|)) (|has| |#1| (|Canonical|))))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| |#1|) . T) ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|Canonical|) AND (|has| |#1| (|Canonical|)) (|has| |#2| (|Canonical|)))
 ((|CoercibleTo| (|OutputForm|)) . T) ((|LeftModule| |t#1|) . T)
 ((|Magma|) . T) ((|MagmaWithUnit|) . T) ((|Module| |t#1|) . T)
 ((|Monoid|) . T) ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "\\indented{1}{Author: James Davenport} Date Created: 17 April 1992 Basic Functions: Related Constructors: Also See: AMS Classifications: Keywords: References: Description:"))
 (|makeCos|
  (($ |#2| |#1|)
   "\\spad{makeCos(e,{} r)} makes a sin expression with given argument and coefficient"))
 (|makeSin|
  (($ |#2| |#1|)
   "\\spad{makeSin(e,{} r)} makes a sin expression with given argument and coefficient"))
 (|coerce|
  (($ (|FourierComponent| |#2|))
   "\\spad{coerce(c)} converts sin/cos terms into Fourier Series")
  (($ |#1|) "\\spad{coerce(r)} converts coefficients into Fourier Series")))
(("documentation" 0 4645) ("ancestors" 0 3929) ("parents" 0 3829)
 ("abbreviation" 0 3821) ("predicates" 0 3741) ("superDomain" 0 NIL)
 ("operationAlist" 0 2391) ("modemaps" 0 1124) ("sourceFile" 0 1085)
 ("constructorCategory" 0 661) ("constructorModemap" 0 51)
 ("constructorKind" 0 42) ("constructorForm" 0 20))