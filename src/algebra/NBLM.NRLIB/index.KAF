14390               (MAKEPROP '|NaiveBeckermannLabahnModular| 'NILADIC T)
(|NaiveBeckermannLabahnModular|)
|package|
(((|NaiveBeckermannLabahnModular|)
  (CATEGORY |package|
   (SIGNATURE |naiveBeckermannLabahn|
    ((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
     (|NonNegativeInteger|) (|Integer|)))
   (SIGNATURE |naiveBeckermannLabahn|
    ((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
     (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)))
   (SIGNATURE |naiveBeckermannLabahnMultipoint|
    ((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
     (|U32Vector|) (|Integer|)))
   (SIGNATURE |naiveBeckermannLabahnMultipoint|
    ((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
     (|Vector| (|Integer|)) (|U32Vector|) (|Integer|)))
   (SIGNATURE |naiveBeckermannLabahn1|
    ((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
     (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)
     (|Mapping| (|Integer|) (|Integer|))
     (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
     (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))))
   (SIGNATURE |naiveBeckermannLabahn1|
    ((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
     (|NonNegativeInteger|) (|Integer|) (|Mapping| (|Integer|) (|Integer|))
     (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
     (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))))
   (SIGNATURE |naiveBeckermannLabahn0|
    ((|Void|) (|Vector| (|U32Vector|)) (|Vector| (|U32Vector|))
     (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)
     (|Mapping| (|Integer|) (|Integer|))
     (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
     (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))))
   (SIGNATURE |reduceBasis0|
    ((|Record| (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
               (|:| |defects| (|Vector| (|Integer|)))
               (|:| |cinds| (|Vector| (|Integer|))))
     (|TwoDimensionalArray| (|U32Vector|)) (|Vector| (|Integer|))
     (|Vector| (|Integer|)) (|Integer|)))
   (SIGNATURE |reduceBasis|
    ((|Record| (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
               (|:| |defects| (|Vector| (|Integer|)))
               (|:| |cinds| (|Vector| (|Integer|))))
     (|Vector| (|U32Vector|)) (|Vector| (|Integer|)) (|Vector| (|Integer|))
     (|Integer|)))))
 (T |NaiveBeckermannLabahnModular|))
(CATEGORY |package|
 (SIGNATURE |naiveBeckermannLabahn|
  ((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
   (|NonNegativeInteger|) (|Integer|)))
 (SIGNATURE |naiveBeckermannLabahn|
  ((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
   (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)))
 (SIGNATURE |naiveBeckermannLabahnMultipoint|
  ((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
   (|U32Vector|) (|Integer|)))
 (SIGNATURE |naiveBeckermannLabahnMultipoint|
  ((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
   (|Vector| (|Integer|)) (|U32Vector|) (|Integer|)))
 (SIGNATURE |naiveBeckermannLabahn1|
  ((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
   (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)
   (|Mapping| (|Integer|) (|Integer|))
   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))))
 (SIGNATURE |naiveBeckermannLabahn1|
  ((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
   (|NonNegativeInteger|) (|Integer|) (|Mapping| (|Integer|) (|Integer|))
   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))))
 (SIGNATURE |naiveBeckermannLabahn0|
  ((|Void|) (|Vector| (|U32Vector|)) (|Vector| (|U32Vector|))
   (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)
   (|Mapping| (|Integer|) (|Integer|))
   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))))
 (SIGNATURE |reduceBasis0|
  ((|Record| (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
             (|:| |defects| (|Vector| (|Integer|)))
             (|:| |cinds| (|Vector| (|Integer|))))
   (|TwoDimensionalArray| (|U32Vector|)) (|Vector| (|Integer|))
   (|Vector| (|Integer|)) (|Integer|)))
 (SIGNATURE |reduceBasis|
  ((|Record| (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
             (|:| |defects| (|Vector| (|Integer|)))
             (|:| |cinds| (|Vector| (|Integer|))))
   (|Vector| (|U32Vector|)) (|Vector| (|Integer|)) (|Vector| (|Integer|))
   (|Integer|))))
"/git/fricas/src/algebra/NBLM.spad"
((|reduceBasis| (*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|reduceBasis0| (*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|TwoDimensionalArray| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|naiveBeckermannLabahn0| (*1 *2 *3 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|naiveBeckermannLabahn1| (*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|naiveBeckermannLabahn1| (*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|naiveBeckermannLabahnMultipoint| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|naiveBeckermannLabahnMultipoint| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|naiveBeckermannLabahn| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 (|naiveBeckermannLabahn| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|)))))
((|reduceBasis0|
  (((|Record| (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
              (|:| |defects| (|Vector| (|Integer|)))
              (|:| |cinds| (|Vector| (|Integer|))))
    (|TwoDimensionalArray| (|U32Vector|)) (|Vector| (|Integer|))
    (|Vector| (|Integer|)) (|Integer|))
   54))
 (|reduceBasis|
  (((|Record| (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
              (|:| |defects| (|Vector| (|Integer|)))
              (|:| |cinds| (|Vector| (|Integer|))))
    (|Vector| (|U32Vector|)) (|Vector| (|Integer|)) (|Vector| (|Integer|))
    (|Integer|))
   55))
 (|naiveBeckermannLabahnMultipoint|
  (((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
    (|Vector| (|Integer|)) (|U32Vector|) (|Integer|))
   26)
  (((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
    (|U32Vector|) (|Integer|))
   27))
 (|naiveBeckermannLabahn1|
  (((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
    (|NonNegativeInteger|) (|Integer|) (|Mapping| (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
   17)
  (((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
    (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)
    (|Mapping| (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
   14))
 (|naiveBeckermannLabahn0|
  (((|Void|) (|Vector| (|U32Vector|)) (|Vector| (|U32Vector|))
    (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)
    (|Mapping| (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
   42))
 (|naiveBeckermannLabahn|
  (((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
    (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|))
   15)
  (((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
    (|NonNegativeInteger|) (|Integer|))
   18)))
NBLM
((|constructor|
  (NIL
   "This package solves (multipoint) Hermite-Pade \\indented{1}{interpolation problem over \\$\\spad{Z_p}\\$,{} where \\$\\spad{p}\\$ is machine} \\indented{1}{sized prime.\\space{2}We use quadratic algorithm from 94} \\indented{1}{Beckermann and Labahn paper (with modification to handle} \\indented{1}{multipoint case).}"))
 (|reduceBasis|
  (((|Record| (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
              (|:| |defects| (|Vector| (|Integer|)))
              (|:| |cinds| (|Vector| (|Integer|))))
    (|Vector| (|U32Vector|)) (|Vector| (|Integer|)) (|Vector| (|Integer|))
    (|Integer|))
   "Skips elements of sigma basis which does not satisfy degree bounds and puts sigma-basis into canonical form."))
 (|naiveBeckermannLabahn0|
  (((|Void|) (|Vector| (|U32Vector|)) (|Vector| (|U32Vector|))
    (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|)
    (|Mapping| (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|))
    (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
   "main solver routine"))
 (|naiveBeckermannLabahnMultipoint|
  (((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
    (|Vector| (|Integer|)) (|U32Vector|) (|Integer|))
   "\\spad{naiveBeckermannLabahnMultipoint(f,{} degs,{} sigma,{} p)} solves modulo \\$\\spad{p}\\$ multipoint Hermite-Pade interpolation problem of order \\$\\spad{sigma}\\$. \\$\\spad{degs}\\$ specifies degree bounds for solution. The first element of result contains \\spad{sigma}-basis. The second gives defects of elements of \\spad{sigma}-basis. The third one contains residuals \\spad{--} we stop updating solution if this would violate degree bounds,{} so residual is zero for elements of \\spad{sigma}-basis which are within bounds,{} but non-zero otherwise.")
  (((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
    (|U32Vector|) (|Integer|))
   "\\spad{naiveBeckermannLabahnMultipoint(f,{} degs,{} sigma,{} p)} solves modulo \\$\\spad{p}\\$ multipoint Hermite-Pade interpolation problem of order \\$\\spad{sigma}\\$. \\$\\spad{degs}\\$ specifies degree bounds for solution. The first element of result contains \\spad{sigma}-basis. The second gives defects of elements of \\spad{sigma}-basis. The third one contains residuals \\spad{--} we stop updating solution if this would violate degree bounds,{} so residual is zero for elements of \\spad{sigma}-basis which are within bounds,{} but non-zero otherwise."))
 (|naiveBeckermannLabahn|
  (((|List| (|Any|)) (|Vector| (|SparseUnivariatePolynomial| (|Integer|)))
    (|Vector| (|Integer|)) (|NonNegativeInteger|) (|Integer|))
   "\\spad{naiveBeckermannLabahn(f,{} degs,{} sigma,{} p)} solves modulo \\$\\spad{p}\\$ Hermite-Pade interpolation problem of order \\$\\spad{sigma}\\$. \\$\\spad{degs}\\$ specifies degree bounds for solution. The first element of result contains \\spad{sigma}-basis. The second gives defects of elements of \\spad{sigma}-basis. The third one contains residuals \\spad{--} we stop updating solution if this would violate degree bounds,{} so residual is zero for elements of \\spad{sigma}-basis which are within bounds,{} but non-zero otherwise.")
  (((|List| (|Any|)) (|Vector| (|U32Vector|)) (|Vector| (|Integer|))
    (|NonNegativeInteger|) (|Integer|))
   "\\spad{naiveBeckermannLabahn(f,{} degs,{} sigma,{} p)} solves modulo \\$\\spad{p}\\$ Hermite-Pade interpolation problem of order \\$\\spad{sigma}\\$. \\$\\spad{degs}\\$ specifies degree bounds for solution. The first element of result contains \\spad{sigma}-basis. The second gives defects of elements of \\spad{sigma}-basis. The third one contains residuals \\spad{--} we stop updating solution if this would violate degree bounds,{} so residual is zero for elements of \\spad{sigma}-basis which are within bounds,{} but non-zero otherwise.")))
(("documentation" 0 10525) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 10520) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 8419) ("modemaps" 0 4726) ("sourceFile" 0 4690)
 ("constructorCategory" 0 2482) ("constructorModemap" 0 117)
 ("constructorKind" 0 107) ("constructorForm" 0 74) ("NILADIC" 0 20))