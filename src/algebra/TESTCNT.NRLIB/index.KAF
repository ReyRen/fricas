8285                (MAKEPROP '|UnittestCount| 'NILADIC T)
(|UnittestCount|)
|package|
(((|UnittestCount|)
  (CATEGORY |package| (SIGNATURE |testsuite| ((|Void|) (|String|)))
   (SIGNATURE |testsuiteNoClear| ((|Void|) (|String|)))
   (SIGNATURE |testcase| ((|Void|) (|String|)))
   (SIGNATURE |testcaseNoClear| ((|Void|) (|String|)))
   (SIGNATURE |statistics| ((|Void|))) (SIGNATURE |incPass| ((|Void|)))
   (SIGNATURE |incFail| ((|Void|) (|String|) (|List| (|OutputForm|))))
   (SIGNATURE |incXfPass| ((|Void|) (|String|) (|List| (|OutputForm|))))
   (SIGNATURE |decXfPass| ((|Void|))) (SIGNATURE |incXfFail| ((|Void|)))
   (SIGNATURE |chkLibraryError| ((|Void|)))
   (SIGNATURE |incLibraryError| ((|Void|) (|String|) (|List| (|OutputForm|))))
   (SIGNATURE |incXfLibraryError|
    ((|Void|) (|String|) (|List| (|OutputForm|))))
   (SIGNATURE |incFatal| ((|Void|) (|String|)))
   (SIGNATURE |incXfFatal| ((|Void|) (|String|)))
   (SIGNATURE |decFatal| ((|Void|))) (SIGNATURE |decXfFatal| ((|Void|)))
   (SIGNATURE |addWarning| ((|Void|) (|OutputForm|)))))
 (T |UnittestCount|))
(CATEGORY |package| (SIGNATURE |testsuite| ((|Void|) (|String|)))
 (SIGNATURE |testsuiteNoClear| ((|Void|) (|String|)))
 (SIGNATURE |testcase| ((|Void|) (|String|)))
 (SIGNATURE |testcaseNoClear| ((|Void|) (|String|)))
 (SIGNATURE |statistics| ((|Void|))) (SIGNATURE |incPass| ((|Void|)))
 (SIGNATURE |incFail| ((|Void|) (|String|) (|List| (|OutputForm|))))
 (SIGNATURE |incXfPass| ((|Void|) (|String|) (|List| (|OutputForm|))))
 (SIGNATURE |decXfPass| ((|Void|))) (SIGNATURE |incXfFail| ((|Void|)))
 (SIGNATURE |chkLibraryError| ((|Void|)))
 (SIGNATURE |incLibraryError| ((|Void|) (|String|) (|List| (|OutputForm|))))
 (SIGNATURE |incXfLibraryError| ((|Void|) (|String|) (|List| (|OutputForm|))))
 (SIGNATURE |incFatal| ((|Void|) (|String|)))
 (SIGNATURE |incXfFatal| ((|Void|) (|String|)))
 (SIGNATURE |decFatal| ((|Void|))) (SIGNATURE |decXfFatal| ((|Void|)))
 (SIGNATURE |addWarning| ((|Void|) (|OutputForm|))))
"/git/fricas/src/algebra/TESTCNT.spad"
((|addWarning| (*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))
 (|decXfFatal| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|decFatal| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|incXfFatal| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))
 (|incFatal| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))
 (|incXfLibraryError| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|incLibraryError| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|chkLibraryError| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|incXfFail| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|decXfPass| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|incXfPass| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|incFail| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|incPass| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|statistics| (*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))
 (|testcaseNoClear| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))
 (|testcase| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))
 (|testsuiteNoClear| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))
 (|testsuite| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|)))))
((|testsuiteNoClear| (((|Void|) (|String|)) 20))
 (|testsuite| (((|Void|) (|String|)) 21))
 (|testcaseNoClear| (((|Void|) (|String|)) 35))
 (|testcase| (((|Void|) (|String|)) 36)) (|statistics| (((|Void|)) 65))
 (|incXfPass| (((|Void|) (|String|) (|List| (|OutputForm|))) 45))
 (|incXfLibraryError| (((|Void|) (|String|) (|List| (|OutputForm|))) 42))
 (|incXfFatal| (((|Void|) (|String|)) 49)) (|incXfFail| (((|Void|)) 43))
 (|incPass| (((|Void|)) 38))
 (|incLibraryError| (((|Void|) (|String|) (|List| (|OutputForm|))) 41))
 (|incFatal| (((|Void|) (|String|)) 47))
 (|incFail| (((|Void|) (|String|) (|List| (|OutputForm|))) 44))
 (|decXfPass| (((|Void|)) 46)) (|decXfFatal| (((|Void|)) 50))
 (|decFatal| (((|Void|)) 48)) (|chkLibraryError| (((|Void|)) 39))
 (|addWarning| (((|Void|) (|OutputForm|)) 54)))
TESTCNT
((|constructor|
  (NIL
   "UnittestCount is a package that keeps track of statistics \\indented{13}{collected during testing.\\space{2}It is separate from} \\indented{13}{\\spadtype{UnittestAux} because the latter takes an argument,{}} \\indented{13}{and we want the state to be common for all arguments.}"))
 (|addWarning|
  (((|Void|) (|OutputForm|))
   "\\spad{addWarning s} is an internal function that adds \\spad{s},{} together with an indication of the current testcase and the current testsuite to the list of warnings."))
 (|decXfFatal| (((|Void|)) "like decFatal,{} but for expected failures."))
 (|decFatal|
  (((|Void|))
   "decFatal is an internal function that declares that the preceding test did not fail with a fatal error."))
 (|incXfFatal|
  (((|Void|) (|String|)) "like incFatal,{} but for expected failures."))
 (|incFatal|
  (((|Void|) (|String|))
   "\\spad{incFatal s} is an internal function that steps the number of fatal tests and records input."))
 (|incXfLibraryError|
  (((|Void|) (|String|) (|List| (|OutputForm|)))
   "like incLibraryError,{} but using expected failures."))
 (|incLibraryError|
  (((|Void|) (|String|) (|List| (|OutputForm|)))
   "incLibraryError is an internal function that steps the number of failed tests,{} but not the number of tests."))
 (|chkLibraryError|
  (((|Void|))
   "chkLibraryError is an internal function that steps the number of tests."))
 (|incXfFail|
  (((|Void|))
   "\\spad{incXfFail()} is an internal function that steps the number expected failures."))
 (|decXfPass|
  (((|Void|))
   "\\spad{decXfPass()} is an internal function that declares that the preceding test did not pass unexpectedly. This function should only be used for testing library errors"))
 (|incXfPass|
  (((|Void|) (|String|) (|List| (|OutputForm|)))
   "\\spad{incXfPass(s,{} o)} is an internal function that steps the number of tests that passed but were expected to fail and records in- and output."))
 (|incFail|
  (((|Void|) (|String|) (|List| (|OutputForm|)))
   "\\spad{incFail(s,{} o)} is an internal function that steps the number of failed tests and records in- and output."))
 (|incPass|
  (((|Void|))
   "incPass is an internal function that steps the number of passed tests."))
 (|statistics|
  (((|Void|))
   "\\spad{statistics()} prints out a summary of the outcome of the testcases so far. Use \\spad{clear completely} to reset the statistics."))
 (|testcaseNoClear|
  (((|Void|) (|String|))
   "\\spad{testcaseNoClear s},{} starts a new testcase with \\spad{s} as title,{} without calling \\spad{clear all}. A testcase is composed of several tests."))
 (|testcase|
  (((|Void|) (|String|))
   "\\spad{testcase s} starts a new testcase with \\spad{s} as title. It also calls \\spad{clear all}. A testcase is composed of several tests."))
 (|testsuiteNoClear|
  (((|Void|) (|String|))
   "\\spad{testsuiteNoClear s} starts a new testsuite with \\spad{s} as title,{} without calling \\spad{clear all}. A testsuite is composed of several testcases."))
 (|testsuite|
  (((|Void|) (|String|))
   "\\spad{testsuite s} starts a new testsuite with \\spad{s} as title. It also calls \\spad{clear all}. A testsuite is composed of several testcases.")))
(("documentation" 0 5083) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 5075) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 4269) ("modemaps" 0 2035) ("sourceFile" 0 1996)
 ("constructorCategory" 0 1080) ("constructorModemap" 0 87)
 ("constructorKind" 0 77) ("constructorForm" 0 59) ("NILADIC" 0 20))