17560               (|JetDifferentialEquation| JB D)
|domain|
(((|JetDifferentialEquation| |#1| |#2|)
  (CATEGORY |domain| (SIGNATURE |order| ((|NonNegativeInteger|) $))
   (SIGNATURE |coerce| ((|OutputForm|) $))
   (SIGNATURE |printSys| ((|OutputForm|) (|List| |#2|)))
   (SIGNATURE |display| ((|Void|) $)) (SIGNATURE |copy| ($ $))
   (SIGNATURE |retract| ((|List| |#2|) $))
   (SIGNATURE |jacobiMatrix| ((|List| (|SparseEchelonMatrix| |#1| |#2|)) $))
   (SIGNATURE |makeSystem| ($ (|List| |#2|))) (SIGNATURE |join| ($ $ $))
   (SIGNATURE |insert| ($ (|List| |#2|) $))
   (SIGNATURE |dimension| ((|NonNegativeInteger|) $ (|NonNegativeInteger|)))
   (SIGNATURE |setSimpMode| ((|NonNegativeInteger|) (|NonNegativeInteger|)))
   (SIGNATURE |simplify| ((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $))
   (SIGNATURE |extractSymbol|
    ((|SparseEchelonMatrix| |#1| |#2|) $ (|Boolean|)))
   (SIGNATURE |analyseSymbol|
    ((|Record| (|:| |Rank| (|NonNegativeInteger|))
               (|:| |NumMultVar| (|NonNegativeInteger|))
               (|:| |Betas| (|List| (|NonNegativeInteger|))))
     (|SparseEchelonMatrix| |#1| |#2|)))
   (SIGNATURE |prolongSymbol|
    ((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)))
   (SIGNATURE |prolongMV|
    ((|Record| (|:| |Rank| (|NonNegativeInteger|))
               (|:| |NumMultVar| (|NonNegativeInteger|))
               (|:| |Betas| (|List| (|NonNegativeInteger|))))
     (|Record| (|:| |Rank| (|NonNegativeInteger|))
               (|:| |NumMultVar| (|NonNegativeInteger|))
               (|:| |Betas| (|List| (|NonNegativeInteger|))))))
   (SIGNATURE |project| ($ $ (|NonNegativeInteger|)))
   (SIGNATURE |prolong| ((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $))
   (SIGNATURE |prolong|
    ((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $ (|NonNegativeInteger|)))
   (SIGNATURE |tableau|
    ((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
     (|JetDifferential| |#1| |#2|)))
   (SIGNATURE |tableau|
    ((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
     (|List| (|JetDifferential| |#1| |#2|)))))
  (|JetBundleCategory|) (|JetBundleFunctionCategory| |#1|))
 (T |JetDifferentialEquation|))
(CATEGORY |domain| (SIGNATURE |order| ((|NonNegativeInteger|) $))
 (SIGNATURE |coerce| ((|OutputForm|) $))
 (SIGNATURE |printSys| ((|OutputForm|) (|List| |#2|)))
 (SIGNATURE |display| ((|Void|) $)) (SIGNATURE |copy| ($ $))
 (SIGNATURE |retract| ((|List| |#2|) $))
 (SIGNATURE |jacobiMatrix| ((|List| (|SparseEchelonMatrix| |#1| |#2|)) $))
 (SIGNATURE |makeSystem| ($ (|List| |#2|))) (SIGNATURE |join| ($ $ $))
 (SIGNATURE |insert| ($ (|List| |#2|) $))
 (SIGNATURE |dimension| ((|NonNegativeInteger|) $ (|NonNegativeInteger|)))
 (SIGNATURE |setSimpMode| ((|NonNegativeInteger|) (|NonNegativeInteger|)))
 (SIGNATURE |simplify| ((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $))
 (SIGNATURE |extractSymbol| ((|SparseEchelonMatrix| |#1| |#2|) $ (|Boolean|)))
 (SIGNATURE |analyseSymbol|
  ((|Record| (|:| |Rank| (|NonNegativeInteger|))
             (|:| |NumMultVar| (|NonNegativeInteger|))
             (|:| |Betas| (|List| (|NonNegativeInteger|))))
   (|SparseEchelonMatrix| |#1| |#2|)))
 (SIGNATURE |prolongSymbol|
  ((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)))
 (SIGNATURE |prolongMV|
  ((|Record| (|:| |Rank| (|NonNegativeInteger|))
             (|:| |NumMultVar| (|NonNegativeInteger|))
             (|:| |Betas| (|List| (|NonNegativeInteger|))))
   (|Record| (|:| |Rank| (|NonNegativeInteger|))
             (|:| |NumMultVar| (|NonNegativeInteger|))
             (|:| |Betas| (|List| (|NonNegativeInteger|))))))
 (SIGNATURE |project| ($ $ (|NonNegativeInteger|)))
 (SIGNATURE |prolong| ((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $))
 (SIGNATURE |prolong|
  ((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $ (|NonNegativeInteger|)))
 (SIGNATURE |tableau|
  ((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
   (|JetDifferential| |#1| |#2|)))
 (SIGNATURE |tableau|
  ((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
   (|List| (|JetDifferential| |#1| |#2|)))))
"/git/fricas/src/algebra/JDE.spad"
((|tableau| (*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|List| (|JetDifferential| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 (|tableau| (*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|JetDifferential| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 (|prolong| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *4 *5))
                             (|:| IC (|List| *5))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 (|prolong| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|project| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|prolongMV| (*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Rank| (|NonNegativeInteger|))
                         (|:| |NumMultVar| (|NonNegativeInteger|))
                         (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
   (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|prolongSymbol| (*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 (|analyseSymbol| (*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |Rank| (|NonNegativeInteger|))
                             (|:| |NumMultVar| (|NonNegativeInteger|))
                             (|:| |Betas| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 (|extractSymbol| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 (|simplify| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|setSimpMode| (*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|dimension| (*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|insert| (*1 *1 *2 *1)
           (AND (|isDomain| *2 (|List| *4))
                (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
                (|ofCategory| *3 (|JetBundleCategory|))
                (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 (|join| (*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|makeSystem| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 (|jacobiMatrix| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|SparseEchelonMatrix| *3 *4)))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|retract| (*1 *2 *1)
            (AND (|ofCategory| *3 (|JetBundleCategory|))
                 (|isDomain| *2 (|List| *4))
                 (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
                 (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|copy| (*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 (|display| (*1 *2 *1)
            (AND (|ofCategory| *3 (|JetBundleCategory|))
                 (|isDomain| *2 (|Void|))
                 (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
                 (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|printSys| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 (|coerce| (*1 *2 *1)
           (AND (|ofCategory| *3 (|JetBundleCategory|))
                (|isDomain| *2 (|OutputForm|))
                (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
                (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 (|order| (*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3)))))
((|tableau|
  (((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
    (|List| (|JetDifferential| |#1| |#2|)))
   179)
  (((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
    (|JetDifferential| |#1| |#2|))
   175))
 (|simplify| (((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $) 129))
 (|setSimpMode| (((|NonNegativeInteger|) (|NonNegativeInteger|)) 15))
 (|retract| (((|List| |#2|) $) 43))
 (|prolongSymbol|
  (((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)) 155))
 (|prolongMV|
  (((|Record| (|:| |Rank| (|NonNegativeInteger|))
              (|:| |NumMultVar| (|NonNegativeInteger|))
              (|:| |Betas| (|List| (|NonNegativeInteger|))))
    (|Record| (|:| |Rank| (|NonNegativeInteger|))
              (|:| |NumMultVar| (|NonNegativeInteger|))
              (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   156))
 (|prolong|
  (((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $ (|NonNegativeInteger|))
   138)
  (((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $) 137))
 (|project| (($ $ (|NonNegativeInteger|)) 130))
 (|printSys| (((|OutputForm|) (|List| |#2|)) 56))
 (|order| (((|NonNegativeInteger|) $) 38))
 (|makeSystem| (($ (|List| |#2|)) 91)) (|join| (($ $ $) 98))
 (|jacobiMatrix| (((|List| (|SparseEchelonMatrix| |#1| |#2|)) $) 45))
 (|insert| (($ (|List| |#2|) $) 99))
 (|extractSymbol| (((|SparseEchelonMatrix| |#1| |#2|) $ (|Boolean|)) 142))
 (|display| (((|Void|) $) 68))
 (|dimension| (((|NonNegativeInteger|) $ (|NonNegativeInteger|)) 104))
 (|copy| (($ $) 37)) (|coerce| (((|OutputForm|) $) 57))
 (|analyseSymbol|
  (((|Record| (|:| |Rank| (|NonNegativeInteger|))
              (|:| |NumMultVar| (|NonNegativeInteger|))
              (|:| |Betas| (|List| (|NonNegativeInteger|))))
    (|SparseEchelonMatrix| |#1| |#2|))
   146)))
JDE
((|constructor|
  (NIL
   "\\spadtype{JetDifferentialEquation} provides the basic data structures and procedures for differential equations as needed in the geometric theory. Differential equation means here always a submanifold in the jet bundle. The concrete equations which define this submanifold are called system. In an object of the type \\spadtype{JetDifferentialEquation} much more than only the system is stored. \\spad{D} denotes the class of functions allowed as equations. It is assumed that the \\spad{simplify} procedure of \\spad{D} returns only independent equations and a system with symbol in row echelon form."))
 (|tableau|
  (((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
    (|List| (|JetDifferential| |#1| |#2|)))
   "\\spad{tableau(symb,{} lchi)} computes the extended tableau parametrized by a given list of one-forms.")
  (((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|)
    (|JetDifferential| |#1| |#2|))
   "\\spad{tableau(symb,{} chi)} computes the tableau parametrized by a given one-form."))
 (|prolong|
  (((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $ (|NonNegativeInteger|))
   "\\spad{prolong(de,{} q)} is like \\spad{prolong(de)}. However,{} only equations of lower order than \\spad{q} are prolonged.")
  (((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $)
   "\\spad{prolong(de)} prolongs the differential equation \\spad{de}. Additionally the arising integrability conditions are returned."))
 (|project|
  (($ $ (|NonNegativeInteger|))
   "\\spad{project(de,{} q)} projects the differential equation \\spad{de} of order higher than \\spad{q} into the \\spad{q}\\spad{-}th order jet bundle."))
 (|prolongMV|
  (((|Record| (|:| |Rank| (|NonNegativeInteger|))
              (|:| |NumMultVar| (|NonNegativeInteger|))
              (|:| |Betas| (|List| (|NonNegativeInteger|))))
    (|Record| (|:| |Rank| (|NonNegativeInteger|))
              (|:| |NumMultVar| (|NonNegativeInteger|))
              (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   "\\spad{prolongMV(mv)} calculates the number of multiplicative variables for the prolongation of an involutive symbol."))
 (|prolongSymbol|
  (((|SparseEchelonMatrix| |#1| |#2|) (|SparseEchelonMatrix| |#1| |#2|))
   "\\spad{prolongSymbol(symb)} prolongs directly the symbol \\spad{symb}."))
 (|analyseSymbol|
  (((|Record| (|:| |Rank| (|NonNegativeInteger|))
              (|:| |NumMultVar| (|NonNegativeInteger|))
              (|:| |Betas| (|List| (|NonNegativeInteger|))))
    (|SparseEchelonMatrix| |#1| |#2|))
   "\\spad{analyseSymbol(symb)} computes the multiplicative variables of the symbol \\spad{symb}."))
 (|extractSymbol|
  (((|SparseEchelonMatrix| |#1| |#2|) $ (|Boolean|))
   "\\spad{extractSymbol(de,{} solved?)} computes the symbol of the differential equation \\spad{de}. If \\spad{solved?} is \\spad{true},{} the row echelon form of the symbol is computed at once."))
 (|simplify|
  (((|Record| (|:| |SDe| $) (|:| IC (|List| |#2|))) $)
   "\\spad{simplify(de)} simplifies the equations of each order separately using the procedure \\spad{simplify} from \\spad{D}. Found integrability conditions are also returned separately."))
 (|setSimpMode|
  (((|NonNegativeInteger|) (|NonNegativeInteger|))
   "\\spad{setSimpMode(i)} sets the flag controlling the used simplifications and returns the old value. Current values are: \\spad{i = 0} \\spad{->} No simplification modulo lower order equations. \\spad{i = 1} \\spad{->} Simplification modulo lower order equations. Default is 0."))
 (|dimension|
  (((|NonNegativeInteger|) $ (|NonNegativeInteger|))
   "\\spad{dimension(de,{} q)} computes the dimension of the differential equation \\spad{de} as a submanifold of the \\spad{q}\\spad{-}th order jet bundle. The result is correct only,{} if \\spad{de} is simplified."))
 (|insert|
  (($ (|List| |#2|) $)
   "\\spad{insert(sys,{} de)} adds the system \\spad{sys = 0} to the differential equation \\spad{de}."))
 (|join|
  (($ $ $)
   "\\spad{join(de1,{} de2)} combines \\spad{de1} and \\spad{de2} to a single differential equation."))
 (|makeSystem|
  (($ (|List| |#2|))
   "\\spad{makeSystem(sys)} creates a differential equation from a system."))
 (|jacobiMatrix|
  (((|List| (|SparseEchelonMatrix| |#1| |#2|)) $)
   "\\spad{jacobiMatrix(De)} returns a list of Jacobi matrices sorted by the order of the equations."))
 (|retract|
  (((|List| |#2|) $)
   "\\spad{retract(de)} returns the system defining the differential equation \\spad{de}."))
 (|copy| (($ $) "\\spad{copy(De)} returns a copy of the equation \\spad{De}."))
 (|display|
  (((|Void|) $)
   "\\spad{display(de)} prints all information stored about the differential equation \\spad{de}. This comprises the system ordered by the order of the equations,{} the Jacobi matrices separately for each order and the index of the independent variable with respect to which the equation was lastly differentiated (1 for not prolonged equations)."))
 (|printSys|
  (((|OutputForm|) (|List| |#2|))
   "\\spad{printSys(sys)} writes a list of functions as a vector of equations (with right hand side 0) and coerces the result to \\spadtype{OutputForm}."))
 (|coerce|
  (((|OutputForm|) $)
   "\\spad{coerce(de)} transforms the differential equation \\spad{de} to \\spadtype{OutputForm}."))
 (|order|
  (((|NonNegativeInteger|) $)
   "\\spad{order(de)} yields the order of the differential equation \\spad{de}.")))
(("documentation" 0 12147) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 12143) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 10323) ("modemaps" 0 4177) ("sourceFile" 0 4142)
 ("constructorCategory" 0 2206) ("constructorModemap" 0 62)
 ("constructorKind" 0 53) ("constructorForm" 0 20))