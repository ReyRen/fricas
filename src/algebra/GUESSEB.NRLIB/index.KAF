8525                (|GuessExpBin| F S EXPRR |retract| |coerce|)
|package|
(((|GuessExpBin| |#1| |#2| |#3| |#4| |#5|)
  (CATEGORY |package|
   (SIGNATURE |guessExpRat|
    ((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|))))
   (SIGNATURE |guessBinRat|
    ((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|))))
   (IF (|has| |#1| (|RetractableTo| (|Symbol|)))
       (IF (|has| |#2| (|RetractableTo| (|Symbol|)))
           (PROGN
            (SIGNATURE |guessExpRat|
             ((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
              (|Symbol|)))
            (SIGNATURE |guessBinRat|
             ((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
              (|Symbol|))))
           |noBranch|)
       |noBranch|))
  (|Join| (|Field|) (|PolynomialFactorizationExplicit|)) (|GcdDomain|)
  (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
          (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|))
          (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|))
          (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $))
           (SIGNATURE ^ ($ $ $)) (SIGNATURE |numerator| ($ $))
           (SIGNATURE |denominator| ($ $))
           (SIGNATURE |ground?| ((|Boolean|) $))))
  (|Mapping| |#1| |#3|) (|Mapping| |#3| |#1|))
 (T |GuessExpBin|))
(CATEGORY |package|
 (SIGNATURE |guessExpRat|
  ((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|))))
 (SIGNATURE |guessBinRat|
  ((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|))))
 (IF (|has| |#1| (|RetractableTo| (|Symbol|)))
     (IF (|has| |#2| (|RetractableTo| (|Symbol|)))
         (PROGN
          (SIGNATURE |guessExpRat|
           ((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
            (|Symbol|)))
          (SIGNATURE |guessBinRat|
           ((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
            (|Symbol|))))
         |noBranch|)
     |noBranch|))
"/git/fricas/src/algebra/GUESSEB.spad"
((|guessBinRat| (*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 (|guessExpRat| (*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 (|guessBinRat| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 (|guessExpRat| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $))))))))
((|guessExpRat|
  (((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
    (|Symbol|))
   176
   (AND (|has| |#1| (|RetractableTo| (|Symbol|)))
        (|has| |#2| (|RetractableTo| (|Symbol|)))))
  (((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|))) 174))
 (|guessBinRat|
  (((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
    (|Symbol|))
   201
   (AND (|has| |#1| (|RetractableTo| (|Symbol|)))
        (|has| |#2| (|RetractableTo| (|Symbol|)))))
  (((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|))) 190)))
((AND (|HasCategory| |#1| (LIST '|RetractableTo| '(|Symbol|)))
      (|HasCategory| |#2| (LIST '|RetractableTo| '(|Symbol|)))))
GUESSEB
((|constructor|
  (NIL
   "This package implements guessing GuessExpRat and GuessBinRat functions of guessing package."))
 (|guessBinRat|
  (((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
    (|Symbol|))
   "\\spad{guessBinRat q} returns a guesser that tries to find a function of the form \\spad{n+}->qbinomial(a+b \\spad{n},{} \\spad{n}) \\spad{r}(\\spad{n}),{} where \\spad{r}(\\spad{q^n}) is a \\spad{q}-rational function,{} that fits \\spad{l}.")
  (((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
   "\\spad{guessBinRat(l,{} options)} tries to find a function of the form \\spad{n+}->binomial(a+b \\spad{n},{} \\spad{n}) \\spad{r}(\\spad{n}),{} where \\spad{r}(\\spad{n}) is a rational function,{} that fits \\spad{l}."))
 (|guessExpRat|
  (((|Mapping| (|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
    (|Symbol|))
   "\\spad{guessExpRat q} returns a guesser that tries to find a function of the form \\spad{n+}->(a+b \\spad{q^n})\\spad{^n} \\spad{r}(\\spad{q^n}),{} where \\spad{r}(\\spad{q^n}) is a \\spad{q}-rational function,{} that fits \\spad{l}.")
  (((|List| |#3|) (|List| |#1|) (|List| (|GuessOption|)))
   "\\spad{guessExpRat(l,{} options)} tries to find a function of the form \\spad{n+}->(a+b \\spad{n})\\spad{^n} \\spad{r}(\\spad{n}),{} where \\spad{r}(\\spad{n}) is a rational function,{} that fits \\spad{l}.")))
(("documentation" 0 7157) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 7149) ("predicates" 0 7021) ("superDomain" 0 NIL)
 ("operationAlist" 0 6472) ("modemaps" 0 1995) ("sourceFile" 0 1956)
 ("constructorCategory" 0 1340) ("constructorModemap" 0 75)
 ("constructorKind" 0 65) ("constructorForm" 0 20))