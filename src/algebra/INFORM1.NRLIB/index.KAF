3516                (|InputFormFunctions1| R)
|package|
(((|InputFormFunctions1| |#1|)
  (CATEGORY |package| (SIGNATURE |packageCall| ((|InputForm|) (|Symbol|)))
   (SIGNATURE |packageCall| ((|InputForm|) (|Symbol|) (|List| (|InputForm|))))
   (SIGNATURE |coerceToType| ((|InputForm|) (|InputForm|)))
   (SIGNATURE |atType| ((|InputForm|) (|InputForm|)))
   (SIGNATURE |pretendOfType| ((|InputForm|) (|InputForm|)))
   (SIGNATURE |getType| ((|InputForm|)))
   (SIGNATURE |interpret| (|#1| (|InputForm|))))
  (|Type|))
 (T |InputFormFunctions1|))
(CATEGORY |package| (SIGNATURE |packageCall| ((|InputForm|) (|Symbol|)))
 (SIGNATURE |packageCall| ((|InputForm|) (|Symbol|) (|List| (|InputForm|))))
 (SIGNATURE |coerceToType| ((|InputForm|) (|InputForm|)))
 (SIGNATURE |atType| ((|InputForm|) (|InputForm|)))
 (SIGNATURE |pretendOfType| ((|InputForm|) (|InputForm|)))
 (SIGNATURE |getType| ((|InputForm|)))
 (SIGNATURE |interpret| (|#1| (|InputForm|))))
"/git/fricas/src/algebra/INFORM1.spad"
((|interpret| (*1 *2 *3)
              (AND (|isDomain| *3 (|InputForm|))
                   (|isDomain| *1 (|InputFormFunctions1| *2))
                   (|ofCategory| *2 (|Type|))))
 (|getType| (*1 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 (|pretendOfType| (*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 (|atType| (*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 (|coerceToType| (*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 (|packageCall| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|InputForm|)))
       (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *5))
       (|ofCategory| *5 (|Type|))))
 (|packageCall| (*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|InputForm|))
       (|isDomain| *1 (|InputFormFunctions1| *4)) (|ofCategory| *4 (|Type|)))))
((|pretendOfType| (((|InputForm|) (|InputForm|)) 19))
 (|packageCall| (((|InputForm|) (|Symbol|) (|List| (|InputForm|))) 16)
  (((|InputForm|) (|Symbol|)) 14))
 (|interpret| ((|#1| (|InputForm|)) 24)) (|getType| (((|InputForm|)) 9))
 (|coerceToType| (((|InputForm|) (|InputForm|)) 17))
 (|atType| (((|InputForm|) (|InputForm|)) 18)))
INFORM1
((|constructor| (NIL "Tools for manipulating input forms."))
 (|interpret|
  ((|#1| (|InputForm|))
   "\\spad{interpret(f)} passes \\spad{f} to the interpreter,{} and transforms the result into an object of type \\spad{R}."))
 (|getType|
  (((|InputForm|))
   "\\spad{getType()} returns the input form corresponding to \\spad{R}"))
 (|pretendOfType|
  (((|InputForm|) (|InputForm|))
   "\\spad{pretendOfType(f)} returns the input form corresponding to \\spad{f pretend R}"))
 (|atType|
  (((|InputForm|) (|InputForm|))
   "\\spad{atType(f)} returns the input form corresponding to \\spad{f@R}"))
 (|coerceToType|
  (((|InputForm|) (|InputForm|))
   "\\spad{coerceToType(f)} returns the input form corresponding to f::R"))
 (|packageCall|
  (((|InputForm|) (|Symbol|) (|List| (|InputForm|)))
   "\\spad{packageCall(f,{} l)} returns the input form corresponding to \\spad{f}(\\spad{l}.1,{} \\spad{l}.2,{} ...)\\$\\spad{R}.")
  (((|InputForm|) (|Symbol|))
   "\\spad{packageCall(f)} returns the input form corresponding to \\spad{f}\\$\\spad{R}.")))
(("documentation" 0 2469) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 2461) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2127) ("modemaps" 0 990) ("sourceFile" 0 951)
 ("constructorCategory" 0 546) ("constructorModemap" 0 56)
 ("constructorKind" 0 46) ("constructorForm" 0 20))