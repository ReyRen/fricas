12523               (|FramedNonAssociativeAlgebra| R)
|category|
(((|FramedNonAssociativeAlgebra| |#1|) (|Category|) (|CommutativeRing|))
 (T |FramedNonAssociativeAlgebra|))
(|Join| (|FiniteRankNonAssociativeAlgebra| |t#1|) (|FramedModule| |t#1|)
        (CATEGORY |domain| (SIGNATURE |elt| (|t#1| $ (|Integer|)))
         (SIGNATURE |structuralConstants| ((|Vector| (|Matrix| |t#1|))))
         (SIGNATURE |conditionsForIdempotents| ((|List| (|Polynomial| |t#1|))))
         (SIGNATURE |leftDiscriminant| (|t#1|))
         (SIGNATURE |rightDiscriminant| (|t#1|))
         (SIGNATURE |leftTraceMatrix| ((|Matrix| |t#1|)))
         (SIGNATURE |rightTraceMatrix| ((|Matrix| |t#1|)))
         (SIGNATURE |leftRegularRepresentation| ((|Matrix| |t#1|) $))
         (SIGNATURE |rightRegularRepresentation| ((|Matrix| |t#1|) $))
         (IF (|has| |t#1| (|Field|))
             (PROGN
              (SIGNATURE |leftRankPolynomial|
               ((|SparseUnivariatePolynomial| (|Polynomial| |t#1|))))
              (SIGNATURE |rightRankPolynomial|
               ((|SparseUnivariatePolynomial| (|Polynomial| |t#1|)))))
             |noBranch|)
         (SIGNATURE |apply| ($ (|Matrix| |t#1|) $))))
"/git/fricas/src/algebra/FRNAALG.spad"
((|elt| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|structuralConstants| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *3)))))
 (|conditionsForIdempotents| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *3)))))
 (|leftDiscriminant| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|rightDiscriminant| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 (|leftTraceMatrix| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))
 (|rightTraceMatrix| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))
 (|leftRegularRepresentation| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))
 (|rightRegularRepresentation| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))
 (|leftRankPolynomial| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 (|rightRankPolynomial| (*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 (|apply| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|unit| (((|Union| $ #1="failed")) 6 (|has| |#1| (|IntegralDomain|))))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6))
 (|structuralConstants| (((|Vector| (|Matrix| |#1|)) (|Vector| $)) 6)
  (((|Vector| (|Matrix| |#1|))) 6))
 (|someBasis| (((|Vector| $)) 6))
 (|smaller?| (((|Boolean|) $ $) 6 (|has| |#1| (|Finite|))))
 (|size| (((|NonNegativeInteger|)) 6 (|has| |#1| (|Finite|))))
 (|sample| (($) 6 T CONST))
 (|rightUnits|
  (((|Union| (|Record| (|:| |particular| $) (|:| |basis| (|List| $))) #1#)) 6
   (|has| |#1| (|IntegralDomain|))))
 (|rightUnit| (((|Union| $ #1#)) 6 (|has| |#1| (|IntegralDomain|))))
 (|rightTraceMatrix| (((|Matrix| |#1|) (|Vector| $)) 6) (((|Matrix| |#1|)) 6))
 (|rightTrace| ((|#1| $) 6))
 (|rightRegularRepresentation| (((|Matrix| |#1|) $ (|Vector| $)) 6)
  (((|Matrix| |#1|) $) 6))
 (|rightRecip| (((|Union| $ #1#) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|rightRankPolynomial|
  (((|SparseUnivariatePolynomial| (|Polynomial| |#1|))) 6
   (|has| |#1| (|Field|))))
 (|rightPower| (($ $ (|PositiveInteger|)) 6)) (|rightNorm| ((|#1| $) 6))
 (|rightMinimalPolynomial|
  (((|SparseUnivariatePolynomial| |#1|) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|rightDiscriminant| ((|#1| (|Vector| $)) 6) ((|#1|) 6))
 (|rightCharacteristicPolynomial| (((|SparseUnivariatePolynomial| |#1|) $) 6))
 (|rightAlternative?| (((|Boolean|)) 6))
 (|represents| (($ (|Vector| |#1|) (|Vector| $)) 6) (($ (|Vector| |#1|)) 6))
 (|recip| (((|Union| $ #1#) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|rank| (((|PositiveInteger|)) 6)) (|random| (($) 6 (|has| |#1| (|Finite|))))
 (|powerAssociative?| (((|Boolean|)) 6))
 (|plenaryPower| (($ $ (|PositiveInteger|)) 6))
 (|opposite?| (((|Boolean|) $ $) 6))
 (|noncommutativeJordanAlgebra?| (((|Boolean|)) 6))
 (|lookup| (((|PositiveInteger|) $) 6 (|has| |#1| (|Finite|))))
 (|lieAlgebra?| (((|Boolean|)) 6)) (|lieAdmissible?| (((|Boolean|)) 6))
 (|leftUnits|
  (((|Union| (|Record| (|:| |particular| $) (|:| |basis| (|List| $))) #1#)) 6
   (|has| |#1| (|IntegralDomain|))))
 (|leftUnit| (((|Union| $ #1#)) 6 (|has| |#1| (|IntegralDomain|))))
 (|leftTraceMatrix| (((|Matrix| |#1|) (|Vector| $)) 6) (((|Matrix| |#1|)) 6))
 (|leftTrace| ((|#1| $) 6))
 (|leftRegularRepresentation| (((|Matrix| |#1|) $ (|Vector| $)) 6)
  (((|Matrix| |#1|) $) 6))
 (|leftRecip| (((|Union| $ #1#) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|leftRankPolynomial|
  (((|SparseUnivariatePolynomial| (|Polynomial| |#1|))) 6
   (|has| |#1| (|Field|))))
 (|leftPower| (($ $ (|PositiveInteger|)) 6)) (|leftNorm| ((|#1| $) 6))
 (|leftMinimalPolynomial|
  (((|SparseUnivariatePolynomial| |#1|) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|leftDiscriminant| ((|#1| (|Vector| $)) 6) ((|#1|) 6))
 (|leftCharacteristicPolynomial| (((|SparseUnivariatePolynomial| |#1|) $) 6))
 (|leftAlternative?| (((|Boolean|)) 6)) (|latex| (((|String|) $) 6))
 (|jordanAlgebra?| (((|Boolean|)) 6)) (|jordanAdmissible?| (((|Boolean|)) 6))
 (|jacobiIdentity?| (((|Boolean|)) 6))
 (|index| (($ (|PositiveInteger|)) 6 (|has| |#1| (|Finite|))))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|flexible?| (((|Boolean|)) 6))
 (|enumerate| (((|List| $)) 6 (|has| |#1| (|Finite|))))
 (|elt| ((|#1| $ (|Integer|)) 6))
 (|coordinates| (((|Vector| |#1|) $ (|Vector| $)) 6)
  (((|Matrix| |#1|) (|Vector| $) (|Vector| $)) 6)
  (((|Matrix| |#1|) (|Vector| $)) 6) (((|Vector| |#1|) $) 6))
 (|convert| (((|InputForm|) $) 6 (|has| |#1| (|Finite|)))
            (($ (|Vector| |#1|)) 6) (((|Vector| |#1|) $) 6))
 (|conditionsForIdempotents| (((|List| (|Polynomial| |#1|)) (|Vector| $)) 6)
  (((|List| (|Polynomial| |#1|))) 6))
 (|commutator| (($ $ $) 6)) (|commutative?| (((|Boolean|)) 6))
 (|coerce| (((|OutputForm|) $) 6)) (|basis| (((|Vector| $)) 6))
 (|associatorDependence|
  (((|List| (|Vector| |#1|))) 6 (|has| |#1| (|IntegralDomain|))))
 (|associator| (($ $ $ $) 6)) (|associative?| (((|Boolean|)) 6))
 (|apply| (($ (|Matrix| |#1|) $) 6)) (|antiCommutator| (($ $ $) 6))
 (|antiCommutative?| (((|Boolean|)) 6)) (|antiAssociative?| (((|Boolean|)) 6))
 (|alternative?| (((|Boolean|)) 6)) (^ (($ $ (|PositiveInteger|)) 6))
 (|Zero| (($) 6 T CONST)) (= (((|Boolean|) $ $) 6)) (- (($ $ $) 6) (($ $) 6))
 (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6) (($ $ |#1|) 6) (($ |#1| $) 6)))
FRNAALG
(((|FiniteRankNonAssociativeAlgebra| |#1|) . T) ((|FramedModule| |#1|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|CancellationAbelianMonoid|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|Comparable|) |has| |t#1| (|Finite|))
 ((|ConvertibleTo| (|InputForm|)) |has| |t#1| (|Finite|))
 ((|Finite|) |has| |t#1| (|Finite|))
 ((|FiniteRankNonAssociativeAlgebra| |#1|) . T) ((|FramedModule| |#1|) . T)
 ((|LeftModule| |t#1|) . T) ((|Magma|) . T) ((|Module| |t#1|) . T)
 ((|NonAssociativeAlgebra| |t#1|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|RightModule| |t#2|) . T)
 ((|SetCategory|) . T) ((|unitsKnown|) |has| |t#1| (|IntegralDomain|)))
((|constructor|
  (NIL
   "FramedNonAssociativeAlgebra(\\spad{R}) is a \\spadtype{FiniteRankNonAssociativeAlgebra} (\\spadignore{i.e.} a non associative algebra over \\spad{R} which is a free \\spad{R}-module of finite rank) over a commutative ring \\spad{R} together with a fixed \\spad{R}-module basis."))
 (|apply|
  (($ (|Matrix| |#1|) $)
   "\\spad{apply(m,{} a)} defines a left operation of \\spad{n} by \\spad{n} matrices where \\spad{n} is the rank of the algebra in terms of matrix-vector multiplication,{} this is a substitute for a left module structure. Error: if shape of matrix doesn\\spad{'t} fit."))
 (|rightRankPolynomial|
  (((|SparseUnivariatePolynomial| (|Polynomial| |#1|)))
   "\\spad{rightRankPolynomial()} calculates the right minimal polynomial of the generic element in the algebra,{} defined by the same structural constants over the polynomial ring in symbolic coefficients with respect to the fixed basis."))
 (|leftRankPolynomial|
  (((|SparseUnivariatePolynomial| (|Polynomial| |#1|)))
   "\\spad{leftRankPolynomial()} calculates the left minimal polynomial of the generic element in the algebra,{} defined by the same structural constants over the polynomial ring in symbolic coefficients with respect to the fixed basis."))
 (|rightRegularRepresentation|
  (((|Matrix| |#1|) $)
   "\\spad{rightRegularRepresentation(a)} returns the matrix of the linear map defined by right multiplication by \\spad{a} with respect to the fixed \\spad{R}-module basis."))
 (|leftRegularRepresentation|
  (((|Matrix| |#1|) $)
   "\\spad{leftRegularRepresentation(a)} returns the matrix of the linear map defined by left multiplication by \\spad{a} with respect to the fixed \\spad{R}-module basis."))
 (|rightTraceMatrix|
  (((|Matrix| |#1|))
   "\\spad{rightTraceMatrix()} is the \\spad{n}-by-\\spad{n} matrix whose element at the \\spad{i}\\spad{-}th row and \\spad{j}\\spad{-}th column is given by the right trace of the product \\spad{vi*vj},{} where \\spad{v1},{} ...,{} \\spad{vn} are the elements of the fixed \\spad{R}-module basis."))
 (|leftTraceMatrix|
  (((|Matrix| |#1|))
   "\\spad{leftTraceMatrix()} is the \\spad{n}-by-\\spad{n} matrix whose element at the \\spad{i}\\spad{-}th row and \\spad{j}\\spad{-}th column is given by left trace of the product \\spad{vi*vj},{} where \\spad{v1},{} ...,{} \\spad{vn} are the elements of the fixed \\spad{R}-module basis."))
 (|rightDiscriminant|
  ((|#1|)
   "\\spad{rightDiscriminant()} returns the determinant of the \\spad{n}-by-\\spad{n} matrix whose element at the \\spad{i}\\spad{-}th row and \\spad{j}\\spad{-}th column is given by the right trace of the product \\spad{vi*vj},{} where \\spad{v1},{} ...,{} \\spad{vn} are the elements of the fixed \\spad{R}-module basis. Note: the same as \\spad{determinant(rightTraceMatrix())}."))
 (|leftDiscriminant|
  ((|#1|)
   "\\spad{leftDiscriminant()} returns the determinant of the \\spad{n}-by-\\spad{n} matrix whose element at the \\spad{i}\\spad{-}th row and \\spad{j}\\spad{-}th column is given by the left trace of the product \\spad{vi*vj},{} where \\spad{v1},{} ...,{} \\spad{vn} are the elements of the fixed \\spad{R}-module basis. Note: the same as \\spad{determinant(leftTraceMatrix())}."))
 (|conditionsForIdempotents|
  (((|List| (|Polynomial| |#1|)))
   "\\spad{conditionsForIdempotents()} determines a complete list of polynomial equations for the coefficients of idempotents with respect to the fixed \\spad{R}-module basis."))
 (|structuralConstants|
  (((|Vector| (|Matrix| |#1|)))
   "\\spad{structuralConstants()} calculates the structural constants \\spad{[(gammaijk) for k in 1..rank()]} defined by \\spad{\\spad{vi} * vj = gammaij1 * v1 + ... + gammaijn * vn},{} where \\spad{v1},{} ...,{} \\spad{vn} is the fixed \\spad{R}-module basis."))
 (|elt|
  ((|#1| $ (|Integer|))
   "\\spad{elt(a,{} i)} returns the \\spad{i}-th coefficient of \\spad{a} with respect to the fixed \\spad{R}-module basis.")))
(("documentation" 0 8576) ("ancestors" 0 7896) ("parents" 0 7819)
 ("abbreviation" 0 7811) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 3383) ("modemaps" 0 1231) ("sourceFile" 0 1192)
 ("constructorCategory" 0 174) ("constructorModemap" 0 65)
 ("constructorKind" 0 54) ("constructorForm" 0 20))