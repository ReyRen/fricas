9997                (|InnerPrimeField| |p|)
|domain|
(((|InnerPrimeField| |#1|)
  (|Join| (|FiniteFieldCategory|) (|FiniteAlgebraicExtensionField| $)
          (|ConvertibleTo| (|Integer|))
          (CATEGORY |domain| (SIGNATURE |sqrt| ($ $))
           (SIGNATURE |quadraticNonResidue| ($))))
  (|PositiveInteger|))
 (T |InnerPrimeField|))
(|Join| (|FiniteFieldCategory|) (|FiniteAlgebraicExtensionField| $)
        (|ConvertibleTo| (|Integer|))
        (CATEGORY |domain| (SIGNATURE |sqrt| ($ $))
         (SIGNATURE |quadraticNonResidue| ($))))
"/git/fricas/src/algebra/IPF.spad"
((|sqrt| (*1 *1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|))))
 (|quadraticNonResidue| (*1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|)))))
((~= (((|Boolean|) $ $) NIL)) (|zero?| (((|Boolean|) $) 47))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) NIL))
 (|unitCanonical| (($ $) NIL)) (|unit?| (((|Boolean|) $) NIL))
 (|transcendent?| (((|Boolean|) $) NIL))
 (|transcendenceDegree| (((|NonNegativeInteger|)) NIL))
 (|trace| (($ $ (|PositiveInteger|)) NIL (|has| $ (|Finite|))) (($ $) NIL))
 (|tableForDiscreteLogarithm|
  (((|Table| (|PositiveInteger|) (|NonNegativeInteger|)) (|Integer|)) 76))
 (|subtractIfCan| (((|Union| $ "failed") $ $) NIL))
 (|squareFreePolynomial|
  (((|Factored| (|SparseUnivariatePolynomial| $))
    (|SparseUnivariatePolynomial| $))
   NIL))
 (|squareFreePart| (($ $) NIL)) (|squareFree| (((|Factored| $) $) NIL))
 (|sqrt| (($ $) 55))
 (|solveLinearPolynomialEquation|
  (((|Union| (|List| (|SparseUnivariatePolynomial| $)) #1="failed")
    (|List| (|SparseUnivariatePolynomial| $)) (|SparseUnivariatePolynomial| $))
   NIL))
 (|smaller?| (((|Boolean|) $ $) NIL)) (|sizeLess?| (((|Boolean|) $ $) NIL))
 (|size| (((|NonNegativeInteger|)) NIL)) (|sample| (($) NIL T CONST))
 (|rightRecip| (((|Union| $ #2="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|retractIfCan| (((|Union| $ "failed") $) 88)) (|retract| (($ $) 87))
 (|represents| (($ (|Vector| $)) 86))
 (|representationType| (((|Union| "prime" "polynomial" "normal" "cyclic")) 73))
 (|rem| (($ $ $) NIL)) (|recip| (((|Union| $ #2#) $) 66)) (|random| (($) NIL))
 (|quo| (($ $ $) NIL)) (|quadraticNonResidue| (($) 46))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)) NIL))
 (|primitiveElement| (($) 32)) (|primitive?| (((|Boolean|) $) NIL))
 (|primeFrobenius| (($ $) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|prime?| (((|Boolean|) $) NIL))
 (|order| (((|OnePointCompletion| (|PositiveInteger|)) $) NIL)
  (((|PositiveInteger|) $) 20))
 (|opposite?| (((|Boolean|) $ $) NIL)) (|one?| (((|Boolean|) $) NIL))
 (|normalElement| (($) 68 (|has| $ (|Finite|))))
 (|normal?| (((|Boolean|) $) NIL (|has| $ (|Finite|))))
 (|norm| (($ $ (|PositiveInteger|)) NIL (|has| $ (|Finite|))) (($ $) NIL))
 (|nextItem| (((|Union| $ "failed") $) NIL))
 (|multiEuclidean| (((|Union| (|List| $) #3="failed") (|List| $) $) NIL))
 (|minimalPolynomial|
  (((|SparseUnivariatePolynomial| $) $ (|PositiveInteger|)) NIL
   (|has| $ (|Finite|)))
  (((|SparseUnivariatePolynomial| $) $) 96))
 (|lookup| (((|PositiveInteger|) $) 29))
 (|linearAssociatedOrder|
  (((|SparseUnivariatePolynomial| $) $) NIL (|has| $ (|Finite|))))
 (|linearAssociatedLog|
  (((|Union| (|SparseUnivariatePolynomial| $) "failed") $ $) NIL
   (|has| $ (|Finite|)))
  (((|SparseUnivariatePolynomial| $) $) NIL (|has| $ (|Finite|))))
 (|linearAssociatedExp|
  (($ $ (|SparseUnivariatePolynomial| $)) NIL (|has| $ (|Finite|))))
 (|leftRecip| (((|Union| $ #2#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) NIL))
 (|lcm| (($ $ $) NIL) (($ (|List| $)) NIL)) (|latex| (((|String|) $) NIL))
 (|inv| (($ $) NIL)) (|init| (($) NIL T CONST))
 (|index| (($ (|PositiveInteger|)) 77)) (|inGroundField?| (((|Boolean|) $) 80))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|generator| (($) 56 (|has| $ (|Finite|))))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   NIL))
 (|gcd| (($ $ $) NIL) (($ (|List| $)) NIL))
 (|factorsOfCyclicGroupSize|
  (((|List|
     (|Record| (|:| |factor| (|Integer|))
               (|:| |exponent| (|NonNegativeInteger|)))))
   71))
 (|factorSquareFreePolynomial|
  (((|Factored| (|SparseUnivariatePolynomial| $))
    (|SparseUnivariatePolynomial| $))
   NIL))
 (|factorPolynomial|
  (((|Factored| (|SparseUnivariatePolynomial| $))
    (|SparseUnivariatePolynomial| $))
   NIL))
 (|factor| (((|Factored| $) $) NIL))
 (|extensionDegree| (((|PositiveInteger|)) 79)
  (((|OnePointCompletion| (|PositiveInteger|))) NIL))
 (|extendedEuclidean|
  (((|Record| (|:| |coef1| $) (|:| |coef2| $) (|:| |generator| $)) $ $) NIL)
  (((|Union| (|Record| (|:| |coef1| $) (|:| |coef2| $)) #3#) $ $ $) NIL))
 (|exquo| (((|Union| $ "failed") $ $) NIL))
 (|expressIdealMember| (((|Union| (|List| $) "failed") (|List| $) $) NIL))
 (|euclideanSize| (((|NonNegativeInteger|) $) NIL))
 (|enumerate| (((|List| $)) NIL))
 (|divide| (((|Record| (|:| |quotient| $) (|:| |remainder| $)) $ $) NIL))
 (|discreteLog| (((|Union| (|NonNegativeInteger|) "failed") $ $) NIL)
  (((|NonNegativeInteger|) $) NIL))
 (|dimension| (((|CardinalNumber|)) NIL))
 (|differentiate| (($ $ (|NonNegativeInteger|)) NIL) (($ $) NIL))
 (|degree| (((|PositiveInteger|) $) 78)
  (((|OnePointCompletion| (|PositiveInteger|)) $) NIL))
 (|definingPolynomial| (((|SparseUnivariatePolynomial| $)) 95))
 (|createPrimitiveElement| (($) 28))
 (|createNormalElement| (($) 69 (|has| $ (|Finite|))))
 (|coordinates| (((|Matrix| $) (|Vector| $)) NIL) (((|Vector| $) $) 84))
 (|convert| (((|InputForm|) $) NIL) (((|Integer|) $) 48))
 (|conditionP|
  (((|Union| (|Vector| $) #1#) (|Matrix| $)) NIL
   (|has| $ (|CharacteristicNonZero|))))
 (|commutator| (($ $ $) NIL))
 (|coerce| (((|OutputForm|) $) NIL) (($ (|Integer|)) 45) (($ $) NIL)
           (($ (|Fraction| (|Integer|))) NIL))
 (|charthRoot| (((|Union| $ "failed") $) NIL) (($ $) 97))
 (|characteristic| (((|NonNegativeInteger|)) 70))
 (|basis| (((|Vector| $) (|PositiveInteger|)) 90) (((|Vector| $)) 89))
 (|associator| (($ $ $ $) NIL)) (|associates?| (((|Boolean|) $ $) NIL))
 (|antiCommutator| (($ $ $) NIL)) (|annihilate?| (((|Boolean|) $ $) NIL))
 (|algebraic?| (((|Boolean|) $) NIL))
 (^ (($ $ (|PositiveInteger|)) 53) (($ $ (|NonNegativeInteger|)) 50)
  (($ $ (|Integer|)) 33))
 (|Zero| (($) 16 T CONST)) (|One| (($) 36 T CONST))
 (|Frobenius| (($ $ (|NonNegativeInteger|)) NIL (|has| $ (|Finite|)))
  (($ $) NIL (|has| $ (|Finite|))))
 (D (($ $ (|NonNegativeInteger|)) NIL) (($ $) NIL)) (= (((|Boolean|) $ $) 18))
 (/ (($ $ $) 54)) (- (($ $ $) NIL) (($ $) 51)) (+ (($ $ $) NIL))
 (* (($ (|PositiveInteger|) $) NIL) (($ $ $) 39) (($ (|Integer|) $) NIL)
    (($ (|NonNegativeInteger|) $) NIL) (($ $ (|Fraction| (|Integer|))) NIL)
    (($ (|Fraction| (|Integer|)) $) NIL)))
((|HasCategory| $ '(|CharacteristicNonZero|)) (|HasCategory| $ '(|Finite|)))
IPF
(((|FiniteFieldCategory|) . T) ((|FiniteAlgebraicExtensionField| $) . T)
 ((|ConvertibleTo| (|Integer|)) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) . T) ((|Algebra| $) . T)
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) . T) ((|CharacteristicNonZero|) . T)
 ((|CharacteristicZero|) |has| |t#1| (|CharacteristicZero|))
 ((|CoercibleTo| (|OutputForm|)) . T) ((|CommutativeRing|) . T)
 ((|CommutativeStar|) . T) ((|Comparable|) . T)
 ((|ConvertibleTo| (|Integer|)) . T) ((|ConvertibleTo| (|InputForm|)) . T)
 ((|DifferentialRing|) . T) ((|DivisionRing|) . T) ((|EntireRing|) . T)
 ((|EuclideanDomain|) . T) ((|ExtensionField| |t#1|) . T) ((|Field|) . T)
 ((|FieldOfPrimeCharacteristic|) . T) ((|Finite|) . T)
 ((|FiniteAlgebraicExtensionField| $) . T) ((|FiniteFieldCategory|) . T)
 ((|GcdDomain|) . T) ((|IntegralDomain|) . T) ((|LeftModule| |t#1|) . T)
 ((|LeftOreRing|) . T) ((|Magma|) . T) ((|MagmaWithUnit|) . T)
 ((|Module| |t#1|) . T) ((|Monoid|) . T) ((|NonAssociativeRing|) . T)
 ((|NonAssociativeRng|) . T) ((|NonAssociativeSemiRing|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|PolynomialFactorizationExplicit|) . T)
 ((|PrincipalIdealDomain|) . T) ((|RetractableTo| |t#1|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|StepThrough|) . T) ((|TwoSidedRecip|) . T)
 ((|UniqueFactorizationDomain|) . T) ((|VectorSpace| |t#1|) . T)
 ((|canonicalUnitNormal|) . T) ((|canonicalsClosed|) . T)
 ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "InnerPrimeField(\\spad{p}) implements the field with \\spad{p} elements by using IntegerMod \\spad{p}. Note: argument \\spad{p} MUST be a prime (this domain does not check). See \\spadtype{PrimeField} for a domain that does check. In addition to the inherited operations of IntegerMod \\spad{p},{} the domain provides exploits the structure of the cyclic group of its invertible elements. It stores a primitive element \\spad{w},{} \\spad{i}.a. generator of this group and it stores a logarithm table for \\spad{w} as soon as this is required. sqrt was added in 2018."))
 (|quadraticNonResidue|
  (($)
   "\\spad{quadraticNonResidue()} computes the smallest non negative integer,{} which represents a quadratic non residue."))
 (|sqrt|
  (($ $)
   "\\spad{sqrt(x)} computes one \\spad{y} such that \\spad{y^2} = \\spad{x},{} error if there is no square root,{} \\spadignore{i.e.} jacobi(\\spad{x},{}\\spad{p}) = \\spad{-1}. Implementation according to http://www.staff.uni-mainz.de/pommeren/Cryptology/Asymmetric/5_NTh/")))
(("documentation" 0 8946) ("ancestors" 0 7380) ("parents" 0 7269)
 ("abbreviation" 0 7265) ("predicates" 0 7188) ("superDomain" 0 NIL)
 ("operationAlist" 0 815) ("modemaps" 0 584) ("sourceFile" 0 549)
 ("constructorCategory" 0 342) ("constructorModemap" 0 53)
 ("constructorKind" 0 44) ("constructorForm" 0 20))