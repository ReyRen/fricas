11070               (|ExpressionSpaceODESolver| R F)
|package|
(((|ExpressionSpaceODESolver| |#1| |#2|)
  (CATEGORY |package|
   (SIGNATURE |seriesSolve|
    ((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
     (|Equation| |#2|)))
   (SIGNATURE |seriesSolve|
    ((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
     (|List| |#2|)))
   (SIGNATURE |seriesSolve|
    ((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
     (|Equation| |#2|) (|List| (|Equation| |#2|))))
   (SIGNATURE |seriesSolve|
    ((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
     (|Equation| |#2|) (|List| |#2|)))
   (SIGNATURE |seriesSolve|
    ((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
     (|List| |#2|)))
   (SIGNATURE |seriesSolve|
    ((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
     (|List| (|Equation| |#2|))))
   (SIGNATURE |seriesSolve|
    ((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|) |#2|))
   (SIGNATURE |seriesSolve|
    ((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) |#2|))
   (SIGNATURE |seriesSolve|
    ((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|Equation| |#2|)))
   (SIGNATURE |seriesSolve|
    ((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|List| |#2|))))
  (|Join| (|Comparable|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))
  (|FunctionSpace| |#1|))
 (T |ExpressionSpaceODESolver|))
(CATEGORY |package|
 (SIGNATURE |seriesSolve|
  ((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
   (|Equation| |#2|)))
 (SIGNATURE |seriesSolve|
  ((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
   (|List| |#2|)))
 (SIGNATURE |seriesSolve|
  ((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
   (|Equation| |#2|) (|List| (|Equation| |#2|))))
 (SIGNATURE |seriesSolve|
  ((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
   (|Equation| |#2|) (|List| |#2|)))
 (SIGNATURE |seriesSolve|
  ((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
   (|List| |#2|)))
 (SIGNATURE |seriesSolve|
  ((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
   (|List| (|Equation| |#2|))))
 (SIGNATURE |seriesSolve|
  ((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|) |#2|))
 (SIGNATURE |seriesSolve|
  ((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) |#2|))
 (SIGNATURE |seriesSolve|
  ((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|Equation| |#2|)))
 (SIGNATURE |seriesSolve|
  ((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|List| |#2|))))
"/git/fricas/src/algebra/EXPRODE.spad"
((|seriesSolve| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *3))))
 (|seriesSolve| (*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 (|seriesSolve| (*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 (|seriesSolve| (*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *5)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *5 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *5))))
 (|seriesSolve| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *6 (|List| (|Equation| *8)))
       (|ofCategory| *8 (|FunctionSpace| *7)) (|isDomain| *5 (|Equation| *8))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 (|seriesSolve| (*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 (|seriesSolve| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|Equation| *8)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *8)) (|isDomain| *6 (|List| *8))
       (|ofCategory| *8 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 (|seriesSolve| (*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| (|Equation| *7)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 (|seriesSolve| (*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 (|seriesSolve| (*1 *2 *3 *4 *3 *3)
  (AND (|isDomain| *3 (|Equation| *6)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *5 *6)))))
((|seriesSolve|
  (((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|List| |#2|)) 83)
  (((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|Equation| |#2|)) 79)
  (((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) |#2|) 81)
  (((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|) |#2|) 82)
  (((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
    (|List| (|Equation| |#2|)))
   75)
  (((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
    (|List| |#2|))
   77)
  (((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
    (|Equation| |#2|) (|List| |#2|))
   78)
  (((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
    (|Equation| |#2|) (|List| (|Equation| |#2|)))
   76)
  (((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
    (|List| |#2|))
   84)
  (((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
    (|Equation| |#2|))
   80)))
EXPRODE
((|constructor| (NIL "Taylor series solutions of explicit ODE\\spad{'s}."))
 (|seriesSolve|
  (((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|List| |#2|))
   "\\spad{seriesSolve(eq,{} y,{} x = a,{} [b0,{} ...,{} bn])} is equivalent to \\spad{seriesSolve(eq = 0,{} y,{} x = a,{} [b0,{} ...,{} b(n-1)])}.")
  (((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) (|Equation| |#2|))
   "\\spad{seriesSolve(eq,{} y,{} x = a,{} y a = b)} is equivalent to \\spad{seriesSolve(eq=0,{} y,{} x=a,{} y a = b)}.")
  (((|Any|) |#2| (|BasicOperator|) (|Equation| |#2|) |#2|)
   "\\spad{seriesSolve(eq,{} y,{} x = a,{} b)} is equivalent to \\spad{seriesSolve(eq = 0,{} y,{} x = a,{} y a = b)}.")
  (((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|) |#2|)
   "\\spad{seriesSolve(eq,{} y,{} x=a,{} b)} is equivalent to \\spad{seriesSolve(eq,{} y,{} x=a,{} y a = b)}.")
  (((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
    (|List| (|Equation| |#2|)))
   "\\spad{seriesSolve([eq1,{} ...,{} eqn],{} [y1,{} ...,{} yn],{} x = a,{} [y1 a = b1,{} ...,{} yn a = bn])} is equivalent to \\spad{seriesSolve([eq1=0,{} ...,{} eqn=0],{} [y1,{} ...,{} yn],{} x = a,{} [y1 a = b1,{} ...,{} yn a = bn])}.")
  (((|Any|) (|List| |#2|) (|List| (|BasicOperator|)) (|Equation| |#2|)
    (|List| |#2|))
   "\\spad{seriesSolve([eq1,{} ...,{} eqn],{} [y1,{} ...,{} yn],{} x=a,{} [b1,{} ...,{} bn])} is equivalent to \\spad{seriesSolve([eq1=0,{} ...,{} eqn=0],{} [y1,{} ...,{} yn],{} x=a,{} [b1,{} ...,{} bn])}.")
  (((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
    (|Equation| |#2|) (|List| |#2|))
   "\\spad{seriesSolve([eq1,{} ...,{} eqn],{} [y1,{} ...,{} yn],{} x=a,{} [b1,{} ...,{} bn])} is equivalent to \\spad{seriesSolve([eq1,{} ...,{} eqn],{} [y1,{} ...,{} yn],{} x = a,{} [y1 a = b1,{} ...,{} yn a = bn])}.")
  (((|Any|) (|List| (|Equation| |#2|)) (|List| (|BasicOperator|))
    (|Equation| |#2|) (|List| (|Equation| |#2|)))
   "\\spad{seriesSolve([eq1,{} ...,{} eqn],{} [y1,{} ...,{} yn],{} x = a,{} [y1 a = b1,{} ...,{} yn a = bn])} returns a taylor series solution of \\spad{[eq1,{} ...,{} eqn]} around \\spad{x = a} with initial conditions \\spad{\\spad{yi}(a) = \\spad{bi}}. Note: eqi must be of the form \\spad{\\spad{fi}(x,{} y1 x,{} y2 x,{} ...,{} yn x) y1'(x) + \\spad{gi}(x,{} y1 x,{} y2 x,{} ...,{} yn x) = h(x,{} y1 x,{} y2 x,{} ...,{} yn x)}.")
  (((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
    (|List| |#2|))
   "\\spad{seriesSolve(eq,{} y,{} x=a,{} [b0,{} ...,{} b(n-1)])} returns a Taylor series solution of \\spad{eq} around \\spad{x = a} with initial conditions \\spad{y(a) = b0},{} \\spad{y'(a) = b1},{} \\spad{y''(a) = b2},{} ...,{} \\spad{y(n-1)(a) = b(n-1)} \\spad{eq} must be of the form \\spad{f(x,{} y x,{} y'(x),{} ...,{} y(n-1)(x)) y(n)(x) + g(x,{} y x,{} y'(x),{} ...,{} y(n-1)(x)) = h(x,{} y x,{} y'(x),{} ...,{} y(n-1)(x))}.")
  (((|Any|) (|Equation| |#2|) (|BasicOperator|) (|Equation| |#2|)
    (|Equation| |#2|))
   "\\spad{seriesSolve(eq,{} y,{} x=a,{} y a = b)} returns a Taylor series solution of \\spad{eq} around \\spad{x} = a with initial condition \\spad{y(a) = b}. Note: \\spad{eq} must be of the form \\spad{f(x,{} y x) y'(x) + g(x,{} y x) = h(x,{} y x)}.")))
(("documentation" 0 7826) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 7818) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 6885) ("modemaps" 0 2597) ("sourceFile" 0 2558)
 ("constructorCategory" 0 1426) ("constructorModemap" 0 63)
 ("constructorKind" 0 53) ("constructorForm" 0 20))