18706               (|GenerateUnivariatePowerSeries| R FE)
|package|
(((|GenerateUnivariatePowerSeries| |#1| |#2|)
  (CATEGORY |package|
   (SIGNATURE |taylor|
    ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)))
   (SIGNATURE |taylor| ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)))
   (SIGNATURE |taylor|
    ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
     (|UniversalSegment| (|NonNegativeInteger|))))
   (SIGNATURE |taylor|
    ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
     (|UniversalSegment| (|NonNegativeInteger|))))
   (SIGNATURE |laurent|
    ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
     (|UniversalSegment| (|Integer|))))
   (SIGNATURE |laurent|
    ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
     (|UniversalSegment| (|Integer|))))
   (SIGNATURE |puiseux|
    ((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
     (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|))))
   (SIGNATURE |puiseux|
    ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
     (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|))))
   (SIGNATURE |series|
    ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)))
   (SIGNATURE |series| ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)))
   (SIGNATURE |series|
    ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
     (|UniversalSegment| (|Integer|))))
   (SIGNATURE |series|
    ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
     (|UniversalSegment| (|Integer|))))
   (SIGNATURE |series|
    ((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
     (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|))))
   (SIGNATURE |series|
    ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
     (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))))
  (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| (|Integer|))
          (|LinearlyExplicitOver| (|Integer|)))
  (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|)
          (|FunctionSpace| |#1|)))
 (T |GenerateUnivariatePowerSeries|))
(CATEGORY |package|
 (SIGNATURE |taylor| ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)))
 (SIGNATURE |taylor| ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)))
 (SIGNATURE |taylor|
  ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
   (|UniversalSegment| (|NonNegativeInteger|))))
 (SIGNATURE |taylor|
  ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
   (|UniversalSegment| (|NonNegativeInteger|))))
 (SIGNATURE |laurent|
  ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
   (|UniversalSegment| (|Integer|))))
 (SIGNATURE |laurent|
  ((|Any|) |#2| (|Symbol|) (|Equation| |#2|) (|UniversalSegment| (|Integer|))))
 (SIGNATURE |puiseux|
  ((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
   (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|))))
 (SIGNATURE |puiseux|
  ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
   (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|))))
 (SIGNATURE |series| ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)))
 (SIGNATURE |series| ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)))
 (SIGNATURE |series|
  ((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
   (|UniversalSegment| (|Integer|))))
 (SIGNATURE |series|
  ((|Any|) |#2| (|Symbol|) (|Equation| |#2|) (|UniversalSegment| (|Integer|))))
 (SIGNATURE |series|
  ((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
   (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|))))
 (SIGNATURE |series|
  ((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
   (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))))
"/git/fricas/src/algebra/GENUPS.spad"
((|series| (*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 (|series| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 (|series| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 (|series| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 (|series| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 (|series| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 (|puiseux| (*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 (|puiseux| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 (|laurent| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 (|laurent| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 (|taylor| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 (|taylor| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 (|taylor| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 (|taylor| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6)))))
((|taylor|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
    (|UniversalSegment| (|NonNegativeInteger|)))
   43)
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
    (|UniversalSegment| (|NonNegativeInteger|)))
   42)
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)) 36)
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)) 28))
 (|series|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   81)
  (((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   80)
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|) (|UniversalSegment| (|Integer|)))
   79)
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
    (|UniversalSegment| (|Integer|)))
   78)
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)) 73)
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)) 72))
 (|puiseux|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   67)
  (((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   65))
 (|laurent|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|) (|UniversalSegment| (|Integer|)))
   49)
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
    (|UniversalSegment| (|Integer|)))
   48)))
GENUPS
((|constructor|
  (NIL
   "\\spadtype{GenerateUnivariatePowerSeries} provides functions that create power series from explicit formulas for their \\spad{n}th coefficient."))
 (|series|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   "\\spad{series(a(n),{} n,{} x = a,{} r0..,{} r)} returns \\spad{sum(n = r0,{} r0 + r,{} r0 + 2*r...,{} a(n) * (x - a)^n)}; \\spad{series(a(n),{} n,{} x = a,{} r0..r1,{} r)} returns \\spad{sum(n = r0 + k*r while n <= r1,{} a(n) * (x - a)^n)}.")
  (((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   "\\spad{series(n +-> a(n),{} x = a,{} r0..,{} r)} returns \\spad{sum(n = r0,{} r0 + r,{} r0 + 2*r...,{} a(n) * (x - a)^n)}; \\spad{series(n +-> a(n),{} x = a,{} r0..r1,{} r)} returns \\spad{sum(n = r0 + k*r while n <= r1,{} a(n) * (x - a)^n)}.")
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|) (|UniversalSegment| (|Integer|)))
   "\\spad{series(a(n),{} n,{} x=a,{} n0..)} returns \\spad{sum(n = n0..,{} a(n) * (x - a)^n)}; \\spad{series(a(n),{} n,{} x=a,{} n0..n1)} returns \\spad{sum(n = n0..n1,{} a(n) * (x - a)^n)}.")
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
    (|UniversalSegment| (|Integer|)))
   "\\spad{series(n +-> a(n),{} x = a,{} n0..)} returns \\spad{sum(n = n0..,{} a(n) * (x - a)^n)}; \\spad{series(n +-> a(n),{} x = a,{} n0..n1)} returns \\spad{sum(n = n0..n1,{} a(n) * (x - a)^n)}.")
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|))
   "\\spad{series(a(n),{} n,{} x = a)} returns \\spad{sum(n = 0..,{} a(n)*(x-a)^n)}.")
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|))
   "\\spad{series(n +-> a(n),{} x = a)} returns \\spad{sum(n = 0..,{} a(n)*(x-a)^n)}."))
 (|puiseux|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   "\\spad{puiseux(a(n),{} n,{} x = a,{} r0..,{} r)} returns \\spad{sum(n = r0,{} r0 + r,{} r0 + 2*r...,{} a(n) * (x - a)^n)}; \\spad{puiseux(a(n),{} n,{} x = a,{} r0..r1,{} r)} returns \\spad{sum(n = r0 + k*r while n <= r1,{} a(n) * (x - a)^n)}.")
  (((|Any|) (|Mapping| |#2| (|Fraction| (|Integer|))) (|Equation| |#2|)
    (|UniversalSegment| (|Fraction| (|Integer|))) (|Fraction| (|Integer|)))
   "\\spad{puiseux(n +-> a(n),{} x = a,{} r0..,{} r)} returns \\spad{sum(n = r0,{} r0 + r,{} r0 + 2*r...,{} a(n) * (x - a)^n)}; \\spad{puiseux(n +-> a(n),{} x = a,{} r0..r1,{} r)} returns \\spad{sum(n = r0 + k*r while n <= r1,{} a(n) * (x - a)^n)}."))
 (|laurent|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|) (|UniversalSegment| (|Integer|)))
   "\\spad{laurent(a(n),{} n,{} x=a,{} n0..)} returns \\spad{sum(n = n0..,{} a(n) * (x - a)^n)}; \\spad{laurent(a(n),{} n,{} x=a,{} n0..n1)} returns \\spad{sum(n = n0..n1,{} a(n) * (x - a)^n)}.")
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
    (|UniversalSegment| (|Integer|)))
   "\\spad{laurent(n +-> a(n),{} x = a,{} n0..)} returns \\spad{sum(n = n0..,{} a(n) * (x - a)^n)}; \\spad{laurent(n +-> a(n),{} x = a,{} n0..n1)} returns \\spad{sum(n = n0..n1,{} a(n) * (x - a)^n)}."))
 (|taylor|
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|)
    (|UniversalSegment| (|NonNegativeInteger|)))
   "\\spad{taylor(a(n),{} n,{} x = a,{} n0..)} returns \\spad{sum(n = n0..,{} a(n)*(x-a)^n)}; \\spad{taylor(a(n),{} n,{} x = a,{} n0..n1)} returns \\spad{sum(n = n0..,{} a(n)*(x-a)^n)}.")
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|)
    (|UniversalSegment| (|NonNegativeInteger|)))
   "\\spad{taylor(n +-> a(n),{} x = a,{} n0..)} returns \\spad{sum(n=n0..,{} a(n)*(x-a)^n)}; \\spad{taylor(n +-> a(n),{} x = a,{} n0..n1)} returns \\spad{sum(n = n0..,{} a(n)*(x-a)^n)}.")
  (((|Any|) |#2| (|Symbol|) (|Equation| |#2|))
   "\\spad{taylor(a(n),{} n,{} x = a)} returns \\spad{sum(n = 0..,{} a(n)*(x-a)^n)}.")
  (((|Any|) (|Mapping| |#2| (|Integer|)) (|Equation| |#2|))
   "\\spad{taylor(n +-> a(n),{} x = a)} returns \\spad{sum(n = 0..,{} a(n)*(x-a)^n)}.")))
(("documentation" 0 14656) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 14649) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 13201) ("modemaps" 0 3734) ("sourceFile" 0 3696)
 ("constructorCategory" 0 2082) ("constructorModemap" 0 69)
 ("constructorKind" 0 59) ("constructorForm" 0 20))