12389               (|ListAggregate| S)
|category|
(((|ListAggregate| |#1|) (|Category|) (|Type|)) (T |ListAggregate|))
(|Join| (|StreamAggregate| |t#1|) (|FiniteLinearAggregate| |t#1|)
        (|ExtensibleLinearAggregate| |t#1|)
        (CATEGORY |domain| (SIGNATURE |list| ($ |t#1|))))
"/git/fricas/src/algebra/LSAGG.spad"
((|list| (*1 *1 *2)
  (AND (|ofCategory| *1 (|ListAggregate| *2)) (|ofCategory| *2 (|Type|)))))
((~=
  (((|Boolean|) $ $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|))
       (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))))
 (|value| ((|#1| $) 6))
 (|trim|
  (($ $ |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|third| ((|#1| $) 6)) (|tail| (($ $) 6))
 (|swap!|
  (((|Void|) $ (|Integer|) (|Integer|)) 6 (|has| $ (|shallowlyMutable|))))
 (|split!| (($ $ (|NonNegativeInteger|)) 6 (|has| $ (|shallowlyMutable|))))
 (|sorted?|
  (((|Boolean|) $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))
  (((|Boolean|) (|Mapping| (|Boolean|) |#1| |#1|) $) 6
   (|has| $ (|finiteAggregate|))))
 (|sort!|
  (($ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|shallowlyMutable|))
        (|has| $ (|finiteAggregate|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) 6
   (AND (|has| $ (|shallowlyMutable|)) (|has| $ (|finiteAggregate|)))))
 (|sort|
  (($ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|smaller?|
  (((|Boolean|) $ $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))))
 (|size?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|setvalue!| ((|#1| $ |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|setrest!| (($ $ $) 6 (|has| $ (|shallowlyMutable|))))
 (|setlast!| ((|#1| $ |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|setfirst!| ((|#1| $ |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|setelt!| ((|#1| $ #1="value" |#1|) 6 (|has| $ (|shallowlyMutable|)))
  ((|#1| $ #2="first" |#1|) 6 (|has| $ (|shallowlyMutable|)))
  (($ $ #3="rest" $) 6 (|has| $ (|shallowlyMutable|)))
  ((|#1| $ #4="last" |#1|) 6 (|has| $ (|shallowlyMutable|)))
  ((|#1| $ (|UniversalSegment| (|Integer|)) |#1|) 6
   (|has| $ (|shallowlyMutable|)))
  ((|#1| $ (|Integer|) |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|setchildren!| (($ $ (|List| $)) 6 (|has| $ (|shallowlyMutable|))))
 (|select!| (($ (|Mapping| (|Boolean|) |#1|) $) 6))
 (|select|
  (($ (|Mapping| (|Boolean|) |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|second| ((|#1| $) 6)) (|sample| (($) 6 T CONST))
 (|rightTrim|
  (($ $ |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|reverse!|
  (($ $) 6 (AND (|has| $ (|shallowlyMutable|)) (|has| $ (|finiteAggregate|)))))
 (|reverse| (($ $) 6 (|has| $ (|finiteAggregate|))))
 (|rest| (($ $) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|removeDuplicates!| (($ $) 6 (|has| |#1| (|BasicType|))))
 (|removeDuplicates|
  (($ $) 6 (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|remove!| (($ |#1| $) 6 (|has| |#1| (|BasicType|)))
  (($ (|Mapping| (|Boolean|) |#1|) $) 6))
 (|remove| (($ (|Mapping| (|Boolean|) |#1|) $) 6 (|has| $ (|finiteAggregate|)))
           (($ |#1| $) 6
            (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|reduce|
  ((|#1| (|Mapping| |#1| |#1| |#1|) $) 6 (|has| $ (|finiteAggregate|)))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1|) 6 (|has| $ (|finiteAggregate|)))
  ((|#1| (|Mapping| |#1| |#1| |#1|) $ |#1| |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|qsetrest!| (($ $ $) 6 (|has| $ (|shallowlyMutable|))))
 (|qsetfirst!| ((|#1| $ |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|qsetelt!| ((|#1| $ (|Integer|) |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|qelt| ((|#1| $ (|Integer|)) 6)) (|possiblyInfinite?| (((|Boolean|) $) 6))
 (|position|
  (((|Integer|) |#1| $ (|Integer|)) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))
  (((|Integer|) |#1| $) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))
  (((|Integer|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|))))
 (|parts| (((|List| |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|nodes| (((|List| $) $) 6))
 (|node?| (((|Boolean|) $ $) 6 (|has| |#1| (|BasicType|))))
 (|new| (($ (|NonNegativeInteger|) |#1|) 6))
 (|more?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|minIndex| (((|Integer|) $) 6 (|has| (|Integer|) (|OrderedSet|))))
 (|min|
  ((|#1| $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))
  (($ $ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|merge!| (($ $ $) 6 (|has| |#1| (|OrderedSet|)))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $ $) 6))
 (|merge|
  (($ $ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))
  (($ (|Mapping| (|Boolean|) |#1| |#1|) $ $) 6 (|has| $ (|finiteAggregate|))))
 (|members| (((|List| |#1|) $) 6 (|has| $ (|finiteAggregate|))))
 (|member?|
  (((|Boolean|) |#1| $) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|maxIndex| (((|Integer|) $) 6 (|has| (|Integer|) (|OrderedSet|))))
 (|max|
  ((|#1| (|Mapping| (|Boolean|) |#1| |#1|) $) 6 (|has| $ (|finiteAggregate|)))
  ((|#1| $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|))))
  (($ $ $) 6 (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|map!| (($ (|Mapping| |#1| |#1|) $) 6 (|has| $ (|shallowlyMutable|))))
 (|map| (($ (|Mapping| |#1| |#1|) $) 6) (($ (|Mapping| |#1| |#1| |#1|) $ $) 6))
 (|list| (($ |#1|) 6)) (|less?| (((|Boolean|) $ (|NonNegativeInteger|)) 6))
 (|leftTrim|
  (($ $ |#1|) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|leaves| (((|List| |#1|) $) 6)) (|leaf?| (((|Boolean|) $) 6))
 (|latex|
  (((|String|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|)))))
 (|last| ((|#1| $) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|insert!| (($ $ $ (|Integer|)) 6) (($ |#1| $ (|Integer|)) 6))
 (|insert| (($ $ $ (|Integer|)) 6) (($ |#1| $ (|Integer|)) 6))
 (|indices| (((|List| (|Integer|)) $) 6))
 (|index?| (((|Boolean|) (|Integer|) $) 6))
 (|hashUpdate!|
  (((|HashState|) (|HashState|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|)))))
 (|hash|
  (((|SingleInteger|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|)))))
 (|first| ((|#1| $) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|find| (((|Union| |#1| "failed") (|Mapping| (|Boolean|) |#1|) $) 6))
 (|fill!| (($ $ |#1|) 6 (|has| $ (|shallowlyMutable|))))
 (|explicitlyFinite?| (((|Boolean|) $) 6))
 (|every?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|))))
 (|eval|
  (($ $ (|List| (|Equation| |#1|))) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|Equation| |#1|)) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ |#1| |#1|) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|List| |#1|) (|List| |#1|)) 6
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|)))))
 (|eq?| (((|Boolean|) $ $) 6))
 (|entry?|
  (((|Boolean|) |#1| $) 6
   (AND (|has| $ (|finiteAggregate|)) (|has| |#1| (|BasicType|)))))
 (|entries| (((|List| |#1|) $) 6)) (|empty?| (((|Boolean|) $) 6))
 (|empty| (($) 6))
 (|elt| ((|#1| $ #1#) 6) ((|#1| $ #2#) 6) (($ $ #3#) 6) ((|#1| $ #4#) 6)
  (($ $ (|UniversalSegment| (|Integer|))) 6) ((|#1| $ (|Integer|)) 6)
  ((|#1| $ (|Integer|) |#1|) 6))
 (|distance| (((|Integer|) $ $) 6))
 (|delete!| (($ $ (|UniversalSegment| (|Integer|))) 6) (($ $ (|Integer|)) 6))
 (|delete| (($ $ (|UniversalSegment| (|Integer|))) 6) (($ $ (|Integer|)) 6))
 (|cyclic?| (((|Boolean|) $) 6)) (|cycleTail| (($ $) 6))
 (|cycleSplit!| (($ $) 6 (|has| $ (|shallowlyMutable|))))
 (|cycleLength| (((|NonNegativeInteger|) $) 6)) (|cycleEntry| (($ $) 6))
 (|count|
  (((|NonNegativeInteger|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|)))
  (((|NonNegativeInteger|) |#1| $) 6
   (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|)))))
 (|copyInto!|
  (($ $ $ (|Integer|)) 6
   (AND (|has| $ (|shallowlyMutable|)) (|has| $ (|finiteAggregate|)))))
 (|copy| (($ $) 6))
 (|convert| (((|InputForm|) $) 6 (|has| |#1| (|ConvertibleTo| (|InputForm|)))))
 (|construct| (($ (|List| |#1|)) 6)) (|concat!| (($ $ $) 6) (($ $ |#1|) 6))
 (|concat| (($ $ $) 6) (($ |#1| $) 6) (($ (|List| $)) 6) (($ $ |#1|) 6))
 (|coerce|
  (((|OutputForm|) $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|CoercibleTo| (|OutputForm|))))))
 (|children| (((|List| $) $) 6))
 (|child?| (((|Boolean|) $ $) 6 (|has| |#1| (|BasicType|))))
 (|any?|
  (((|Boolean|) (|Mapping| (|Boolean|) |#1|) $) 6
   (|has| $ (|finiteAggregate|))))
 (>=
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (>
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (=
  (((|Boolean|) $ $) 6
   (OR (AND (|has| |#1| (|Comparable|)) (|has| $ (|finiteAggregate|)))
       (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))
       (|has| |#1| (|SetCategory|))
       (AND (|has| |#1| (|BasicType|)) (|has| $ (|finiteAggregate|))))))
 (<=
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (<
  (((|Boolean|) $ $) 6
   (AND (|has| |#1| (|OrderedSet|)) (|has| $ (|finiteAggregate|)))))
 (|#| (((|NonNegativeInteger|) $) 6 (|has| $ (|finiteAggregate|)))))
LSAGG
(((|StreamAggregate| |#1|) . T) ((|FiniteLinearAggregate| |#1|) . T)
 ((|ExtensibleLinearAggregate| |#1|) . T))
(((|Aggregate|) . T)
 ((|BasicType|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|BasicType|))))
 ((|CoercibleTo| (|OutputForm|)) OR
  (|has| |t#1| (|CoercibleTo| (|OutputForm|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|Collection| |t#1|) . T)
 ((|Comparable|) OR
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|ConvertibleTo| (|InputForm|)) |has| |t#1| (|ConvertibleTo| (|InputForm|)))
 ((|Eltable| (|UniversalSegment| (|Integer|)) $) . T)
 ((|Eltable| |t#1| |t#2|) . T) ((|EltableAggregate| |t#1| |t#2|) . T)
 ((|Evalable| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|ExtensibleLinearAggregate| |#1|) . T) ((|FiniteLinearAggregate| |#1|) . T)
 ((|HomogeneousAggregate| |t#2|) . T) ((|HomogeneousAggregate| |t#1|) . T)
 ((|IndexedAggregate| (|Integer|) |t#1|) . T)
 ((|InnerEvalable| |t#1| |t#1|) AND (|has| |t#1| (|Evalable| |t#1|))
  (|has| |t#1| (|SetCategory|)))
 ((|LinearAggregate| |t#1|) . T)
 ((|OrderedSet|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|PartialOrder|) AND (|has| $ (|finiteAggregate|))
  (|has| |t#1| (|OrderedSet|)))
 ((|RecursiveAggregate| |t#1|) . T)
 ((|SetCategory|) OR (|has| |t#1| (|SetCategory|))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|OrderedSet|)))
  (AND (|has| $ (|finiteAggregate|)) (|has| |t#1| (|Comparable|))))
 ((|StreamAggregate| |#1|) . T) ((|Type|) . T)
 ((|UnaryRecursiveAggregate| |t#1|) . T) ((|finiteAggregate|) . T)
 ((|shallowlyMutable|) . T))
((|constructor|
  (NIL
   "A list aggregate is a model for a linked list data structure. A linked list is a versatile data structure. Insertion and deletion are efficient and searching is a linear operation."))
 (|list|
  (($ |#1|) "\\spad{list(x)} returns the list of one element \\spad{x}.")))
(("documentation" 0 12093) ("ancestors" 0 10259) ("parents" 0 10147)
 ("abbreviation" 0 10141) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 421) ("modemaps" 0 325) ("sourceFile" 0 288)
 ("constructorCategory" 0 120) ("constructorModemap" 0 51)
 ("constructorKind" 0 40) ("constructorForm" 0 20))