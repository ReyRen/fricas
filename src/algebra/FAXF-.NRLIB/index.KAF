12877               (|FiniteAlgebraicExtensionField&| S F)
|domain|
(((|FiniteAlgebraicExtensionField&| |#1| |#2|)
  (CATEGORY |domain| (SIGNATURE |charthRoot| ((|Union| |#1| "failed") |#1|))
   (SIGNATURE |size| ((|NonNegativeInteger|)))
   (SIGNATURE |charthRoot| (|#1| |#1|))
   (SIGNATURE |linearAssociatedLog|
    ((|Union| (|SparseUnivariatePolynomial| |#2|) "failed") |#1| |#1|))
   (SIGNATURE |linearAssociatedLog| ((|SparseUnivariatePolynomial| |#2|) |#1|))
   (SIGNATURE |linearAssociatedOrder|
    ((|SparseUnivariatePolynomial| |#2|) |#1|))
   (SIGNATURE |linearAssociatedExp|
    (|#1| |#1| (|SparseUnivariatePolynomial| |#2|)))
   (SIGNATURE |normal?| ((|Boolean|) |#1|))
   (SIGNATURE |createNormalElement| (|#1|))
   (SIGNATURE |trace| (|#1| |#1| (|PositiveInteger|)))
   (SIGNATURE |norm| (|#1| |#1| (|PositiveInteger|)))
   (SIGNATURE |minimalPolynomial|
    ((|SparseUnivariatePolynomial| |#1|) |#1| (|PositiveInteger|)))
   (SIGNATURE |trace| (|#2| |#1|)) (SIGNATURE |norm| (|#2| |#1|))
   (SIGNATURE |degree| ((|PositiveInteger|) |#1|))
   (SIGNATURE |extensionDegree| ((|PositiveInteger|)))
   (SIGNATURE |minimalPolynomial| ((|SparseUnivariatePolynomial| |#2|) |#1|))
   (SIGNATURE |represents| (|#1| (|Vector| |#2|)))
   (SIGNATURE |coordinates| ((|Matrix| |#2|) (|Vector| |#1|)))
   (SIGNATURE |coordinates| ((|Vector| |#2|) |#1|))
   (SIGNATURE |transcendenceDegree| ((|NonNegativeInteger|)))
   (SIGNATURE |extensionDegree| ((|OnePointCompletion| (|PositiveInteger|))))
   (SIGNATURE |degree| ((|OnePointCompletion| (|PositiveInteger|)) |#1|))
   (SIGNATURE |transcendent?| ((|Boolean|) |#1|))
   (SIGNATURE |algebraic?| ((|Boolean|) |#1|))
   (SIGNATURE |dimension| ((|CardinalNumber|))))
  (|FiniteAlgebraicExtensionField| |#2|) (|Field|))
 (T |FiniteAlgebraicExtensionField&|))
(CATEGORY |domain| (SIGNATURE |charthRoot| ((|Union| |#1| "failed") |#1|))
 (SIGNATURE |size| ((|NonNegativeInteger|)))
 (SIGNATURE |charthRoot| (|#1| |#1|))
 (SIGNATURE |linearAssociatedLog|
  ((|Union| (|SparseUnivariatePolynomial| |#2|) "failed") |#1| |#1|))
 (SIGNATURE |linearAssociatedLog| ((|SparseUnivariatePolynomial| |#2|) |#1|))
 (SIGNATURE |linearAssociatedOrder| ((|SparseUnivariatePolynomial| |#2|) |#1|))
 (SIGNATURE |linearAssociatedExp|
  (|#1| |#1| (|SparseUnivariatePolynomial| |#2|)))
 (SIGNATURE |normal?| ((|Boolean|) |#1|))
 (SIGNATURE |createNormalElement| (|#1|))
 (SIGNATURE |trace| (|#1| |#1| (|PositiveInteger|)))
 (SIGNATURE |norm| (|#1| |#1| (|PositiveInteger|)))
 (SIGNATURE |minimalPolynomial|
  ((|SparseUnivariatePolynomial| |#1|) |#1| (|PositiveInteger|)))
 (SIGNATURE |trace| (|#2| |#1|)) (SIGNATURE |norm| (|#2| |#1|))
 (SIGNATURE |degree| ((|PositiveInteger|) |#1|))
 (SIGNATURE |extensionDegree| ((|PositiveInteger|)))
 (SIGNATURE |minimalPolynomial| ((|SparseUnivariatePolynomial| |#2|) |#1|))
 (SIGNATURE |represents| (|#1| (|Vector| |#2|)))
 (SIGNATURE |coordinates| ((|Matrix| |#2|) (|Vector| |#1|)))
 (SIGNATURE |coordinates| ((|Vector| |#2|) |#1|))
 (SIGNATURE |transcendenceDegree| ((|NonNegativeInteger|)))
 (SIGNATURE |extensionDegree| ((|OnePointCompletion| (|PositiveInteger|))))
 (SIGNATURE |degree| ((|OnePointCompletion| (|PositiveInteger|)) |#1|))
 (SIGNATURE |transcendent?| ((|Boolean|) |#1|))
 (SIGNATURE |algebraic?| ((|Boolean|) |#1|))
 (SIGNATURE |dimension| ((|CardinalNumber|))))
"/git/fricas/src/algebra/FAXF.spad"
((|dimension| (*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|CardinalNumber|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 (|extensionDegree| (*1 *2)
  (AND (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 (|transcendenceDegree| (*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 (|extensionDegree| (*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 (|size| (*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))))
((|transcendent?| (((|Boolean|) $) 39))
 (|transcendenceDegree| (((|NonNegativeInteger|)) 22))
 (|trace| ((|#2| $) 43) (($ $ (|PositiveInteger|)) 98))
 (|size| (((|NonNegativeInteger|)) 99)) (|represents| (($ (|Vector| |#2|)) 20))
 (|normal?| (((|Boolean|) $) 110))
 (|norm| ((|#2| $) 45) (($ $ (|PositiveInteger|)) 96))
 (|minimalPolynomial| (((|SparseUnivariatePolynomial| |#2|) $) NIL)
  (((|SparseUnivariatePolynomial| $) $ (|PositiveInteger|)) 90))
 (|linearAssociatedOrder| (((|SparseUnivariatePolynomial| |#2|) $) 79))
 (|linearAssociatedLog| (((|SparseUnivariatePolynomial| |#2|) $) 76)
  (((|Union| (|SparseUnivariatePolynomial| |#2|) "failed") $ $) 73))
 (|linearAssociatedExp| (($ $ (|SparseUnivariatePolynomial| |#2|)) 50))
 (|extensionDegree| (((|OnePointCompletion| (|PositiveInteger|))) 28)
  (((|PositiveInteger|)) 40))
 (|dimension| (((|CardinalNumber|)) 25))
 (|degree| (((|OnePointCompletion| (|PositiveInteger|)) $) 30)
  (((|PositiveInteger|) $) 112))
 (|createNormalElement| (($) 104))
 (|coordinates| (((|Vector| |#2|) $) NIL) (((|Matrix| |#2|) (|Vector| $)) 36))
 (|charthRoot| (($ $) NIL) (((|Union| $ "failed") $) 82))
 (|algebraic?| (((|Boolean|) $) 38)))
((|HasCategory| |#2| '(|Finite|)))
FAXF-
((|constructor|
  (NIL
   "FiniteAlgebraicExtensionField {\\em F} is the category of fields which are finite algebraic extensions of the field {\\em F}. If {\\em F} is finite then any finite algebraic extension of {\\em F} is finite,{} too. Let {\\em K} be a finite algebraic extension of the finite field {\\em F}. The exponentiation of elements of {\\em K} defines a \\spad{Z}-module structure on the multiplicative group of {\\em K}. The additive group of {\\em K} becomes a module over the ring of polynomials over {\\em F} via the operation \\spadfun{linearAssociatedExp}(a: \\spad{K},{} \\spad{f:} SparseUnivariatePolynomial \\spad{F}) which is linear over {\\em F},{} \\spadignore{i.e.} for elements {\\em a} from {\\em K},{} {\\em c,{} d} from {\\em F} and {\\em f,{} g} univariate polynomials over {\\em F} we have \\spadfun{linearAssociatedExp}(a,{} cf+dg) equals {\\em c} times \\spadfun{linearAssociatedExp}(a,{} \\spad{f}) plus {\\em d} times \\spadfun{linearAssociatedExp}(a,{} \\spad{g}). Therefore \\spadfun{linearAssociatedExp} is defined completely by its action on monomials from {\\em F[X]}: \\spadfun{linearAssociatedExp}(a,{} monomial(1,{} \\spad{k})\\spad{\\$}SUP(\\spad{F})) is defined to be \\spadfun{Frobenius}(a,{} \\spad{k}) which is {\\em a^(q^k)} where {\\em q=size()\\$F}. The operations order and discreteLog associated with the multiplicative exponentiation have additive analogues associated to the operation \\spadfun{linearAssociatedExp}. These are the functions \\spadfun{linearAssociatedOrder} and \\spadfun{linearAssociatedLog},{} respectively."))
 (|linearAssociatedLog|
  (((|Union| (|SparseUnivariatePolynomial| |#2|) "failed") $ $)
   "\\spad{linearAssociatedLog(b,{} a)} returns a polynomial {\\em g},{} such that the \\spadfun{linearAssociatedExp}(\\spad{b},{} \\spad{g}) equals {\\em a}. If there is no such polynomial {\\em g},{} then \\spadfun{linearAssociatedLog} fails.")
  (((|SparseUnivariatePolynomial| |#2|) $)
   "\\spad{linearAssociatedLog(a)} returns a polynomial {\\em g},{} such that \\spadfun{linearAssociatedExp}(normalElement(),{} \\spad{g}) equals {\\em a}."))
 (|linearAssociatedOrder|
  (((|SparseUnivariatePolynomial| |#2|) $)
   "\\spad{linearAssociatedOrder(a)} retruns the monic polynomial {\\em g} of least degree,{} such that \\spadfun{linearAssociatedExp}(a,{} \\spad{g}) is 0."))
 (|linearAssociatedExp|
  (($ $ (|SparseUnivariatePolynomial| |#2|))
   "\\spad{linearAssociatedExp(a,{} f)} is linear over {\\em F},{} \\spadignore{i.e.} for elements {\\em a} from {\\em \\$},{} {\\em c,{} d} form {\\em F} and {\\em f,{} g} univariate polynomials over {\\em F} we have \\spadfun{linearAssociatedExp}(a,{} cf+dg) equals {\\em c} times \\spadfun{linearAssociatedExp}(a,{} \\spad{f}) plus {\\em d} times \\spadfun{linearAssociatedExp}(a,{} \\spad{g}). Therefore \\spadfun{linearAssociatedExp} is defined completely by its action on monomials from {\\em F[X]}: \\spadfun{linearAssociatedExp}(a,{} monomial(1,{} \\spad{k})\\spad{\\$}SUP(\\spad{F})) is defined to be \\spadfun{Frobenius}(a,{} \\spad{k}) which is {\\em a^(q^k)},{} where {\\em q=size()\\$F}."))
 (|generator|
  (($)
   "\\spad{generator()} returns a root of the defining polynomial. This element generates the field as an algebra over the ground field."))
 (|normal?|
  (((|Boolean|) $)
   "\\spad{normal?(a)} tests whether the element \\spad{a} is normal over the ground field \\spad{F},{} \\spadignore{i.e.} \\spad{a^(q^i),{} 0 <= i <= extensionDegree()-1} is an \\spad{F}-basis,{} where \\spad{q = size()\\$F}. Implementation according to Lidl/Niederreiter: Theorem 2.39."))
 (|normalElement|
  (($)
   "\\spad{normalElement()} returns a element,{} normal over the ground field \\spad{F},{} \\spadignore{i.e.} \\spad{a^(q^i),{} 0 <= i < extensionDegree()} is an \\spad{F}-basis,{} where \\spad{q = size()\\$F}. At the first call,{} the element is computed by \\spadfunFrom{createNormalElement}{FiniteAlgebraicExtensionField} then cached in a global variable. On subsequent calls,{} the element is retrieved by referencing the global variable."))
 (|createNormalElement|
  (($)
   "\\spad{createNormalElement()} computes a normal element over the ground field \\spad{F},{} that is,{} \\spad{a^(q^i),{} 0 <= i < extensionDegree()} is an \\spad{F}-basis,{} where \\spad{q = size()\\$F}. Reference: Such an element exists Lidl/Niederreiter: Theorem 2.35."))
 (|trace|
  (($ $ (|PositiveInteger|))
   "\\spad{trace(a,{} d)} computes the trace of \\spad{a} with respect to the field of extension degree \\spad{d} over the ground field of size \\spad{q}. Error: if \\spad{d} does not divide the extension degree of \\spad{a}. Note: \\spad{trace(a,{} d) = reduce(+,{} [a^(q^(d*i)) for i in 0..n/d])}.")
  ((|#2| $)
   "\\spad{trace(a)} computes the trace of \\spad{a} with respect to the field considered as an algebra with 1 over the ground field \\spad{F}."))
 (|norm|
  (($ $ (|PositiveInteger|))
   "\\spad{norm(a,{} d)} computes the norm of \\spad{a} with respect to the field of extension degree \\spad{d} over the ground field of size. Error: if \\spad{d} does not divide the extension degree of \\spad{a}. Note: norm(a,{} \\spad{d}) = reduce(*,{} [a^(\\spad{q^}(d*i)) for \\spad{i} in 0..\\spad{n/d}])")
  ((|#2| $)
   "\\spad{norm(a)} computes the norm of \\spad{a} with respect to the field considered as an algebra with 1 over the ground field \\spad{F}."))
 (|degree|
  (((|PositiveInteger|) $)
   "\\spad{degree(a)} returns the degree of the minimal polynomial of an element \\spad{a} over the ground field \\spad{F}."))
 (|extensionDegree|
  (((|PositiveInteger|))
   "\\spad{extensionDegree()} returns the degree of field extension."))
 (|definingPolynomial|
  (((|SparseUnivariatePolynomial| |#2|))
   "\\spad{definingPolynomial()} returns the polynomial used to define the field extension."))
 (|minimalPolynomial|
  (((|SparseUnivariatePolynomial| $) $ (|PositiveInteger|))
   "\\spad{minimalPolynomial(x,{} n)} computes the minimal polynomial of \\spad{x} over the field of extension degree \\spad{n} over the ground field \\spad{F}.")
  (((|SparseUnivariatePolynomial| |#2|) $)
   "\\spad{minimalPolynomial(a)} returns the minimal polynomial of an element \\spad{a} over the ground field \\spad{F}."))
 (|represents|
  (($ (|Vector| |#2|))
   "\\spad{represents([a1,{} ..,{} an])} returns \\spad{a1*v1 + ... + an*vn},{} where \\spad{v1},{} ...,{} \\spad{vn} are the elements of the fixed basis."))
 (|coordinates|
  (((|Matrix| |#2|) (|Vector| $))
   "\\spad{coordinates([v1,{} ...,{} vm])} returns the coordinates of the \\spad{vi}\\spad{'s} with to the fixed basis. The coordinates of \\spad{vi} are contained in the \\spad{i}th row of the matrix returned by this function.")
  (((|Vector| |#2|) $)
   "\\spad{coordinates(a)} returns the coordinates of \\spad{a} with respect to the fixed \\spad{F}-vector space basis."))
 (|basis|
  (((|Vector| $) (|PositiveInteger|))
   "\\spad{basis(n)} returns a fixed basis of a subfield of \\% as \\spad{F}-vector space.")
  (((|Vector| $))
   "\\spad{basis()} returns a fixed basis of \\% as \\spad{F}-vector space.")))
(("documentation" 0 5768) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 5762) ("predicates" 0 5727) ("superDomain" 0 NIL)
 ("operationAlist" 0 4544) ("modemaps" 0 3386) ("sourceFile" 0 3350)
 ("constructorCategory" 0 1808) ("constructorModemap" 0 68)
 ("constructorKind" 0 59) ("constructorForm" 0 20))