4111                (|FractionalIdealAsModule| R F UP A |ibasis|)
|domain|
(((|FractionalIdealAsModule| |#1| |#2| |#3| |#4| |#5|)
  (|Join| (|Monoid|)
          (CATEGORY |domain| (SIGNATURE |basis| ((|Vector| |#4|) $))
           (SIGNATURE |norm| (|#2| $)) (SIGNATURE |module| ($ (|Vector| |#4|)))
           (IF (|has| |#4| (|RetractableTo| |#2|))
               (SIGNATURE |module| ($ (|FractionalIdeal| |#1| |#2| |#3| |#4|)))
               |noBranch|)))
  (|EuclideanDomain|) (|QuotientFieldCategory| |#1|)
  (|UnivariatePolynomialCategory| |#2|) (|FramedAlgebra| |#2| |#3|)
  (|Vector| |#4|))
 (T |FractionalIdealAsModule|))
(|Join| (|Monoid|)
        (CATEGORY |domain| (SIGNATURE |basis| ((|Vector| |#4|) $))
         (SIGNATURE |norm| (|#2| $)) (SIGNATURE |module| ($ (|Vector| |#4|)))
         (IF (|has| |#4| (|RetractableTo| |#2|))
             (SIGNATURE |module| ($ (|FractionalIdeal| |#1| |#2| |#3| |#4|)))
             |noBranch|)))
"/git/fricas/src/algebra/FRIMOD.spad"
((|basis| (*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 *2)))
 (|norm| (*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4)) (|ofType| *6 (|Vector| *5))))
 (|module| (*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofType| *7 *2)))
 (|module| (*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|RetractableTo| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7)))))
((~= (((|Boolean|) $ $) NIL)) (|sample| (($) NIL T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|recip| (((|Union| $ #1#) $) NIL)) (|one?| (((|Boolean|) $) NIL))
 (|norm| ((|#2| $) 54))
 (|module| (($ (|Vector| |#4|)) 22)
  (($ (|FractionalIdeal| |#1| |#2| |#3| |#4|)) 67
   (|has| |#4| (|RetractableTo| |#2|))))
 (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|latex| (((|String|) $) NIL))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|coerce| (((|OutputForm|) $) 31))
 (|basis| (((|Vector| |#4|) $) 23))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|One| (($) 20 T CONST)) (= (((|Boolean|) $ $) NIL)) (* (($ $ $) 64)))
((|HasCategory| |#4| (LIST '|RetractableTo| (|devaluate| |#2|))))
FRIMOD
(((|Monoid|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|Magma|) . T)
 ((|MagmaWithUnit|) . T) ((|Monoid|) . T) ((|SemiGroup|) . T)
 ((|SetCategory|) . T))
((|constructor| (NIL "Module representation of fractional ideals."))
 (|module|
  (($ (|FractionalIdeal| |#1| |#2| |#3| |#4|))
   "\\spad{module(I)} returns \\spad{I} viewed has a module over \\spad{R}.")
  (($ (|Vector| |#4|))
   "\\spad{module([f1,{} ...,{} fn])} = the module generated by \\spad{(f1,{} ...,{} fn)} over \\spad{R}."))
 (|norm|
  ((|#2| $) "\\spad{norm(f)} returns the norm of the module \\spad{f}."))
 (|basis|
  (((|Vector| |#4|) $)
   "\\spad{basis((f1,{} ...,{} fn))} = the vector \\spad{[f1,{} ...,{} fn]}.")))
(("documentation" 0 3577) ("ancestors" 0 3417) ("parents" 0 3398)
 ("abbreviation" 0 3391) ("predicates" 0 3325) ("superDomain" 0 NIL)
 ("operationAlist" 0 2447) ("modemaps" 0 988) ("sourceFile" 0 950)
 ("constructorCategory" 0 632) ("constructorModemap" 0 75)
 ("constructorKind" 0 66) ("constructorForm" 0 20))