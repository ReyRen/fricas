15468               (MAKEPROP '|GraphImage| 'NILADIC T)
(|GraphImage|)
|domain|
(((|GraphImage|)
  (|Join| (|SetCategory|)
          (CATEGORY |domain| (SIGNATURE |graphImage| ($))
           (SIGNATURE |sendGraphImage| ((|Void|) $))
           (SIGNATURE |makeGraphImage|
            ($ (|List| (|List| (|Point| (|DoubleFloat|))))))
           (SIGNATURE |makeGraphImage|
            ($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
             (|List| (|Palette|)) (|List| (|PositiveInteger|))))
           (SIGNATURE |makeGraphImage|
            ($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
             (|List| (|Palette|)) (|List| (|PositiveInteger|))
             (|List| (|DrawOption|))))
           (SIGNATURE |pointLists|
            ((|List| (|List| (|Point| (|DoubleFloat|)))) $))
           (SIGNATURE |key| ((|Integer|) $))
           (SIGNATURE |ranges| ((|List| (|Segment| (|Float|))) $))
           (SIGNATURE |ranges|
            ((|List| (|Segment| (|Float|))) $ (|List| (|Segment| (|Float|)))))
           (SIGNATURE |units| ((|List| (|Float|)) $))
           (SIGNATURE |units| ((|List| (|Float|)) $ (|List| (|Float|))))
           (SIGNATURE |component|
            ((|Void|) $ (|List| (|Point| (|DoubleFloat|))) (|Palette|)
             (|Palette|) (|PositiveInteger|)))
           (SIGNATURE |component| ((|Void|) $ (|Point| (|DoubleFloat|))))
           (SIGNATURE |component|
            ((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|) (|Palette|)
             (|PositiveInteger|)))
           (SIGNATURE |appendPoint| ((|Void|) $ (|Point| (|DoubleFloat|))))
           (SIGNATURE |point|
            ((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|)))
           (SIGNATURE |coerce| ($ (|List| (|List| (|Point| (|DoubleFloat|))))))
           (SIGNATURE |coerce| ((|OutputForm|) $))
           (SIGNATURE |putColorInfo|
            ((|List| (|List| (|Point| (|DoubleFloat|))))
             (|List| (|List| (|Point| (|DoubleFloat|))))
             (|List| (|Palette|)))))))
 (T |GraphImage|))
(|Join| (|SetCategory|)
        (CATEGORY |domain| (SIGNATURE |graphImage| ($))
         (SIGNATURE |sendGraphImage| ((|Void|) $))
         (SIGNATURE |makeGraphImage|
          ($ (|List| (|List| (|Point| (|DoubleFloat|))))))
         (SIGNATURE |makeGraphImage|
          ($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
           (|List| (|Palette|)) (|List| (|PositiveInteger|))))
         (SIGNATURE |makeGraphImage|
          ($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
           (|List| (|Palette|)) (|List| (|PositiveInteger|))
           (|List| (|DrawOption|))))
         (SIGNATURE |pointLists|
          ((|List| (|List| (|Point| (|DoubleFloat|)))) $))
         (SIGNATURE |key| ((|Integer|) $))
         (SIGNATURE |ranges| ((|List| (|Segment| (|Float|))) $))
         (SIGNATURE |ranges|
          ((|List| (|Segment| (|Float|))) $ (|List| (|Segment| (|Float|)))))
         (SIGNATURE |units| ((|List| (|Float|)) $))
         (SIGNATURE |units| ((|List| (|Float|)) $ (|List| (|Float|))))
         (SIGNATURE |component|
          ((|Void|) $ (|List| (|Point| (|DoubleFloat|))) (|Palette|)
           (|Palette|) (|PositiveInteger|)))
         (SIGNATURE |component| ((|Void|) $ (|Point| (|DoubleFloat|))))
         (SIGNATURE |component|
          ((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|) (|Palette|)
           (|PositiveInteger|)))
         (SIGNATURE |appendPoint| ((|Void|) $ (|Point| (|DoubleFloat|))))
         (SIGNATURE |point| ((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|)))
         (SIGNATURE |coerce| ($ (|List| (|List| (|Point| (|DoubleFloat|))))))
         (SIGNATURE |coerce| ((|OutputForm|) $))
         (SIGNATURE |putColorInfo|
          ((|List| (|List| (|Point| (|DoubleFloat|))))
           (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))))))
"/git/fricas/src/algebra/GRIMAGE.spad"
((|coerce| (*1 *2 *1)
           (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|GraphImage|))))
 (|graphImage| (*1 *1) (|isDomain| *1 (|GraphImage|)))
 (|sendGraphImage| (*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 (|makeGraphImage| (*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))
 (|makeGraphImage| (*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|GraphImage|))))
 (|makeGraphImage| (*1 *1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|GraphImage|))))
 (|pointLists| (*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))
 (|key| (*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphImage|))))
 (|ranges| (*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))
 (|ranges| (*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))
 (|units| (*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 (|units| (*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 (|component| (*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 (|component| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 (|component| (*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 (|appendPoint| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 (|point| (*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 (|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
                (|isDomain| *1 (|GraphImage|))))
 (|putColorInfo| (*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *1 (|GraphImage|)))))
((~= (((|Boolean|) $ $) NIL))
 (|units| (((|List| (|Float|)) $) 29)
  (((|List| (|Float|)) $ (|List| (|Float|))) 98))
 (|sendGraphImage| (((|Void|) $) 91))
 (|ranges| (((|List| (|Segment| (|Float|))) $) 14)
  (((|List| (|Segment| (|Float|))) $ (|List| (|Segment| (|Float|)))) 96))
 (|putColorInfo|
  (((|List| (|List| (|Point| (|DoubleFloat|))))
    (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|)))
   44))
 (|pointLists| (((|List| (|List| (|Point| (|DoubleFloat|)))) $) 92))
 (|point| (((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|)) 114))
 (|makeGraphImage| (($ (|List| (|List| (|Point| (|DoubleFloat|))))) 101)
  (($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
    (|List| (|Palette|)) (|List| (|PositiveInteger|)))
   100)
  (($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
    (|List| (|Palette|)) (|List| (|PositiveInteger|)) (|List| (|DrawOption|)))
   102))
 (|latex| (((|String|) $) NIL)) (|key| (((|Integer|) $) 74))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|graphImage| (($) 99))
 (|component|
  (((|Void|) $ (|List| (|Point| (|DoubleFloat|))) (|Palette|) (|Palette|)
    (|PositiveInteger|))
   107)
  (((|Void|) $ (|Point| (|DoubleFloat|))) 109)
  (((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|) (|Palette|)
    (|PositiveInteger|))
   108))
 (|coerce| (((|OutputForm|) $) 121)
           (($ (|List| (|List| (|Point| (|DoubleFloat|))))) 115))
 (|appendPoint| (((|Void|) $ (|Point| (|DoubleFloat|))) 113))
 (= (((|Boolean|) $ $) NIL)))
GRIMAGE
(((|SetCategory|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "TwoDimensionalGraph creates virtual two dimensional graphs (to be displayed on TwoDimensionalViewports)."))
 (|putColorInfo|
  (((|List| (|List| (|Point| (|DoubleFloat|))))
    (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|)))
   "\\spad{putColorInfo(llp,{} lpal)} takes a list of list of points,{} \\spad{llp},{} and returns the points with their hue and shade components set according to the list of palette colors,{} \\spad{lpal}."))
 (|coerce|
  (((|OutputForm|) $)
   "\\spad{coerce(\\spad{gi})} returns the indicated graph,{} \\spad{\\spad{gi}},{} of domain \\spadtype{GraphImage} as output of the domain \\spadtype{OutputForm}.")
  (($ (|List| (|List| (|Point| (|DoubleFloat|)))))
   "\\spad{coerce(llp)} component(\\spad{gi},{} \\spad{pt}) creates and returns a graph of the domain \\spadtype{GraphImage} which is composed of the list of list of points given by \\spad{llp},{} and whose point colors,{} line colors and point sizes are determined by the default functions \\spadfun{pointColorDefault},{} \\spadfun{lineColorDefault},{} and \\spadfun{pointSizeDefault}. The graph data is then sent to the viewport manager where it waits to be included in a two-dimensional viewport window."))
 (|point|
  (((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|))
   "\\spad{point(\\spad{gi},{} pt,{} pal)} modifies the graph \\spad{\\spad{gi}} of the domain \\spadtype{GraphImage} to contain one point component,{} \\spad{pt} whose point color is set to be the palette color \\spad{pal},{} and whose line color and point size are determined by the default functions \\spadfun{lineColorDefault} and \\spadfun{pointSizeDefault}."))
 (|appendPoint|
  (((|Void|) $ (|Point| (|DoubleFloat|)))
   "\\spad{appendPoint(\\spad{gi},{} pt)} appends the point \\spad{pt} to the end of the list of points component for the graph,{} \\spad{\\spad{gi}},{} which is of the domain \\spadtype{GraphImage}."))
 (|component|
  (((|Void|) $ (|Point| (|DoubleFloat|)) (|Palette|) (|Palette|)
    (|PositiveInteger|))
   "\\spad{component(\\spad{gi},{} pt,{} pal1,{} pal2,{} ps)} modifies the graph \\spad{\\spad{gi}} of the domain \\spadtype{GraphImage} to contain one point component,{} \\spad{pt} whose point color is set to the palette color \\spad{pal1},{} line color is set to the palette color \\spad{pal2},{} and point size is set to the positive integer \\spad{ps}.")
  (((|Void|) $ (|Point| (|DoubleFloat|)))
   "\\spad{component(\\spad{gi},{} pt)} modifies the graph \\spad{\\spad{gi}} of the domain \\spadtype{GraphImage} to contain one point component,{} \\spad{pt} whose point color,{} line color and point size are determined by the default functions \\spadfun{pointColorDefault},{} \\spadfun{lineColorDefault},{} and \\spadfun{pointSizeDefault}.")
  (((|Void|) $ (|List| (|Point| (|DoubleFloat|))) (|Palette|) (|Palette|)
    (|PositiveInteger|))
   "\\spad{component(\\spad{gi},{} lp,{} pal1,{} pal2,{} p)} sets the components of the graph,{} \\spad{\\spad{gi}} of the domain \\spadtype{GraphImage},{} to the values given. The point list for \\spad{\\spad{gi}} is set to the list \\spad{lp},{} the color of the points in \\spad{lp} is set to the palette color \\spad{pal1},{} the color of the lines which connect the points \\spad{lp} is set to the palette color \\spad{pal2},{} and the size of the points in \\spad{lp} is given by the integer \\spad{p}."))
 (|units|
  (((|List| (|Float|)) $ (|List| (|Float|)))
   "\\spad{units(\\spad{gi},{} lu)} modifies the list of unit increments for the \\spad{x} and \\spad{y} axes of the given graph,{} \\spad{\\spad{gi}} of the domain \\spadtype{GraphImage},{} to be that of the list of unit increments,{} \\spad{lu},{} and returns the new list of units for \\spad{\\spad{gi}}.")
  (((|List| (|Float|)) $)
   "\\spad{units(\\spad{gi})} returns the list of unit increments for the \\spad{x} and \\spad{y} axes of the indicated graph,{} \\spad{\\spad{gi}},{} of the domain \\spadtype{GraphImage}."))
 (|ranges|
  (((|List| (|Segment| (|Float|))) $ (|List| (|Segment| (|Float|))))
   "\\spad{ranges(\\spad{gi},{} lr)} modifies the list of ranges for the given graph,{} \\spad{\\spad{gi}} of the domain \\spadtype{GraphImage},{} to be that of the list of range segments,{} \\spad{lr},{} and returns the new range list for \\spad{\\spad{gi}}.")
  (((|List| (|Segment| (|Float|))) $)
   "\\spad{ranges(\\spad{gi})} returns the list of ranges of the point components from the indicated graph,{} \\spad{\\spad{gi}},{} of the domain \\spadtype{GraphImage}."))
 (|key|
  (((|Integer|) $)
   "\\spad{key(\\spad{gi})} returns the process ID of the given graph,{} \\spad{\\spad{gi}},{} of the domain \\spadtype{GraphImage}."))
 (|pointLists|
  (((|List| (|List| (|Point| (|DoubleFloat|)))) $)
   "\\spad{pointLists(\\spad{gi})} returns the list of lists of points which compose the given graph,{} \\spad{\\spad{gi}},{} of the domain \\spadtype{GraphImage}."))
 (|makeGraphImage|
  (($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
    (|List| (|Palette|)) (|List| (|PositiveInteger|)) (|List| (|DrawOption|)))
   "\\spad{makeGraphImage(llp,{} lpal1,{} lpal2,{} lp,{} lopt)} returns a graph of the domain \\spadtype{GraphImage} which is composed of the points and lines from the list of lists of points,{} \\spad{llp},{} whose point colors are indicated by the list of palette colors,{} \\spad{lpal1},{} and whose lines are colored according to the list of palette colors,{} \\spad{lpal2}. The paramater \\spad{lp} is a list of integers which denote the size of the data points,{} and \\spad{lopt} is the list of draw command options.")
  (($ (|List| (|List| (|Point| (|DoubleFloat|)))) (|List| (|Palette|))
    (|List| (|Palette|)) (|List| (|PositiveInteger|)))
   "\\spad{makeGraphImage(llp,{} lpal1,{} lpal2,{} lp)} returns a graph of the domain \\spadtype{GraphImage} which is composed of the points and lines from the list of lists of points,{} \\spad{llp},{} whose point colors are indicated by the list of palette colors,{} \\spad{lpal1},{} and whose lines are colored according to the list of palette colors,{} \\spad{lpal2}. The paramater \\spad{lp} is a list of integers which denote the size of the data points.")
  (($ (|List| (|List| (|Point| (|DoubleFloat|)))))
   "\\spad{makeGraphImage(llp)} returns a graph of the domain \\spadtype{GraphImage} which is composed of the points and lines from the list of lists of points,{} \\spad{llp},{} with default point size and default point and line colours."))
 (|sendGraphImage|
  (((|Void|) $)
   "\\spad{sendGraphImage(\\spad{gi})} takes the given graph,{} \\spad{\\spad{gi}} of the domain \\spadtype{GraphImage},{} and sends it\\spad{'s} data to the viewport manager where it waits to be included in a two-dimensional viewport window. \\spad{\\spad{gi}} cannot be an empty graph."))
 (|graphImage|
  (($)
   "\\spad{graphImage()} returns an empty graph with 0 point lists of the domain \\spadtype{GraphImage}. A graph image contains the graph data component of a two dimensional viewport.")))
(("documentation" 0 8431) ("ancestors" 0 8350) ("parents" 0 8326)
 ("abbreviation" 0 8318) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 6752) ("modemaps" 0 3955) ("sourceFile" 0 3916)
 ("constructorCategory" 0 2063) ("constructorModemap" 0 80)
 ("constructorKind" 0 71) ("constructorForm" 0 56) ("NILADIC" 0 20))