5584                (|QuasiAlgebraicSet2| |vl|)
|package|
(((|QuasiAlgebraicSet2| |#1|)
  (CATEGORY |package|
   (SIGNATURE |radicalSimplify|
    ((|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                          (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                          (|DistributedMultivariatePolynomial| |#1|
                                                               (|Fraction|
                                                                (|Integer|))))
     (|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                          (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                          (|DistributedMultivariatePolynomial| |#1|
                                                               (|Fraction|
                                                                (|Integer|)))))))
  (|List| (|Symbol|)))
 (T |QuasiAlgebraicSet2|))
(CATEGORY |package|
 (SIGNATURE |radicalSimplify|
  ((|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                        (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                        (|DistributedMultivariatePolynomial| |#1|
                                                             (|Fraction|
                                                              (|Integer|))))
   (|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                        (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                        (|DistributedMultivariatePolynomial| |#1|
                                                             (|Fraction|
                                                              (|Integer|)))))))
"/git/fricas/src/algebra/QALGSET2.spad"
((|radicalSimplify| (*1 *2 *2)
  (AND
   (|isDomain| *2
               (|QuasiAlgebraicSet| (|Fraction| (|Integer|))
                                    (|OrderedVariableList| *3)
                                    (|DirectProduct| (|#| *3)
                                                     (|NonNegativeInteger|))
                                    (|DistributedMultivariatePolynomial| *3
                                                                         (|Fraction|
                                                                          (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|QuasiAlgebraicSet2| *3)))))
((|radicalSimplify|
  (((|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                         (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                         (|DistributedMultivariatePolynomial| |#1|
                                                              (|Fraction|
                                                               (|Integer|))))
    (|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                         (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                         (|DistributedMultivariatePolynomial| |#1|
                                                              (|Fraction|
                                                               (|Integer|)))))
   63)))
QALGSET2
((|constructor|
  (NIL
   "\\spadtype{QuasiAlgebraicSet2} adds a function \\spadfun{radicalSimplify} which uses \\spadtype{IdealDecompositionPackage} to simplify the representation of a quasi-algebraic set. A quasi-algebraic set is the intersection of a Zariski closed set,{} defined as the common zeros of a given list of polynomials (the defining polynomials for equations),{} and a principal Zariski open set,{} defined as the complement of the common zeros of a polynomial \\spad{f} (the defining polynomial for the inequation). Quasi-algebraic sets are implemented in the domain \\spadtype{QuasiAlgebraicSet},{} where two simplification routines are provided: \\spadfun{idealSimplify} and \\spadfun{simplify}. The function \\spadfun{radicalSimplify} is added for comparison study only. Because the domain \\spadtype{IdealDecompositionPackage} provides facilities for computing with radical ideals,{} it is necessary to restrict the ground ring to the domain \\spadtype{Fraction Integer},{} and the polynomial ring to be of type \\spadtype{DistributedMultivariatePolynomial}. The routine \\spadfun{radicalSimplify} uses these to compute groebner basis of radical ideals and is inefficient and restricted when compared to the two in \\spadtype{QuasiAlgebraicSet}."))
 (|radicalSimplify|
  (((|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                         (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                         (|DistributedMultivariatePolynomial| |#1|
                                                              (|Fraction|
                                                               (|Integer|))))
    (|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| |#1|)
                         (|DirectProduct| (|#| |#1|) (|NonNegativeInteger|))
                         (|DistributedMultivariatePolynomial| |#1|
                                                              (|Fraction|
                                                               (|Integer|)))))
   "\\spad{radicalSimplify(s)} returns a different and presumably simpler representation of \\spad{s} with the defining polynomials for the equations forming a groebner basis,{} and the defining polynomial for the inequation reduced with respect to the basis,{} using using groebner basis of radical ideals")))
(("documentation" 0 3232) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 3223) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2443) ("modemaps" 0 1788) ("sourceFile" 0 1748)
 ("constructorCategory" 0 955) ("constructorModemap" 0 58)
 ("constructorKind" 0 48) ("constructorForm" 0 20))