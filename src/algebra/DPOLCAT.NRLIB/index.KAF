28519               (|DifferentialPolynomialCategory| R S V E)
|category|
(((|DifferentialPolynomialCategory| |#1| |#2| |#3| |#4|) (|Category|) (|Ring|)
  (|OrderedSet|) (|DifferentialVariableCategory| |t#2|)
  (|OrderedAbelianMonoidSup|))
 (T |DifferentialPolynomialCategory|))
(|Join| (|PolynomialCategory| |t#1| |t#4| |t#3|)
        (|DifferentialExtension| |t#1|) (|RetractableTo| |t#2|)
        (CATEGORY |domain|
         (SIGNATURE |makeVariable|
          ((|Mapping| $ (|NonNegativeInteger|)) |t#2|))
         (SIGNATURE |differentialVariables| ((|List| |t#2|) $))
         (SIGNATURE |order| ((|NonNegativeInteger|) $ |t#2|))
         (SIGNATURE |order| ((|NonNegativeInteger|) $))
         (SIGNATURE |degree| ((|NonNegativeInteger|) $ |t#2|))
         (SIGNATURE |weights| ((|List| (|NonNegativeInteger|)) $))
         (SIGNATURE |weight| ((|NonNegativeInteger|) $))
         (SIGNATURE |weights| ((|List| (|NonNegativeInteger|)) $ |t#2|))
         (SIGNATURE |weight| ((|NonNegativeInteger|) $ |t#2|))
         (SIGNATURE |isobaric?| ((|Boolean|) $)) (SIGNATURE |leader| (|t#3| $))
         (SIGNATURE |initial| ($ $)) (SIGNATURE |separant| ($ $))
         (IF (|has| |t#1| (|DifferentialRing|))
             (PROGN
              (ATTRIBUTE (|InnerEvalable| |t#2| |t#1|))
              (ATTRIBUTE (|InnerEvalable| |t#2| $))
              (ATTRIBUTE (|Evalable| $))
              (SIGNATURE |makeVariable|
               ((|Mapping| $ (|NonNegativeInteger|)) $)))
             |noBranch|)))
"/git/fricas/src/algebra/DPOLCAT.spad"
((|makeVariable| (*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))))
 (|differentialVariables| (*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *4))))
 (|order| (*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 (|order| (*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 (|degree| (*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 (|weights| (*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 (|weight| (*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 (|weights| (*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 (|weight| (*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 (|isobaric?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))))
 (|leader| (*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|DifferentialVariableCategory| *4))))
 (|initial| (*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))
 (|separant| (*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))
 (|makeVariable| (*1 *2 *1)
  (AND (|ofCategory| *3 (|DifferentialRing|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6)))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|weights| (((|List| (|NonNegativeInteger|)) $) 6)
  (((|List| (|NonNegativeInteger|)) $ |#2|) 6))
 (|weight| (((|NonNegativeInteger|) $) 6) (((|NonNegativeInteger|) $ |#2|) 6))
 (|variables| (((|List| |#3|) $) 6))
 (|univariate| (((|SparseUnivariatePolynomial| $) $ |#3|) 6)
  (((|SparseUnivariatePolynomial| |#1|) $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6
   (OR (|has| |#1| (|EntireRing|))
       (AND (|has| |#1| (|IntegralDomain|))
            (|has| $ (|VariablesCommuteWithCoefficients|))))))
 (|unitCanonical|
  (($ $) 6
   (OR (|has| |#1| (|EntireRing|))
       (AND (|has| |#1| (|IntegralDomain|))
            (|has| $ (|VariablesCommuteWithCoefficients|))))))
 (|unit?|
  (((|Boolean|) $) 6
   (OR (|has| |#1| (|EntireRing|))
       (AND (|has| |#1| (|IntegralDomain|))
            (|has| $ (|VariablesCommuteWithCoefficients|))))))
 (|totalDegreeSorted| (((|NonNegativeInteger|) $ (|List| |#3|)) 6))
 (|totalDegree| (((|NonNegativeInteger|) $) 6)
  (((|NonNegativeInteger|) $ (|List| |#3|)) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6))
 (|squareFreePolynomial|
  (((|Factored| (|SparseUnivariatePolynomial| $))
    (|SparseUnivariatePolynomial| $))
   6 (|has| |#1| (|PolynomialFactorizationExplicit|))))
 (|squareFreePart| (($ $) 6 (|has| |#1| (|GcdDomain|))))
 (|squareFree| (((|Factored| $) $) 6 (|has| |#1| (|GcdDomain|))))
 (|solveLinearPolynomialEquation|
  (((|Union| (|List| (|SparseUnivariatePolynomial| $)) #1="failed")
    (|List| (|SparseUnivariatePolynomial| $)) (|SparseUnivariatePolynomial| $))
   6 (|has| |#1| (|PolynomialFactorizationExplicit|))))
 (|smaller?| (((|Boolean|) $ $) 6 (|has| |#1| (|Comparable|))))
 (|separant| (($ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #2="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|retractIfCan|
  (((|Union| (|Integer|) #3="failed") $) 6
   (|has| |#1| (|RetractableTo| (|Integer|))))
  (((|Union| (|Fraction| (|Integer|)) #3#) $) 6
   (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))
  (((|Union| |#1| #3#) $) 6)
  (((|Union| |#3| #3#) $) 6 (|has| |#1| (|SemiRing|)))
  (((|Union| |#2| #3#) $) 6))
 (|retract| (((|Integer|) $) 6 (|has| |#1| (|RetractableTo| (|Integer|))))
            (((|Fraction| (|Integer|)) $) 6
             (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|)))))
            ((|#1| $) 6) ((|#3| $) 6 (|has| |#1| (|SemiRing|))) ((|#2| $) 6))
 (|resultant| (($ $ $ |#3|) 6 (|has| |#1| (|CommutativeRing|))))
 (|reductum| (($ $) 6))
 (|reducedSystem|
  (((|Matrix| (|Integer|)) (|Matrix| $)) 6
   (|and| (|has| |#1| (|LinearlyExplicitOver| (|Integer|)))
    (|has| |#1| (|Ring|))))
  (((|Record| (|:| |mat| (|Matrix| (|Integer|)))
              (|:| |vec| (|Vector| (|Integer|))))
    (|Matrix| $) (|Vector| $))
   6
   (|and| (|has| |#1| (|LinearlyExplicitOver| (|Integer|)))
    (|has| |#1| (|Ring|))))
  (((|Record| (|:| |mat| (|Matrix| |#1|)) (|:| |vec| (|Vector| |#1|)))
    (|Matrix| $) (|Vector| $))
   6 (|has| |#1| (|Ring|)))
  (((|Matrix| |#1|) (|Matrix| $)) 6 (|has| |#1| (|Ring|))))
 (|recip| (((|Union| $ #2#) $) 6))
 (|primitivePart| (($ $) 6 (|has| |#1| (|GcdDomain|)))
  (($ $ |#3|) 6 (|has| |#1| (|GcdDomain|))))
 (|primitiveMonomials| (((|List| $) $) 6 (|has| |#1| (|SemiRing|))))
 (|prime?|
  (((|Boolean|) $) 6 (|has| |#1| (|PolynomialFactorizationExplicit|))))
 (|pomopo!| (($ $ |#1| |#4| $) 6))
 (|patternMatch|
  (((|PatternMatchResult| (|Float|) $) $ (|Pattern| (|Float|))
    (|PatternMatchResult| (|Float|) $))
   6
   (AND (|has| |#3| (|PatternMatchable| (|Float|)))
        (|has| |#1| (|PatternMatchable| (|Float|))) (|has| |#1| (|Ring|))))
  (((|PatternMatchResult| (|Integer|) $) $ (|Pattern| (|Integer|))
    (|PatternMatchResult| (|Integer|) $))
   6
   (AND (|has| |#3| (|PatternMatchable| (|Integer|)))
        (|has| |#1| (|PatternMatchable| (|Integer|))) (|has| |#1| (|Ring|)))))
 (|order| (((|NonNegativeInteger|) $ |#2|) 6) (((|NonNegativeInteger|) $) 6))
 (|opposite?| (((|Boolean|) $ $) 6)) (|one?| (((|Boolean|) $) 6))
 (|numberOfMonomials| (((|NonNegativeInteger|) $) 6))
 (|multivariate| (($ (|SparseUnivariatePolynomial| |#1|) |#3|) 6)
  (($ (|SparseUnivariatePolynomial| $) |#3|) 6))
 (|monomials| (((|List| $) $) 6)) (|monomial?| (((|Boolean|) $) 6))
 (|monomial| (($ |#1| |#4|) 6) (($ $ |#3| (|NonNegativeInteger|)) 6)
  (($ $ (|List| |#3|) (|List| (|NonNegativeInteger|))) 6))
 (|monicDivide|
  (((|Record| (|:| |quotient| $) (|:| |remainder| $)) $ $ |#3|) 6
   (|has| |#1| (|Ring|))))
 (|minimumDegree| ((|#4| $) 6) (((|NonNegativeInteger|) $ |#3|) 6)
  (((|List| (|NonNegativeInteger|)) $ (|List| |#3|)) 6))
 (|mapExponents| (($ (|Mapping| |#4| |#4|) $) 6))
 (|map| (($ (|Mapping| |#1| |#1|) $) 6))
 (|makeVariable| (((|Mapping| $ (|NonNegativeInteger|)) |#2|) 6)
  (((|Mapping| $ (|NonNegativeInteger|)) $) 6
   (|has| |#1| (|DifferentialRing|))))
 (|mainVariable| (((|Union| |#3| "failed") $) 6))
 (|leftRecip| (((|Union| $ #2#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|leadingMonomial| (($ $) 6)) (|leadingCoefficient| ((|#1| $) 6))
 (|leader| ((|#3| $) 6))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) 6
   (|has| |#1| (|GcdDomain|))))
 (|lcm| (($ (|List| $)) 6 (|has| |#1| (|GcdDomain|)))
  (($ $ $) 6 (|has| |#1| (|GcdDomain|))))
 (|latex| (((|String|) $) 6)) (|isobaric?| (((|Boolean|) $) 6))
 (|isTimes| (((|Union| (|List| $) #4="failed") $) 6 (|has| |#1| (|SemiRing|))))
 (|isPlus| (((|Union| (|List| $) #4#) $) 6))
 (|isExpt|
  (((|Union|
     (|Record| (|:| |var| |#3|) (|:| |exponent| (|NonNegativeInteger|))) #4#)
    $)
   6 (|has| |#1| (|SemiRing|))))
 (|initial| (($ $) 6)) (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|ground?| (((|Boolean|) $) 6))
 (|ground| ((|#1| $) 6))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   6 (|has| |#1| (|GcdDomain|))))
 (|gcd| (($ (|List| $)) 6 (|has| |#1| (|GcdDomain|)))
  (($ $ $) 6 (|has| |#1| (|GcdDomain|))))
 (|fmecg| (($ $ |#4| |#1| $) 6 (|has| |#1| (|Ring|))))
 (|factorSquareFreePolynomial|
  (((|Factored| (|SparseUnivariatePolynomial| $))
    (|SparseUnivariatePolynomial| $))
   6 (|has| |#1| (|PolynomialFactorizationExplicit|))))
 (|factorPolynomial|
  (((|Factored| (|SparseUnivariatePolynomial| $))
    (|SparseUnivariatePolynomial| $))
   6 (|has| |#1| (|PolynomialFactorizationExplicit|))))
 (|factor|
  (((|Factored| $) $) 6 (|has| |#1| (|PolynomialFactorizationExplicit|))))
 (|exquo| (((|Union| $ "failed") $ |#1|) 6 (|has| |#1| (|EntireRing|)))
  (((|Union| $ "failed") $ $) 6
   (OR (|has| |#1| (|EntireRing|))
       (AND (|has| |#1| (|IntegralDomain|))
            (|has| $ (|VariablesCommuteWithCoefficients|))))))
 (|eval| (($ $ |#3| |#1|) 6) (($ $ (|List| |#3|) (|List| |#1|)) 6)
         (($ $ |#3| $) 6) (($ $ (|List| |#3|) (|List| $)) 6)
         (($ $ (|List| (|Equation| $))) 6 (|has| |#1| (|SemiRing|)))
         (($ $ (|Equation| $)) 6 (|has| |#1| (|SemiRing|)))
         (($ $ $ $) 6 (|has| |#1| (|SemiRing|)))
         (($ $ (|List| $) (|List| $)) 6 (|has| |#1| (|SemiRing|)))
         (($ $ |#2| $) 6 (|has| |#1| (|DifferentialRing|)))
         (($ $ (|List| |#2|) (|List| $)) 6 (|has| |#1| (|DifferentialRing|)))
         (($ $ |#2| |#1|) 6 (|has| |#1| (|DifferentialRing|)))
         (($ $ (|List| |#2|) (|List| |#1|)) 6
          (|has| |#1| (|DifferentialRing|))))
 (|discriminant| (($ $ |#3|) 6 (|has| |#1| (|CommutativeRing|))))
 (|differentiate|
  (($ $ (|List| |#3|) (|List| (|NonNegativeInteger|))) 6 (|has| |#1| (|Ring|)))
  (($ $ |#3| (|NonNegativeInteger|)) 6 (|has| |#1| (|Ring|)))
  (($ $ (|List| |#3|)) 6 (|has| |#1| (|Ring|)))
  (($ $ |#3|) 6 (|has| |#1| (|Ring|)))
  (($ $) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|NonNegativeInteger|)) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|Symbol|)) 6 (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Mapping| |#1| |#1|) (|NonNegativeInteger|)) 6)
  (($ $ (|Mapping| |#1| |#1|)) 6))
 (|differentialVariables| (((|List| |#2|) $) 6))
 (|degree| ((|#4| $) 6) (((|NonNegativeInteger|) $ |#3|) 6)
  (((|List| (|NonNegativeInteger|)) $ (|List| |#3|)) 6)
  (((|NonNegativeInteger|) $ |#2|) 6))
 (|convert|
  (((|Pattern| (|Float|)) $) 6
   (AND (|has| |#3| (|ConvertibleTo| (|Pattern| (|Float|))))
        (|has| |#1| (|ConvertibleTo| (|Pattern| (|Float|))))
        (|has| |#1| (|Ring|))))
  (((|Pattern| (|Integer|)) $) 6
   (AND (|has| |#3| (|ConvertibleTo| (|Pattern| (|Integer|))))
        (|has| |#1| (|ConvertibleTo| (|Pattern| (|Integer|))))
        (|has| |#1| (|Ring|))))
  (((|InputForm|) $) 6
   (AND (|has| |#3| (|ConvertibleTo| (|InputForm|)))
        (|has| |#1| (|ConvertibleTo| (|InputForm|))))))
 (|content| ((|#1| $) 6 (|has| |#1| (|GcdDomain|)))
  (($ $ |#3|) 6 (|has| |#1| (|GcdDomain|))))
 (|conditionP|
  (((|Union| (|Vector| $) #1#) (|Matrix| $)) 6
   (|and| (|has| $ (|CharacteristicNonZero|))
    (|has| |#1| (|PolynomialFactorizationExplicit|)))))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6)
           (($ (|Fraction| (|Integer|))) 6
            (OR (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|))))
                (|has| |#1| (|Algebra| (|Fraction| (|Integer|))))))
           (($ |#1|) 6)
           (($ $) 6
            (OR (|has| |#1| (|GcdDomain|))
                (AND (|has| |#1| (|CommutativeRing|))
                     (|has| $ (|VariablesCommuteWithCoefficients|)))
                (AND (|has| |#1| (|IntegralDomain|))
                     (|has| $ (|VariablesCommuteWithCoefficients|)))))
           (($ |#3|) 6 (|has| |#1| (|SemiRing|))) (($ (|Integer|)) 6)
           (($ |#2|) 6))
 (|coefficients| (((|List| |#1|) $) 6))
 (|coefficient| ((|#1| $ |#4|) 6) (($ $ |#3| (|NonNegativeInteger|)) 6)
  (($ $ (|List| |#3|) (|List| (|NonNegativeInteger|))) 6))
 (|charthRoot|
  (((|Union| $ #1#) $) 6
   (OR
    (|and| (|has| $ (|CharacteristicNonZero|))
     (|has| |#1| (|PolynomialFactorizationExplicit|)))
    (|has| |#1| (|CharacteristicNonZero|)))))
 (|characteristic| (((|NonNegativeInteger|)) 6))
 (|binomThmExpt|
  (($ $ $ (|NonNegativeInteger|)) 6 (|has| $ (|CommutativeRing|))))
 (|associator| (($ $ $ $) 6))
 (|associates?|
  (((|Boolean|) $ $) 6
   (OR (|has| |#1| (|EntireRing|))
       (AND (|has| |#1| (|IntegralDomain|))
            (|has| $ (|VariablesCommuteWithCoefficients|))))))
 (|antiCommutator| (($ $ $) 6)) (|annihilate?| (((|Boolean|) $ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST))
 (D
  (($ $ (|List| |#3|) (|List| (|NonNegativeInteger|))) 6 (|has| |#1| (|Ring|)))
  (($ $ |#3| (|NonNegativeInteger|)) 6 (|has| |#1| (|Ring|)))
  (($ $ (|List| |#3|)) 6 (|has| |#1| (|Ring|)))
  (($ $ |#3|) 6 (|has| |#1| (|Ring|)))
  (($ $) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|NonNegativeInteger|)) 6 (|has| |#1| (|DifferentialRing|)))
  (($ $ (|Symbol|)) 6 (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) 6
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Mapping| |#1| |#1|) (|NonNegativeInteger|)) 6)
  (($ $ (|Mapping| |#1| |#1|)) 6))
 (= (((|Boolean|) $ $) 6)) (/ (($ $ |#1|) 6 (|has| |#1| (|Field|))))
 (- (($ $) 6) (($ $ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ $ |#1|) 6) (($ |#1| $) 6)
    (($ (|Fraction| (|Integer|)) $) 6
     (|has| |#1| (|Algebra| (|Fraction| (|Integer|)))))
    (($ $ (|Fraction| (|Integer|))) 6
     (|has| |#1| (|Algebra| (|Fraction| (|Integer|)))))
    (($ (|NonNegativeInteger|) $) 6) (($ (|Integer|) $) 6)))
DPOLCAT
(((|PolynomialCategory| |#1| |#4| |#3|) . T)
 ((|DifferentialExtension| |#1|) . T) ((|RetractableTo| |#2|) . T)
 ((|Evalable| $) |has| |#1| (|DifferentialRing|))
 ((|InnerEvalable| |#2| $) |has| |#1| (|DifferentialRing|))
 ((|InnerEvalable| |#2| |#1|) |has| |#1| (|DifferentialRing|)))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T)
 ((|AbelianMonoidRing| |t#1| |t#2|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) |has| |t#1|
  (|Algebra| (|Fraction| (|Integer|))))
 ((|Algebra| $) OR (|has| |t#1| (|GcdDomain|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|Algebra| |t#1|) AND (|has| $ (|VariablesCommuteWithCoefficients|))
  (|has| |t#1| (|CommutativeRing|)))
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) . T)
 ((|CharacteristicNonZero|) |has| |t#1| (|CharacteristicNonZero|))
 ((|CharacteristicZero|) |has| |t#1| (|CharacteristicZero|))
 ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CommutativeRing|) OR (|has| |t#1| (|GcdDomain|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|CommutativeStar|) OR (|has| |t#1| (|GcdDomain|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|Comparable|) |has| |t#1| (|Comparable|))
 ((|ConvertibleTo| (|Pattern| (|Integer|))) AND
  (|has| |t#1| (|ConvertibleTo| (|Pattern| (|Integer|))))
  (|has| |t#1| (|Ring|))
  (|has| |t#3| (|ConvertibleTo| (|Pattern| (|Integer|)))))
 ((|ConvertibleTo| (|Pattern| (|Float|))) AND
  (|has| |t#1| (|ConvertibleTo| (|Pattern| (|Float|)))) (|has| |t#1| (|Ring|))
  (|has| |t#3| (|ConvertibleTo| (|Pattern| (|Float|)))))
 ((|ConvertibleTo| (|InputForm|)) AND
  (|has| |t#1| (|ConvertibleTo| (|InputForm|)))
  (|has| |t#3| (|ConvertibleTo| (|InputForm|))))
 ((|DifferentialExtension| |#1|) . T)
 ((|DifferentialRing|) |has| |t#1| (|DifferentialRing|))
 ((|EntireRing|) OR (|has| |t#1| (|EntireRing|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|))))
 ((|Evalable| $) OR (|has| |t#1| (|SemiRing|))
  (|has| |#1| (|DifferentialRing|)))
 ((|FiniteAbelianMonoidRing| |t#1| |t#2|) . T)
 ((|FullyLinearlyExplicitOver| |t#1|) |has| |t#1| (|Ring|))
 ((|FullyRetractableTo| |t#1|) . T) ((|GcdDomain|) |has| |t#1| (|GcdDomain|))
 ((|InnerEvalable| |#2| |#1|) |has| |#1| (|DifferentialRing|))
 ((|InnerEvalable| |#2| $) |has| |#1| (|DifferentialRing|))
 ((|InnerEvalable| |t#1| |t#1|) OR (|has| |t#1| (|SemiRing|))
  (|has| |#1| (|DifferentialRing|)))
 ((|InnerEvalable| |t#3| $) . T) ((|InnerEvalable| |t#3| |t#1|) . T)
 ((|IntegralDomain|) OR (|has| |t#1| (|GcdDomain|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|))))
 ((|LeftModule| |t#1|) . T) ((|LeftOreRing|) |has| |t#1| (|GcdDomain|))
 ((|LinearlyExplicitOver| (|Integer|)) AND
  (|has| |t#1| (|LinearlyExplicitOver| (|Integer|))) (|has| |t#1| (|Ring|)))
 ((|LinearlyExplicitOver| |t#1|) |has| |t#1| (|Ring|)) ((|Magma|) . T)
 ((|MagmaWithUnit|) . T)
 ((|MaybeSkewPolynomialCategory| |t#1| |t#2| |t#3|) . T)
 ((|Module| |t#1|) OR (|has| |t#1| (|GcdDomain|))
  (|has| |t#1| (|Algebra| (|Fraction| (|Integer|))))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|Monoid|) . T) ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|PartialDifferentialRing| (|Symbol|)) |has| |t#1|
  (|PartialDifferentialRing| (|Symbol|)))
 ((|PartialDifferentialRing| |t#3|) |has| |t#1| (|Ring|))
 ((|PatternMatchable| (|Integer|)) AND
  (|has| |t#1| (|PatternMatchable| (|Integer|))) (|has| |t#1| (|Ring|))
  (|has| |t#3| (|PatternMatchable| (|Integer|))))
 ((|PatternMatchable| (|Float|)) AND
  (|has| |t#1| (|PatternMatchable| (|Float|))) (|has| |t#1| (|Ring|))
  (|has| |t#3| (|PatternMatchable| (|Float|))))
 ((|PolynomialCategory| |#1| |#4| |#3|) . T)
 ((|PolynomialFactorizationExplicit|) |has| |t#1|
  (|PolynomialFactorizationExplicit|))
 ((|RetractableTo| |#2|) . T)
 ((|RetractableTo| |t#3|) |has| |t#1| (|SemiRing|))
 ((|RetractableTo| (|Fraction| (|Integer|))) |has| |t#1|
  (|RetractableTo| (|Fraction| (|Integer|))))
 ((|RetractableTo| (|Integer|)) |has| |t#1| (|RetractableTo| (|Integer|)))
 ((|RetractableTo| |t#1|) . T) ((|RightModule| |t#2|) . T) ((|Ring|) . T)
 ((|Rng|) . T) ((|SemiGroup|) . T) ((|SemiRing|) . T) ((|SemiRng|) . T)
 ((|SetCategory|) . T)
 ((|TwoSidedRecip|) OR (|has| |t#1| (|GcdDomain|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|)))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|CommutativeRing|))))
 ((|UniqueFactorizationDomain|) |has| |t#1|
  (|PolynomialFactorizationExplicit|))
 ((|VariablesCommuteWithCoefficients|) . T)
 ((|canonicalUnitNormal|) |has| |t#1| (|canonicalUnitNormal|))
 ((|noZeroDivisors|) OR (|has| |t#1| (|EntireRing|))
  (AND (|has| $ (|VariablesCommuteWithCoefficients|))
       (|has| |t#1| (|IntegralDomain|))))
 ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "\\spadtype{DifferentialPolynomialCategory} is a category constructor specifying basic functions in an ordinary differential polynomial ring with a given ordered set of differential indeterminates. In addition,{} it implements defaults for the basic functions. The functions \\spadfun{order} and \\spadfun{weight} are extended from the set of derivatives of differential indeterminates to the set of differential polynomials. Other operations provided on differential polynomials are \\spadfun{leader},{} \\spadfun{initial},{} \\spadfun{separant},{} \\spadfun{differentialVariables},{} and \\spadfun{isobaric?}. Furthermore,{} if the ground ring is a differential ring,{} then evaluation (substitution of differential indeterminates by elements of the ground ring or by differential polynomials) is provided by \\spadfun{eval}. A convenient way of referencing derivatives is provided by the functions \\spadfun{makeVariable}. \\blankline To construct a domain using this constructor,{} one needs to provide a ground ring \\spad{R},{} an ordered set \\spad{S} of differential indeterminates,{} a ranking \\spad{V} on the set of derivatives of the differential indeterminates,{} and a set \\spad{E} of exponents in bijection with the set of differential monomials in the given differential indeterminates. \\blankline"))
 (|separant|
  (($ $)
   "\\spad{separant(p)} returns the partial derivative of the differential polynomial \\spad{p} with respect to its leader."))
 (|initial|
  (($ $)
   "\\spad{initial(p)} returns the leading coefficient when the differential polynomial \\spad{p} is written as a univariate polynomial in its leader."))
 (|leader|
  ((|#3| $)
   "\\spad{leader(p)} returns the derivative of the highest rank appearing in the differential polynomial \\spad{p} Note: an error occurs if \\spad{p} is in the ground ring."))
 (|isobaric?|
  (((|Boolean|) $)
   "\\spad{isobaric?(p)} returns \\spad{true} if every differential monomial appearing in the differential polynomial \\spad{p} has same weight,{} and returns \\spad{false} otherwise."))
 (|weight|
  (((|NonNegativeInteger|) $ |#2|)
   "\\spad{weight(p,{} s)} returns the maximum weight of all differential monomials appearing in the differential polynomial \\spad{p} when \\spad{p} is viewed as a differential polynomial in the differential indeterminate \\spad{s} alone.")
  (((|NonNegativeInteger|) $)
   "\\spad{weight(p)} returns the maximum weight of all differential monomials appearing in the differential polynomial \\spad{p}."))
 (|weights|
  (((|List| (|NonNegativeInteger|)) $ |#2|)
   "\\spad{weights(p,{} s)} returns a list of weights of differential monomials appearing in the differential polynomial \\spad{p} when \\spad{p} is viewed as a differential polynomial in the differential indeterminate \\spad{s} alone.")
  (((|List| (|NonNegativeInteger|)) $)
   "\\spad{weights(p)} returns a list of weights of differential monomials appearing in differential polynomial \\spad{p}."))
 (|degree|
  (((|NonNegativeInteger|) $ |#2|)
   "\\spad{degree(p,{} s)} returns the maximum degree of the differential polynomial \\spad{p} viewed as a differential polynomial in the differential indeterminate \\spad{s} alone."))
 (|order|
  (((|NonNegativeInteger|) $)
   "\\spad{order(p)} returns the order of the differential polynomial \\spad{p},{} which is the maximum number of differentiations of a differential indeterminate,{} among all those appearing in \\spad{p}.")
  (((|NonNegativeInteger|) $ |#2|)
   "\\spad{order(p,{} s)} returns the order of the differential polynomial \\spad{p} in differential indeterminate \\spad{s}."))
 (|differentialVariables|
  (((|List| |#2|) $)
   "\\spad{differentialVariables(p)} returns a list of differential indeterminates occurring in a differential polynomial \\spad{p}."))
 (|makeVariable|
  (((|Mapping| $ (|NonNegativeInteger|)) $)
   "\\spad{makeVariable(p)} views \\spad{p} as an element of a differential ring,{} in such a way that the \\spad{n}-th derivative of \\spad{p} may be simply referenced as \\spad{z}.\\spad{n} where \\spad{z} \\spad{:=} makeVariable(\\spad{p}). Note: In the interpreter,{} \\spad{z} is given as an internal map,{} which may be ignored.")
  (((|Mapping| $ (|NonNegativeInteger|)) |#2|)
   "\\spad{makeVariable(s)} views \\spad{s} as a differential indeterminate,{} in such a way that the \\spad{n}-th derivative of \\spad{s} may be simply referenced as \\spad{z}.\\spad{n} where \\spad{z} \\spad{:=} makeVariable(\\spad{s}). Note: In the interpreter,{} \\spad{z} is given as an internal map,{} which may be ignored.")))
(("documentation" 0 23914) ("ancestors" 0 18674) ("parents" 0 18388)
 ("abbreviation" 0 18380) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 6044) ("modemaps" 0 1542) ("sourceFile" 0 1503)
 ("constructorCategory" 0 279) ("constructorModemap" 0 74)
 ("constructorKind" 0 63) ("constructorForm" 0 20))