2815                (MAKEPROP '|OpenMathErrorKind| 'NILADIC T)
(|OpenMathErrorKind|)
|domain|
(((|OpenMathErrorKind|)
  (|Join| (|SetCategory|)
          (CATEGORY |domain| (SIGNATURE |coerce| ($ (|Symbol|)))
           (SIGNATURE |OMParseError?| ((|Boolean|) $))
           (SIGNATURE |OMUnknownCD?| ((|Boolean|) $))
           (SIGNATURE |OMUnknownSymbol?| ((|Boolean|) $))
           (SIGNATURE |OMReadError?| ((|Boolean|) $)))))
 (T |OpenMathErrorKind|))
(|Join| (|SetCategory|)
        (CATEGORY |domain| (SIGNATURE |coerce| ($ (|Symbol|)))
         (SIGNATURE |OMParseError?| ((|Boolean|) $))
         (SIGNATURE |OMUnknownCD?| ((|Boolean|) $))
         (SIGNATURE |OMUnknownSymbol?| ((|Boolean|) $))
         (SIGNATURE |OMReadError?| ((|Boolean|) $))))
"/git/fricas/src/algebra/OMERRK.spad"
((|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|Symbol|))
                (|isDomain| *1 (|OpenMathErrorKind|))))
 (|OMParseError?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 (|OMUnknownCD?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 (|OMUnknownSymbol?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 (|OMReadError?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|)))))
((~= (((|Boolean|) $ $) NIL)) (|latex| (((|String|) $) NIL))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|coerce| (((|OutputForm|) $) 20) (($ (|Symbol|)) 15))
 (|OMUnknownSymbol?| (((|Boolean|) $) 10)) (|OMUnknownCD?| (((|Boolean|) $) 9))
 (|OMReadError?| (((|Boolean|) $) 11)) (|OMParseError?| (((|Boolean|) $) 8))
 (= (((|Boolean|) $ $) 17)))
OMERRK
(((|SetCategory|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "\\spadtype{OpenMathErrorKind} represents different kinds of OpenMath errors: specifically parse errors,{} unknown \\spad{CD} or symbol errors,{} and read errors."))
 (|OMReadError?|
  (((|Boolean|) $)
   "\\spad{OMReadError?(u)} tests whether \\spad{u} is an OpenMath read error."))
 (|OMUnknownSymbol?|
  (((|Boolean|) $)
   "\\spad{OMUnknownSymbol?(u)} tests whether \\spad{u} is an OpenMath unknown symbol error."))
 (|OMUnknownCD?|
  (((|Boolean|) $)
   "\\spad{OMUnknownCD?(u)} tests whether \\spad{u} is an OpenMath unknown \\spad{CD} error."))
 (|OMParseError?|
  (((|Boolean|) $)
   "\\spad{OMParseError?(u)} tests whether \\spad{u} is an OpenMath parsing error."))
 (|coerce|
  (($ (|Symbol|))
   "\\spad{coerce(u)} creates an OpenMath error object of an appropriate type if \\spad{u} is one of \\spad{OMParseError},{} \\spad{OMReadError},{} \\spad{OMUnknownCD} or \\spad{OMUnknownSymbol},{} otherwise it raises a runtime error.")))
(("documentation" 0 1846) ("ancestors" 0 1765) ("parents" 0 1741)
 ("abbreviation" 0 1734) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1338) ("modemaps" 0 799) ("sourceFile" 0 761)
 ("constructorCategory" 0 459) ("constructorModemap" 0 94)
 ("constructorKind" 0 85) ("constructorForm" 0 63) ("NILADIC" 0 20))