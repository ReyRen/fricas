5951                (|FreeGroup| S)
|domain|
(((|FreeGroup| |#1|)
  (|Join| (|Group|) (|RetractableTo| |#1|)
          (CATEGORY |domain| (SIGNATURE * ($ |#1| $)) (SIGNATURE * ($ $ |#1|))
           (SIGNATURE ^ ($ |#1| (|Integer|)))
           (SIGNATURE |size| ((|NonNegativeInteger|) $))
           (SIGNATURE |nthExpon| ((|Integer|) $ (|Integer|)))
           (SIGNATURE |nthFactor| (|#1| $ (|Integer|)))
           (SIGNATURE |mapExpon| ($ (|Mapping| (|Integer|) (|Integer|)) $))
           (SIGNATURE |mapGen| ($ (|Mapping| |#1| |#1|) $))
           (SIGNATURE |factors|
            ((|List| (|Record| (|:| |gen| |#1|) (|:| |exp| (|Integer|)))) $))
           (IF (|has| |#1| (|Comparable|))
               (ATTRIBUTE (|Comparable|))
               |noBranch|)))
  (|SetCategory|))
 (T |FreeGroup|))
(|Join| (|Group|) (|RetractableTo| |#1|)
        (CATEGORY |domain| (SIGNATURE * ($ |#1| $)) (SIGNATURE * ($ $ |#1|))
         (SIGNATURE ^ ($ |#1| (|Integer|)))
         (SIGNATURE |size| ((|NonNegativeInteger|) $))
         (SIGNATURE |nthExpon| ((|Integer|) $ (|Integer|)))
         (SIGNATURE |nthFactor| (|#1| $ (|Integer|)))
         (SIGNATURE |mapExpon| ($ (|Mapping| (|Integer|) (|Integer|)) $))
         (SIGNATURE |mapGen| ($ (|Mapping| |#1| |#1|) $))
         (SIGNATURE |factors|
          ((|List| (|Record| (|:| |gen| |#1|) (|:| |exp| (|Integer|)))) $))
         (IF (|has| |#1| (|Comparable|))
             (ATTRIBUTE (|Comparable|))
             |noBranch|)))
"/git/fricas/src/algebra/FGROUP.spad"
((* (*1 *1 *2 *1)
    (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 (* (*1 *1 *1 *2)
    (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 (^ (*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (|size| (*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 (|nthExpon| (*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 (|nthFactor| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 (|mapExpon| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 (|mapGen| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeGroup| *3))))
 (|factors| (*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|)))))
   (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|)))))
((~= (((|Boolean|) $ $) NIL))
 (|smaller?| (((|Boolean|) $ $) 45 (|has| |#1| (|Comparable|))))
 (|size| (((|NonNegativeInteger|) $) NIL)) (|sample| (($) NIL T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|retractIfCan| (((|Union| |#1| "failed") $) NIL)) (|retract| ((|#1| $) NIL))
 (|recip| (((|Union| $ #1#) $) NIL)) (|one?| (((|Boolean|) $) 14))
 (|nthFactor| ((|#1| $ (|Integer|)) NIL))
 (|nthExpon| (((|Integer|) $ (|Integer|)) NIL))
 (|mapGen| (($ (|Mapping| |#1| |#1|) $) 32))
 (|mapExpon| (($ (|Mapping| (|Integer|) (|Integer|)) $) 24))
 (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|latex| (((|String|) $) NIL)) (|inv| (($ $) 26))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|factors|
  (((|List| (|Record| (|:| |gen| |#1|) (|:| |exp| (|Integer|)))) $) 28))
 (|conjugate| (($ $ $) NIL)) (|commutator| (($ $ $) NIL))
 (|coerce| (((|OutputForm|) $) 38) (($ |#1|) NIL))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL)
  (($ $ (|Integer|)) NIL) (($ |#1| (|Integer|)) 17))
 (|One| (($) 7 T CONST)) (= (((|Boolean|) $ $) NIL)) (/ (($ $ $) NIL))
 (* (($ $ $) 43) (($ |#1| $) 21) (($ $ |#1|) 19)))
((|HasCategory| |#1| '(|Comparable|)))
FGROUP
(((|Group|) . T) ((|RetractableTo| |#1|) . T)
 ((|Comparable|) |has| |#1| (|Comparable|)))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|Comparable|) |has| |#1| (|Comparable|)) ((|Group|) . T) ((|Magma|) . T)
 ((|MagmaWithUnit|) . T) ((|Monoid|) . T) ((|RetractableTo| |#1|) . T)
 ((|SemiGroup|) . T) ((|SetCategory|) . T) ((|TwoSidedRecip|) . T)
 ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "The free group on a set \\spad{S} is the group of finite products of the form \\spad{reduce(*,{} [\\spad{si} ^ \\spad{ni}])} where the \\spad{si}\\spad{'s} are in \\spad{S},{} and the \\spad{ni}\\spad{'s} are integers. The multiplication is not commutative."))
 (|factors|
  (((|List| (|Record| (|:| |gen| |#1|) (|:| |exp| (|Integer|)))) $)
   "\\spad{factors(a1\\^e1,{} ...,{} an\\^en)} returns \\spad{[[a1,{} e1],{} ...,{} [an,{} en]]}."))
 (|mapGen|
  (($ (|Mapping| |#1| |#1|) $)
   "\\spad{mapGen(f,{} a1\\^e1 ... an\\^en)} returns \\spad{f(a1)\\^e1 ... f(an)\\^en}."))
 (|mapExpon|
  (($ (|Mapping| (|Integer|) (|Integer|)) $)
   "\\spad{mapExpon(f,{} a1\\^e1 ... an\\^en)} returns \\spad{a1\\^f(e1) ... an\\^f(en)}."))
 (|nthFactor|
  ((|#1| $ (|Integer|))
   "\\spad{nthFactor(x,{} n)} returns the factor of the n^th monomial of \\spad{x}."))
 (|nthExpon|
  (((|Integer|) $ (|Integer|))
   "\\spad{nthExpon(x,{} n)} returns the exponent of the n^th monomial of \\spad{x}."))
 (|size|
  (((|NonNegativeInteger|) $)
   "\\spad{size(x)} returns the number of monomials in \\spad{x}."))
 (^
  (($ |#1| (|Integer|))
   "\\spad{s ^ n} returns the product of \\spad{s} by itself \\spad{n} times."))
 (*
  (($ $ |#1|)
   "\\spad{x * s} returns the product of \\spad{x} by \\spad{s} on the right.")
  (($ |#1| $)
   "\\spad{s * x} returns the product of \\spad{x} by \\spad{s} on the left.")))
(("documentation" 0 4531) ("ancestors" 0 4236) ("parents" 0 4145)
 ("abbreviation" 0 4138) ("predicates" 0 4099) ("superDomain" 0 NIL)
 ("operationAlist" 0 2746) ("modemaps" 0 1521) ("sourceFile" 0 1483)
 ("constructorCategory" 0 806) ("constructorModemap" 0 45)
 ("constructorKind" 0 36) ("constructorForm" 0 20))