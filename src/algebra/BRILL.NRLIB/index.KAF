3811                (|BrillhartTests| UP)
|package|
(((|BrillhartTests| |#1|)
  (CATEGORY |package| (SIGNATURE |brillhartIrreducible?| ((|Boolean|) |#1|))
   (SIGNATURE |brillhartIrreducible?| ((|Boolean|) |#1| (|Boolean|)))
   (SIGNATURE |brillhartTrials| ((|NonNegativeInteger|)))
   (SIGNATURE |brillhartTrials|
    ((|NonNegativeInteger|) (|NonNegativeInteger|)))
   (SIGNATURE |noLinearFactor?| ((|Boolean|) |#1|)))
  (|UnivariatePolynomialCategory| (|Integer|)))
 (T |BrillhartTests|))
(CATEGORY |package| (SIGNATURE |brillhartIrreducible?| ((|Boolean|) |#1|))
 (SIGNATURE |brillhartIrreducible?| ((|Boolean|) |#1| (|Boolean|)))
 (SIGNATURE |brillhartTrials| ((|NonNegativeInteger|)))
 (SIGNATURE |brillhartTrials| ((|NonNegativeInteger|) (|NonNegativeInteger|)))
 (SIGNATURE |noLinearFactor?| ((|Boolean|) |#1|)))
"/git/fricas/src/algebra/BRILL.spad"
((|noLinearFactor?| (*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 (|brillhartTrials| (*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 (|brillhartTrials| (*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 (|brillhartIrreducible?| (*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 (|brillhartIrreducible?| (*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))))
((|noLinearFactor?| (((|Boolean|) |#1|) 24))
 (|brillhartTrials| (((|NonNegativeInteger|) (|NonNegativeInteger|)) 23)
  (((|NonNegativeInteger|)) 22))
 (|brillhartIrreducible?| (((|Boolean|) |#1| (|Boolean|)) 25)
  (((|Boolean|) |#1|) 26)))
BRILL
((|constructor|
  (NIL
   "\\indented{1}{Author: Frederic Lehobey,{} James \\spad{H}. Davenport} Date Created: 28 June 1994 Basic Operations: brillhartIrreducible? Related Domains: Also See: AMS Classifications: Keywords: factorization Examples: References: [1] John Brillhart,{} Note on Irreducibility Testing,{} Mathematics of Computation,{} vol. 35,{} num. 35,{} Oct. 1980,{} 1379-1381 [2] James Davenport,{} On Brillhart Irreducibility. To appear. [3] John Brillhart,{} On the Euler and Bernoulli polynomials,{} \\spad{J}. Reine Angew. Math.,{} \\spad{v}. 234,{} (1969),{} \\spad{pp}. 45-64"))
 (|noLinearFactor?|
  (((|Boolean|) |#1|)
   "\\spad{noLinearFactor?(p)} returns \\spad{true} if \\spad{p} can be shown to have no linear factor by a theorem of Lehmer,{} \\spad{false} else. \\spad{I} insist on the fact that \\spad{false} does not mean that \\spad{p} has a linear factor."))
 (|brillhartTrials|
  (((|NonNegativeInteger|) (|NonNegativeInteger|))
   "\\spad{brillhartTrials(n)} sets to \\spad{n} the number of tests in \\spadfun{brillhartIrreducible?} and returns the previous value.")
  (((|NonNegativeInteger|))
   "\\spad{brillhartTrials()} returns the number of tests in \\spadfun{brillhartIrreducible?}."))
 (|brillhartIrreducible?|
  (((|Boolean|) |#1| (|Boolean|))
   "\\spad{brillhartIrreducible?(p,{} noLinears)} returns \\spad{true} if \\spad{p} can be shown to be irreducible by a remark of Brillhart,{} \\spad{false} else. If noLinears is \\spad{true},{} we are being told \\spad{p} has no linear factors \\spad{false} does not mean that \\spad{p} is reducible.")
  (((|Boolean|) |#1|)
   "\\spad{brillhartIrreducible?(p)} returns \\spad{true} if \\spad{p} can be shown to be irreducible by a remark of Brillhart,{} \\spad{false} is inconclusive.")))
(("documentation" 0 2034) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 2028) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 1787) ("modemaps" 0 858) ("sourceFile" 0 821)
 ("constructorCategory" 0 492) ("constructorModemap" 0 52)
 ("constructorKind" 0 42) ("constructorForm" 0 20))