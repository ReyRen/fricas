6352                (|Kernel| S)
|domain|
(((|Kernel| |#1|)
  (|Join| (|CachableSet|) (|OrderedSet|) (|Patternable| |#1|)
          (CATEGORY |domain| (SIGNATURE |name| ((|Symbol|) $))
           (SIGNATURE |operator| ((|BasicOperator|) $))
           (SIGNATURE |argument| ((|List| |#1|) $))
           (SIGNATURE |height| ((|NonNegativeInteger|) $))
           (SIGNATURE |kernel|
            ($ (|BasicOperator|) (|List| |#1|) (|NonNegativeInteger|)))
           (SIGNATURE |kernel| ($ (|Symbol|)))
           (SIGNATURE |symbolIfCan| ((|Union| (|Symbol|) "failed") $))
           (SIGNATURE |is?| ((|Boolean|) $ (|BasicOperator|)))
           (SIGNATURE |is?| ((|Boolean|) $ (|Symbol|)))
           (IF (|has| |#1| (|ConvertibleTo| (|InputForm|)))
               (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
               |noBranch|)))
  (|Comparable|))
 (T |Kernel|))
(|Join| (|CachableSet|) (|OrderedSet|) (|Patternable| |#1|)
        (CATEGORY |domain| (SIGNATURE |name| ((|Symbol|) $))
         (SIGNATURE |operator| ((|BasicOperator|) $))
         (SIGNATURE |argument| ((|List| |#1|) $))
         (SIGNATURE |height| ((|NonNegativeInteger|) $))
         (SIGNATURE |kernel|
          ($ (|BasicOperator|) (|List| |#1|) (|NonNegativeInteger|)))
         (SIGNATURE |kernel| ($ (|Symbol|)))
         (SIGNATURE |symbolIfCan| ((|Union| (|Symbol|) "failed") $))
         (SIGNATURE |is?| ((|Boolean|) $ (|BasicOperator|)))
         (SIGNATURE |is?| ((|Boolean|) $ (|Symbol|)))
         (IF (|has| |#1| (|ConvertibleTo| (|InputForm|)))
             (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
             |noBranch|)))
"/git/fricas/src/algebra/KERNEL.spad"
((|name| (*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|operator| (*1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|argument| (*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|height| (*1 *2 *1)
           (AND (|isDomain| *2 (|NonNegativeInteger|))
                (|isDomain| *1 (|Kernel| *3))
                (|ofCategory| *3 (|Comparable|))))
 (|kernel| (*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|Kernel| *5))))
 (|kernel| (*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|symbolIfCan| (*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
   (|ofCategory| *3 (|Comparable|))))
 (|is?| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))))
 (|is?| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|)))))
((~= (((|Boolean|) $ $) NIL))
 (|symbolIfCan| (((|Union| (|Symbol|) "failed") $) 42))
 (|smaller?| (((|Boolean|) $ $) NIL))
 (|setPosition| (((|Void|) $ (|NonNegativeInteger|)) 15))
 (|position| (((|NonNegativeInteger|) $) 13))
 (|operator| (((|BasicOperator|) $) 8)) (|name| (((|Symbol|) $) 33))
 (|min| (($ $ $) NIL)) (|max| (($ $ $) NIL)) (|latex| (((|String|) $) NIL))
 (|kernel| (($ (|BasicOperator|) (|List| |#1|) (|NonNegativeInteger|)) 36)
  (($ (|Symbol|)) 37))
 (|is?| (((|Boolean|) $ (|BasicOperator|)) 31) (((|Boolean|) $ (|Symbol|)) 29))
 (|height| (((|NonNegativeInteger|) $) 12))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|convert|
  (((|Pattern| (|Integer|)) $) 84
   (|has| |#1| (|ConvertibleTo| (|Pattern| (|Integer|)))))
  (((|Pattern| (|Float|)) $) 89
   (|has| |#1| (|ConvertibleTo| (|Pattern| (|Float|)))))
  (((|InputForm|) $) 77 (|has| |#1| (|ConvertibleTo| (|InputForm|)))))
 (|coerce| (((|OutputForm|) $) 62)) (|argument| (((|List| |#1|) $) 10))
 (>= (((|Boolean|) $ $) NIL)) (> (((|Boolean|) $ $) NIL))
 (= (((|Boolean|) $ $) 50)) (<= (((|Boolean|) $ $) NIL))
 (< (((|Boolean|) $ $) 51)))
((|HasCategory| |#1| (LIST '|ConvertibleTo| (LIST '|Pattern| '(|Float|))))
 (|HasCategory| |#1| (LIST '|ConvertibleTo| (LIST '|Pattern| '(|Integer|))))
 (|HasCategory| |#1| (LIST '|ConvertibleTo| '(|InputForm|))))
KERNEL
(((|CachableSet|) . T) ((|OrderedSet|) . T) ((|Patternable| |#1|) . T)
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|))))
(((|BasicType|) . T) ((|CachableSet|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|Comparable|) . T)
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|)))
 ((|ConvertibleTo| (|Pattern| (|Float|))) |has| |t#1|
  (|ConvertibleTo| (|Pattern| (|Float|))))
 ((|ConvertibleTo| (|Pattern| (|Integer|))) |has| |t#1|
  (|ConvertibleTo| (|Pattern| (|Integer|))))
 ((|OrderedSet|) . T) ((|PartialOrder|) . T) ((|Patternable| |#1|) . T)
 ((|SetCategory|) . T))
((|constructor|
  (NIL
   "A kernel over a set \\spad{S} is an operator applied to a given list of arguments from \\spad{S}."))
 (|is?|
  (((|Boolean|) $ (|Symbol|))
   "\\spad{is?(op(a1,{} ...,{} an),{} s)} tests if the name of op is \\spad{s}.")
  (((|Boolean|) $ (|BasicOperator|))
   "\\spad{is?(op(a1,{} ...,{} an),{} f)} tests if op = \\spad{f}."))
 (|symbolIfCan|
  (((|Union| (|Symbol|) "failed") $)
   "\\spad{symbolIfCan(k)} returns \\spad{k} viewed as a symbol if \\spad{k} is a symbol,{} and \"failed\" otherwise."))
 (|kernel|
  (($ (|Symbol|)) "\\spad{kernel(x)} returns \\spad{x} viewed as a kernel.")
  (($ (|BasicOperator|) (|List| |#1|) (|NonNegativeInteger|))
   "\\spad{kernel(op,{} [a1,{} ...,{} an],{} m)} returns the kernel \\spad{op(a1,{} ...,{} an)} of nesting level \\spad{m}. Error: if \\spad{op} is \\spad{k}-ary for some \\spad{k} not equal to \\spad{n}."))
 (|height|
  (((|NonNegativeInteger|) $)
   "\\spad{height(k)} returns the nesting level of \\spad{k}."))
 (|argument|
  (((|List| |#1|) $)
   "\\spad{argument(op(a1,{} ...,{} an))} returns \\spad{[a1,{} ...,{} an]}."))
 (|operator|
  (((|BasicOperator|) $)
   "\\spad{operator(op(a1,{} ...,{} an))} returns the operator op."))
 (|name|
  (((|Symbol|) $) "\\spad{name(op(a1,{} ...,{} an))} returns the name of op.")))
(("documentation" 0 5047) ("ancestors" 0 4573) ("parents" 0 4423)
 ("abbreviation" 0 4416) ("predicates" 0 4202) ("superDomain" 0 NIL)
 ("operationAlist" 0 3033) ("modemaps" 0 1663) ("sourceFile" 0 1625)
 ("constructorCategory" 0 873) ("constructorModemap" 0 42)
 ("constructorKind" 0 33) ("constructorForm" 0 20))