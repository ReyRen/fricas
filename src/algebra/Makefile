## ---------------------------------
## -- Standard Autoconf variables --
## ---------------------------------

SHELL = /bin/bash

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
# sbindir = ${exec_prefix}/sbin
# libexecdir = ${exec_prefix}/libexec
# datarootdir = ${prefix}/share
# datadir = ${datarootdir}
# sysconfdir = ${prefix}/etc
# sharedstatedir = ${prefix}/com
# localstatedir = ${prefix}/var
# includedir = ${prefix}/include
# oldincludedir = /usr/include
# docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
# infodir = ${datarootdir}/info
# htmldir = ${docdir}
# dvidir = ${docdir}
# pdfdir = ${docdir}
# psdir = ${docdir}
libdir = ${exec_prefix}/lib
# lispdir = @lispdir@
# localedir = ${datarootdir}/locale


host = x86_64-linux-gnu
host_alias = 
build = x86_64-linux-gnu
build_alias = 
target = x86_64-linux-gnu
target_alias = 

srcdir = .
abs_srcdir = /git/fricas/src/algebra
top_srcdir = ../..
abs_top_srcdir = /git/fricas

# Notice that there is a bug in Autoconf 2.59 whereby the variable
# top_builddir is not defined.  So avoid to use it directly.  Use
# abs_top_builddir.
builddir = .
abs_builddir = /git/fricas/src/algebra
top_builddir = ../..
abs_top_builddir = /git/fricas
datadir = ${datarootdir}


AR = ar
CC = gcc
CFLAGS = -g -O2
OBJEXT = o
EXEEXT = 

AUTOCONF = autoconf
AWK = gawk
TARGET_AWK = /usr/bin/gawk
INSTALL = /usr/bin/install -c
install_sh = @install_sh@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_script = $(install_sh) -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
## FIXME:  The test done with Autoconf-2.60 and later concludes
##         that "ln -s" is unusable on msys, and therefore defaults to
##         "cp -p", but that default is unusable for us.  For our
##         purpose "ln -s" is just fine on that platform.  Consequently
##         we are explicitly overrding that value here.
LN_S = ln -s
mkinstalldirs = $(top_srcdir)/config/mkinstalldirs
PATCH = @PATCH@
RANLIB = ranlib
TAR = tar
TOUCH = touch

# The list of make targets made recursively, by walking sub-directories
# Normally, this is a template generated by Automake, but we don't
# use Automake yet; so, we must do it the hard way.
# See the corresponding rules in setup-dep.mk
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
		html-recursive info-recursive install-data-recursive \
		install-exec-recursive install-info-recursive \
		install-recursive installcheck-recursive \
		installdirs-recursive pdf-recursive ps-recursive \
		uninstall-info-recursive uninstall-recursive


## Normally, Automake will substitute the value for this variable.
## But, we don't have Automake yet.  So we punt on it.
MKDIR_P = mkdir -p

STAMP = echo timestamp >

## ---------------------
## -- Axiom variables --
## ---------------------

## Absolute path to the toplevel source directory for Axiom.  This is
## almost like Autoconf-standard abs_top_srcdir except that, it retains
## the same syntactic values in subdirectories.

## Where The Axiom distribution main source files are kept.
## Notice, this is the src/ directory within the toplevel source
## directory

fricas_top_srcdir = /git/fricas

fricas_src_srcdir = $(fricas_top_srcdir)/src
fricas_src_datadir = $(fricas_src_srcdir)/share
fricas_src_algdir = $(fricas_src_srcdir)/algebra

## Where tools for the build machine are built
fricas_builddir = /git/fricas/build/x86_64-linux-gnu
fricas_build_bindir = /git/fricas/build/x86_64-linux-gnu/bin
fricas_build_libdir = $(fricas_builddir)/lib
fricas_build_mandir = $(fricas_builddir)/man

fricas_configdir = $(abs_top_builddir)/config
fricas_c_macros = $(fricas_configdir)/fricas_c_macros.h

LATEX = /usr/bin/latex

## Staging directory for the target DESTDIR
fricas_targetdir = /git/fricas/target/x86_64-linux-gnu
fricas_target_bindir = $(fricas_targetdir)/bin
fricas_target_libdir = $(fricas_targetdir)/lib
fricas_target_srcdir = $(fricas_targetdir)/src
fricas_target_docdir = $(fricas_targetdir)/doc
fricas_target_datadir = $(fricas_targetdir)/share
fricas_target_texdir = $(fricas_target_datadir)/texmf/tex


FRICAS_X11_CFLAGS = 
FRICAS_X11_LDFLAGS =  -lXpm  -lSM -lICE -lX11 

fricas_includes = -I$(fricas_src_srcdir)/include -I$(fricas_configdir)

fricas_build_helper = $(abs_top_srcdir)/src/scripts/build_helper

## Where the staging build directory is found
AXIOM = /git/fricas/target/x86_64-linux-gnu
export AXIOM
BASE = 
export BASE

TMP=$(fricas_builddir)

## Old Axiom ENV variables

VERSION = FriCAS 2018-03-10

CCF=-O2 -Wall -D_GNU_SOURCE
LDF=-g

## -------------------------------------------
## -- Files generated for the build machine --
## -------------------------------------------
unpack_file = $(fricas_src_srcdir)/scripts/unpack_file

FRICAS_LISP = /usr/local/bin/sbcl
# Extension of the output file name returned by compile-file
LISPOBJEXT = fasl
FASLEXT = fasl


##

##
AXIOMXLROOT=${AXIOM}/compiler

## GCL command to end a session.
BYE=quit

## Clear suffix-based implicit rule table.
.SUFFIXES:

PREGENERATED=
PACKAGE_VERSION = 2018-03-10
PACKAGE_TARNAME = fricas


# How to add a new constructor:
#
#   - if the constructor is in separate file(s) add name of the
#     file(s) to SPAD_SRCS
#
#   - add abbreviated name(s) of new constructors to SPADLISTx
#     (where 'x' is from 1 to 8) keeping names in alphabetic order.
#
#   - if you add a category add it to CATLIST, if the category provides
#     default implementation (has 'add' part) add it to CATDOMS.
#
# If you want to know mechanics of algebra build see
# 'doc/algebra_build.txt'.

ECHO_B=printf '%s\\\n'
ECHO_T=printf '\t%s\n'

OUT=$(fricas_targetdir)/algebra
DOC=$(fricas_target_docdir)/src/algebra
OUTSRC=$(fricas_target_srcdir)/algebra
# INPUT=${INT}/input
INPUT=../input


INTERPSYS=AXIOM=${AXIOM} FRICAS_INITFILE='' $(fricas_build_bindir)/interpsys


SPAD_SRCS= \
     acplot aggcat2 aggcat algcat algext algfact \
     algfunc alg_top allfact alql amodgcd any array1 \
     array2 attribs bags bezout boolean \
     brill card carten \
     catdef cden charpol clifford clip coerce \
     color combfunc combinat complet computation \
     computil constant contfrac \
     coordsys cra crfp curve cycles \
     cyclotom cyldec ddfact defaults defintef defintrf \
     derham dhmatrix dirichlet discrgrp distro divisor \
     dpolcat drawopt drawpak draw efstruc efuls efupxs \
     eigen elemntry elfuts equation1 error \
     evalut expexpan export3D expps expr2ups exprode expr extred \
     facutil ffact ffcat ffcg fffg \
     fff ffhom ffnb ffpoly ffp \
     ffx files float fmod fname fnla \
     formula fortcat fortmac fortout fortpak fortran forttyp \
     fourier fparfrac fraction free fr fs2expxp \
     fs2ups fspace galfact \
     gaussfac gaussian gbeuclid gbintern \
     gb gdirprod gdpoly geneez generic genser \
     genups ghensel gnudraw gpgcd gpol gpresent graph grdef groebf \
     groebsol gseries hashstate html ideal idecomp indexedp \
     intaf intalg intaux intclos intden intef integer \
     integrat interval intfact intlocp intpar intpm intrf irexpand \
     irsn ituple jet kl kovacic laplace laurent \
     leadcdet lie limitps lindep lingrob liouv \
     listgcd list lll lmdict lodof lodof2 lodo logic \
     mama manip mantepse mappkg matcat matfuns matrix \
     matstor mesh mfinfact mkfunc mkrecord \
     mlift moddfact modgcd modhpsol modmonom modmon modring \
     moebius mring mrv_limit mset mts muldep multfact multpoly \
     multsqfr naalgc naalg newdata newpoint newpoly \
     nlinsol nlode npcoef nregset nsregset numarr numeigen \
     numeric numode numquad numsolve numtheor oct \
     odealg odeef oderf omcat omdev omerror \
     omserver opalg openmath op ordinal ore outform outform2 \
     out pade padiclib padic paramete partperm \
     patmatch1 pattern pcurve perman \
     permgrps perm pfbr pfo pfr pf \
     pgcd pgrobner pinterp pleqn plot3d plot \
     plottool polset poltopol polycat poly primelt \
     product prs prtition pscat pseudolin \
     ptranfn puiseux qalgset quat radeigen radix \
     random ratfact rdeefx rdesys real0q \
     realzero reclos rec regset rep1 rep2 \
     resring retract rf riccati rinterp \
     rule scene seg serexp setorder sets sex sf \
     sgcf sign si skpol smith smith2 solvedio solvefor \
     solvelin solverad sortpak space special special2 sregset \
     ssolve stream string sttaylor sttf \
     sturm suchthat sum sups \
     symbol syssolp system tableau table \
     taylor tensor tex texmacs transsolve tree trigcat \
     triset tube twofact u32vec unittest updecomp \
     utsode variable vector view2D view3D viewDef \
     vecrec viewpack vsbasis weier wtpol xhash xlpoly xpoly \
     ystream zerodim

SPADFILES=$(patsubst %, $(OUTSRC)/%.spad, $(SPAD_SRCS))


ALDOR_SRCS=\
  axtimer ffrac herm interval invnode invrender \
  invtypes invutils iviews ndftip nepip noptip \
  nqip nrc nsfip

ALDORFILES=$(patsubst %, $(OUTSRC)/%.as, $(ALDOR_SRCS))


subdir = src/algebra/



SPADLIST1=\
     A1AGG ABELGRP ABELMON ABELSG ACF ACFS \
     ACPLOT AF AGG AHYP ALAGG ALGEBRA \
     ALGFACT ALGFF ALGMANIP ALGMFACT ALGPKG ALGSC \
     ALIST AMR ANON AN ANTISYM ANY1 \
     ANY APPLYORE APPRULE APRODC ARR2CAT ARRAY12 ARRAY1 \
     ARRAY2 ARRAY22 ASSOCEQ ASTACK \
     ATCS ATADDVA ATAPPRO ATARBEX ATARBPR ATCANCL ATCANON  ATCUNOR \
     ATFINAG ATLR ATMULVA ATNZDIV ATRIG ATSHMUT ATTWSR \
     ATUNIKN ATVCWC AUTOMOR \
     BALFACT BASTYPE BBTREE BDISTL BEZOUT BEZOUT2 BGAGG BIALG BICPO \
     BINARY BINFILE BITS BITST BJOIN BLAT BMEET BMODULE BOOLEAN BOP1 \
     BOP BOUNDZRO BRAGG BRILL \
     BSTREE BTAGG BTCAT BTOURN BTREE CABMON \
     CACHSET CAD CADU CARD CARTEN2 CARTEN CCLASS CDEN CDFMAT CDFVEC \
     CELL CFACET CFCAT CHAINC CHARNZ CHARPOL CHARPOL2 CHARPOL3 \
     CHAR CHARZ CHVAR \
     CINTSLPE CKP CLAGG CLIF CLINDEP CLIP CMPLXRT \
     COALG COCHNC CODCPO COLOR \
     COMBF COMBINAT COMBOPC COMM COMMUPC COMPCODE COMPUTIL COMPAR \
     COMPCAT COMPLEX2 COMPLEX COMPLPAT COMPPROP \
     COMRING CONTFRAC COORDSYS CPIMA CPMATCH CRAPACK \
     CRFP CSTTOOLS CTRIGMNP CUBEC CUBECF CVMP CYCGRP CYCLES CYCLOTOM

SPADLIST2=\
     DBASE DBLRESP DDFACT \
     DECIMAL DEFINTEF DEFINTRF DEGRED DELTAC DELTCF DEQUEUE DERHAM \
     DFINTTLS DFLOAT DFMAT DFVEC DFSFUN DFSFUN2 DGRPH DHMATRIX DIAGG DIFEXT \
     DIFRING DIHGRP DIOPS DIOSP DIRPCAT DIRPROD2 DIRPROD DIRRING \
     DISPLAY DISTCAT DISTEX DISTLAT DISTPOL DISTRO DISTRO2 DIVRING DJBP \
     DLAGG DLIST DLP DMP \
     DCPO DPMM DPMO DPOLCAT DQAGG DRAWCFUN DRAWCURV \
     DRAWCX DRAWHACK DRAWPT DRAW DROPT0 DROPT1 \
     DROPT DSMP DSTCFPG DVARCAT EAB \
     EF EFACTOR EFGUSER EFSTRUC EFULS EFUPXS ELAGG ELEMFUN \
     ELFUTS ELINSOL ELIPIDF ELTAB ELTAGG EMR ENTIRER EP \
     EQ2 EQ EQTBL ERROR ES1 ES2 \
     ES \
     EUCDOM EVALAB EVALCYC EXIT EXP3D EXPEXPAN EXPR2 \
     EXPR2UPS EXPRODE EXPR EXPRTUBE EXPUPXS EXTRED FACTCAT FACTFUNC \
     FACUTIL FAKEPOL FAMR FARRAY \
     FAXF FBICPO FCDCPO FCOMP FCPAK1 FCTOOL FC FDIV2 FDIVCAT \
     FDIV FDCPO FELFUN FEVALAB FEXPR FFCAT2 FFCAT FFCGP \
     FFCG FFCGX FFF FFHOM FFIELDC FFINTBAS \
     FFNBP FFNB FFNBX FFPOLY2 FFPOLY FFP \
     FFSLPE FF FFX FGLMICPK FGROUP FGRPH FIELD \
     FILECAT FILE FINAALG FINGEN FINGPKG FINGRP FINITE FINLAT FINRALG FLAGG2

SPADLIST3=\
     FLAGG FLALG FLASORT FLINEXP FLIOUFUN FLOATCP FLOATRP \
     FLOAT FMAGMA FMCAT FMC FMFUN FMOEBF FMONOID \
     FM FM2 FMCF2 FMTC FNAME FNCAT FNGRPH FNLA FOP \
     FORDER FORMCAT FORMULA1 FORMULA FORTCAT FORTFN FORTFORM FORTRAN \
     FPARFRAC FPATMAB FPC FPOSET FPS FR2 \
     FRAC2 FRAC FRAMALG FRETRCT FRIDEAL2 FRIDEAL \
     FRIMOD FRMOD FRNAAF2 FRNAALG FR FRUTIL FS2EXPXP \
     FS2 FS2UPS FS2UPS2 FSAGG2 FSAGG FSCINT FSERIES \
     FSFUN FSINT FSPECF FSPRMELT FSRED FSRROOT FS FST \
     FTEM FT FUNCTION FVC FVFUN \
     GALFACT GALFACTU GALPOLYU GAUSSFAC GBEUCLID \
     GBF GBINTERN GB GCDBAS GCDDOM GCNAALG GDMP GDRAW \
     GENEEZ GENMFACT GENMOEBF GENPGCD GENUPS GENUSER GHENSEL \
     GMODPOL GOSPER GPOLCAT GPOLSET GRALG GRAY GRDEF \
     GRIMAGE GRMOD GROEBSOL GROUP GROUPP GROUPPF1 GSERIES GSTBL \
     GTSET HACKPI HANKP HASHSTAT HASHTBL HB HDMP HDP \
     HEAP HELLFDIV HEUGCD HEXADEC HOAGG HOMOL HOPFALG HTMLFORM HYPCAT \
     IALGFACT IARRAY1 IARRAY2 IBACHIN IBATOOL \
     IBITS IBPTOOLS ICARD ICDEN IDEAL IDECOMP \
     IDPC IDPO IEP \
     IEVALAB IFARRAY IFF IIARRAY2 IJB ILIST ILOGIC

SPADLIST4=\
     IMATLIN IMATQF IMATRIX IMODHP INBFF INCALG INCRMAPS INDE \
     INEP INFCG INFINITY INFORM1 INFORM INFPROD0 INFSP \
     INMODGCD INNMFACT INPSIGN INS \
     INTABL INTAF INTALG INTALG2 INTBIT INTCAT INTDEN INTDOM INTDSOL \
     INTEF INTFACT INTG0 INTHEORY INTHERAL \
     INTHERTR INTLOCP INTPAF INTPAR1 INTPAR2 INTPM INTRAT INTRET \
     INTRF INTRVL INTSLPE INT INTTOOLS INTTR \
     INVLAPLA IPADIC IPF IPRNTPK IR2F IR2 \
     IROOT IRREDFFX IRRF2F IRSN IR IRURPK \
     ISMITH ISTRING ISUMP ISUPS ITAYLOR ITFUN2 ITFUN3 \
     ITRIGMNP ITUPLE IVECTOR IXAGG JBBFC JBC \
     JBE JBFC JBLF JBP JBSA JBUNDLE JBX JCT \
     JDE JDIFF JGB JLF JVF JOINLAT JORDAN KAFILE \
     KDAGG KERNEL2 KERNEL KOERCE KOERCEF KONVERF KONVERT KOVACIC \
     LALG LAMBDA LAPLACE LA LAT LATJOFM LATMOFJ LAUPOL LAZM3PK LEADCDET \
     LEXP LEXTRIPK LFCAT LF LGROBP LIB \
     LIECAT LIE LIMITPS LIMITRF LINCOMB LINDEP LINEXP \
     LIST2MAP LIST2 LIST3 LIST LISTPKG LLLRED LMDICT LMODULE \
     LMOPS LNAGG LO LODEEF LODO1 LODO2 LODO3 LODO3AUX LODOCAT \
     LODOCONV LODOF LODOF2 LODOOPS LODO LOGIC LOOP LORER LPEFRAC \
     LPOLY LSAGG LSMP1 LSMP LSPP LSQM LUD \
     LWORD LZSTAGG M3D MAGCD MAGCD2 MAGCDOC MAGCDT2 MAGCDT3 MAGCDT4 \
     MAGMA MAGMAWU MAMA MAPHACK1 MAPHACK2 \
     MAPHACK3 MAPPKG1 MAPPKG2 MAPPKG3 MATCAT2 MATCAT

SPADLIST5=\
     MATLIN MATRIX MATSTOR MCALCFN MCDEN MCMPLX \
     MDAGG MDDFACT MEETLAT MESH MEVCAT MEVAL1 MEVAL2 \
     MFGRPH MFINFACT MFLOAT MHROWRED \
     MINT MKBCFUNC MKCHSET MKFUNC MKRECORD \
     MKUCFUNC MLIFT MMAP MMLFORM MODFACT MODFIELD \
     MODHP MODHPS MODMONOM \
     MODMON MODOP MODRING MODULE MOEBIUS MOMPKG \
     MONOGEN MONOID MONOTOOL MORECAT MPC2 MPC3 \
     MPCPF MPOLY MPRFF MRATFAC MRCAT MRF2 MRING MRVLIM \
     MSETAGG MSET MSYSCMD MTHING MTSCAT MULDEP MULTFACT \
     MULTSQFR NAALG NARING NARNG \
     NASRING NASRNG NBLM NCEP NCNTFRAC NFINTBAS NGROEB \
     NLINSOL NNI NODE1 NONE1 NONE NORMMA \
     NORMPK NORMRETR NPCOEF NREP NSMP NSUP2 \
     NSUP NTPOLFN NTSCAT NUMERIC NUMFMT \
     NUMODE NUMQUAD NUMTUBE OAGROUP OAMON OAMONS \
     OASGP OCAMON OC OCTCT2 OCT \
     ODECONST ODEEF ODEINT ODEPAL \
     ODEPRIM ODEPRRIC ODERAT ODERED ODERTRIC \
     ODESYS ODETOOLS ODPOL ODP ODR ODVAR OEXPR \
     OFACET OFTOOL OINTDOM OMCONN OMDEV OMENC OMERRK \
     OMERR OMEXPR OMPKG OMSAGG OMSERVER \
     OM ONECOMP2 ONECOMP OPQUERY OP

SPADLIST6=\
     ORDCOMP2 ORDCOMP OREMAT ORDFIN ORDFUNS \
     ORDMON ORDRING ORDSET OREPCAT OREPCTO ORESUP \
     OREUP ORTHPOL OSGROUP OSI OUTFORM OUT OVAR \
     OWP PADEPAC PADE PADICCT PADICRC \
     PALETTE PAN2EXPR PARPC2 PARPCURV PARRPKG PARSC2 \
     PARSCURV PARSU2 PARSURF PARTPERM PATAB PATLRES \
     PATMAB PATMATCH PATRES2 PATRES PATTERN1 PATTERN2 \
     PATTERN PBWLB PCDEN PDO PDOHLP \
     PDRING PENDTREE PERMAN PERMCAT PERMGRP \
     PERM PEVALUT PFACET PFBR PFECAT PFOQ PFO \
     PFOTOOLS PFRPAC PFR PFUTIL PF PGCD PGE \
     PGROEB PICOERCE PID PINTERPA PINTERP PIT PI \
     PLEQN PLOT1 PLOT3D PLOT PLOTTOOL PMASSFS \
     PMASS PMDOWN PMFS PMINS PMKERNEL PMLSAGG \
     PMPLCAT PMPREDFS PMPRED PMQFCAT PMSYM PMTOOLS \
     PNTHEORY POINT POLTOPOL POLUTIL POLY2 POLY2UP \
     POLYCATQ POLYCAT POLYLIFT POLYROOT POLYVEC \
     POLY PORDER POSET POSETF PPCURVE \
     PREASSOC PREORD PRIGCD3 PRIMARR2 PRIMARR PRIMCAT PRIMELT PRIMES \
     PRINT PRODUCT PRQAGG PR PRROOT PRS PRTITION \
     PSCAT PSCURVE PSETCAT PSETPK PSEUDLIN PSQFR \
     PTCAT PTFUNC2 PTPACK PTRANFN PUSHVAR PWFFINTB

SPADLIST7=\
     QALGSET2 QALGSET QCMPACK QEQUAT QFCAT2 QFCAT \
     QFORM QUAGG QUATCAT QUATCT2 QUAT2 QUAT QUEUE \
     RADCAT RADFF RADIX RADUTIL RANDSRC RATFACT \
     RATRET RCAGG RCFIELD RDEAUX RDEEFX RDEEFX2 RDEEFS RDEPAR \
     RDETRS RDIST RDIV REAL0Q REAL0 REALSOLV \
     REAL RECLOS REDORDER REF REGSET REP1 \
     REP2 REPDB REP REPSQ RESLATC RESRING \
     RESULT RETFROM RETRACT RETSOL RFDIST RFFACT \
     RFSSPLIT RF RGCHAIN RIDIST RING RINTERP RMATCAT \
     RMATRIX RMCAT2 RMODULE RNG RNS ROIRC \
     ROMAN RPOLCAT RRCC RSDCMPK RSETCAT \
     RSETGCD RULECOLD RULESET RULE RURPK \
     SAE SAOS SARGND SBOUND SCACHE SCANUTIL \
     SCELL SCENE SCIFS SCNP SCONF SCPKG SCRT SDPOL \
     SDVAR SEG2 SEGBIND2 SEGBIND SEGCAT SEG \
     SEGXCAT SEM SEQU SEQU2 SEQUCAT SETAGG SETCAT SETMN SETLAT SEXCAT \
     SEXOF SEX SFORT SFQCMPK SFRGCD SFRTCAT \
     SGCF SGROUP SHDP SHP SIGNEF SIGNRF \
     SIMPAN SIMPC SIMPCF SINT SKAGG \
     SKICOMB SKSMP SMATCAT SMITH SMP SMPCOER \
     SMTS SNTSCAT SOLVEFOR SOLVERAD SOLVESER SOLVETRA \
     SORD SOREXPV SORTPAK SPACE3 SPACEC SPECOUT SPFCAT SPFUTS SPLNODE \
     SPLTREE SPTCAT SQMATRIX SRAGG SRDCMPK SREGSET \
     SRNG SRING SSKPOLC STACK STEXPS STEXPST STR

SPADLIST8=\
     STAGG STBL STEP STRANS STREAM1 STREAM2 \
     STREAM3 STREAM STRICAT STRING STRTBL STTAYLOR \
     STTFNC STTF SUBRESP SUBSPACE SUCH SULS \
     SUMFS SUMRF SUP2 SUP SUPXS \
     SUTS SWITCH SYMANA SYMBOL SYMFUNC SYMPOLY SYMS \
     SYMTAB SYSSOLP TABLBUMP TABLEAU TABLE TANEXP \
     TBAGG TBCMPPK TEMUTL \
     TENSCAT TENSOR TENSPC TENSPOW TENSPO2 TENSPRP \
     TEX1 TEX TEXTFILE TMFORM \
     TOOLSIGN TOPSP TRANFUN TREE TRIGCAT TRIGMNIP \
     TRIMAT TRMANIP TSEREXP TSEREXPG TSEREXPL TSEREXPP TSEREXPT \
     TSETCAT TS TUBE TUBETOOL \
     TUPLE TWOFACT TYPE TYPED U16MAT U16VEC \
     U32MAT U32VEC U8MAT U8VEC UDGRPH UDPO UDVO UFD UGAUSS \
     ULS2 ULSCAT ULSCCAT ULSCONS ULS \
     UNISEG2 UNISEG UNTYPED UP2 UPCDEN UPDECOMP UPDIVP \
     UPMP UPOLYC2 UPOLYC UPSCAT UP UPSQFREE \
     UPXS2 UPXSCAT UPXSCCA UPXSCONS UPXSSING UPXS \
     URAGG UTS2 UTSCAT UTSODE UTSODETL UTS VARCAT \
     VARIABLE VECTCAT VECTOR2 VECREC1 VECREC2 VECTOR \
     VHPSOLV \
     VIEW2D VIEW3D VIEWDEF VIEW VOID VSBASIS VSPACE WEIER \
     WGRPH WP WUTSET XALG XDPOLY XEXPPKG XFALG \
     XF XHASHTBL XML XMLAT XMLEL XPOLYC XPOLY XPR XRPOLY \
     YSTREAM ZDSOLVE ZLINDEP ZMOD

# Full list of categories
CATLIST= AHYP ATCS ATADDVA ATAPPRO ATARBEX ATARBPR \
        ATCANCL ATCANON ATCUNOR ATFINAG ATLR ATMULVA  \
        ATNZDIV ATSHMUT ATTWSR ATUNIKN ATVCWC \
        CFCAT ELTAB KOERCE KOERCEF KONVERF KONVERT OM PRIMCAT PTRANFN \
        SPFCAT TYPE BASTYPE IEVALAB AGG EVALAB SETCAT COMPAR HOAGG CLAGG \
        RADCAT RETFROM RETRACT TRIGCAT ATRIG HYPCAT ELEMFUN ELTAGG IXAGG \
        LNAGG ORDSET FLAGG A1AGG ABELSG ABELMON CABMON ABELGRP \
        SGROUP MONOID SRNG SRING RNG LMODULE RMODULE BMODULE MODULE \
        RING ALGEBRA \
        COMRING ENTIRER DISTCAT DIVRING INTDOM GCDDOM PID EUCDOM UFD FIELD \
        ACF CHARNZ CHARZ ES LINEXP FLINEXP PATMAB FPATMAB FRETRCT \
        GROUP PDRING PATAB FS ACFS BGAGG DIOPS DIAGG ELAGG KDAGG \
        RCAGG URAGG STAGG LSAGG TBAGG ALAGG AMR ARR2CAT BRAGG LOGIC \
        BTAGG BTCAT CACHSET COMBOPC DIFRING DIFEXT FPC FINITE STEP \
        FFIELDC FINRALG FRAMALG FEVALAB MONOGEN PFECAT TRANFUN COMPCAT \
        OASGP OAMON OCAMON OAGROUP OAMONS ORDRING VSPACE DIRPCAT DLAGG \
        FAMR POLYCAT DPOLCAT QUAGG SKAGG DQAGG DVARCAT XF FAXF \
        FDIVCAT FFCAT FILECAT FINGEN FINGRP MAGMA MORECAT NARNG \
        NAALG FINAALG LIECAT FLALG \
        FORTCAT FMC FMCAT FMFUN FMTC FNCAT FORTFN REAL RNS FPS FRNAALG \
        SETAGG FSAGG FVC FVFUN GPOLCAT GRMOD GRALG APRODC IDPC OINTDOM \
        INS INTCAT LALG LORER \
        LFCAT OREPCAT LODOCAT LZSTAGG MATCAT MDAGG MAGMAWU MRCAT MSETAGG \
        PSCAT MTSCAT NARING NASRNG NASRING PSETCAT TSETCAT RSETCAT NTSCAT OC \
        PRQAGG OMSAGG ORDFIN OSGROUP ORDMON PADICCT PERMCAT PORDER POSET \
        PPCURVE PSCURVE PREORD VECTCAT PTCAT QFCAT QUATCAT RCFIELD RMATCAT \
        RPOLCAT RRCC SEGCAT SEGXCAT SEQUCAT SEXCAT SFRTCAT SMATCAT SNTSCAT \
        SPACEC SPTCAT SRAGG SSKPOLC STRICAT \
        UPSCAT ULSCAT ULSCCAT UPOLYC UPXSCAT \
        UPXSCCA UTSCAT XALG XFALG XPOLYC \
        TENSCAT TENSPRP TENSPC BIALG COALG HOPFALG TSEREXP \
        JBC JBFC JBBFC VARCAT FGRPH MAGCDOC FORMCAT MEVCAT DCPO \
        CODCPO BICPO MEETLAT BMEET JOINLAT BJOIN LAT BLAT DISTLAT \
        BDISTL FACTCAT FRMOD

SPADLIST=${SPADLIST1} ${SPADLIST2} ${SPADLIST3} ${SPADLIST4} \
        ${SPADLIST5} ${SPADLIST6} ${SPADLIST7} ${SPADLIST8}

# List of core domains
DOMLIST= ALIST BOOLEAN CHAR DFLOAT FRAC HASHSTAT \
        ILIST IARRAY1 ISTRING IVECTOR \
        INT LIST NNI OUTFORM PI PRIMARR REF SEX SINT STRING SYMBOL VECTOR \
        MATRIX ARRAY1 IIARRAY2 ARRAY2 U32VEC U32MAT U16VEC U16MAT U8VEC \
        U8MAT DFVEC DFMAT COMPLEX CDFVEC CDFMAT SOREXPV

# List of categories which provide default implementations
CATDOMS= A1AGG ABELGRP ABELMON ABELSG ACF ACFS AGG ALAGG ALGEBRA AMR ARR2CAT \
        ATRIG BASTYPE BGAGG BRAGG BTAGG BTCAT CLAGG COMPCAT DIAGG \
        DIFEXT DIFRING DIOPS DIRPCAT DIVRING DPOLCAT DVARCAT ELAGG \
        ELEMFUN ELTAGG ENTIRER ES EUCDOM EVALAB \
        FACTCAT FAMR FAXF FDIVCAT FEVALAB \
        FFCAT FFIELDC FGRPH FIELD FINAALG FINGRP FINITE FINRALG FLINEXP FMCAT \
        FPC FPS FRAMALG FRETRCT FRMOD FRNAALG FSAGG FS \
        GCDDOM GPOLCAT GRALG GRMOD \
        GROUP HOAGG HYPCAT IEVALAB INS IXAGG \
        JBBFC JBC JBFC KDAGG LALG LIECAT \
        LNAGG LODOCAT LOGIC LSAGG LZSTAGG MAGMA MAGMAWU MATCAT MODULE \
        MONOGEN MTSCAT NAALG NARING NARNG NASRNG \
        OC OM ORDRING ORDSET OREPCAT \
        PDRING PFECAT POLYCAT PORDER POSET PSCAT PSETCAT QFCAT QUATCAT RADCAT \
        RCAGG RCFIELD RETFROM RETRACT RMATCAT RNG \
        RNS RPOLCAT RRCC RSETCAT \
        SETAGG SETCAT SMATCAT SPTCAT SRAGG STAGG TBAGG TENSPC TRANFUN \
        TRIGCAT TSEREXP TSETCAT UFD \
        ULSCAT ULSCCAT UPOLYC UPSCAT UPXSCCA URAGG \
        UTSCAT VECTCAT VSPACE XF

EXTRASPADS=BPADIC BPADICRT COMMONOP GALUTIL MKFLCFN PADIC PADICRAT \
       SET WFFINTBS XPBWPOLY

GUESSLIST= SMPEXPR FAMR2 NEWTON UFPS GOPT GUESSF1 GUESSP1\
           UTSSOL FFFG UFPS1 GOPT0 EXPRSOL FFFGF \
           RECOP STNSR GUESS GUESSEB  GUESSINT GUESSF GUESSP GUESSPI GUESSAN

TESTLIST= TESTCNT TESTAUX TESTUNIT


.PHONY: all all-algebra
all: all-ax

# Note that the value of ${PREGENERATED} must be an absolute directory.
all-ax all-algebra: abbrev.list
	if test -d "${PREGENERATED}/src/algebra"; then \
          ${MAKE} BUILD_WAY=use_lisp stamp-alg ; \
	else \
	  ${MAKE} BUILD_WAY=normal stamp ; \
	fi
	@ echo finished $(builddir)

ifeq ($(BUILD_WAY),use_lisp)
SPADLIST99=${EXTRASPADS} ${GUESSLIST} ${TESTLIST} \
               $(patsubst %, %-, ${CATDOMS})

FULL_FASL_LIST=${SPADLIST} ${SPADLIST99}
LISTS=1 2 3 4 5 6 7 8 99
STAMP_FASLS=${patsubst %, stamp-fasls%, ${LISTS}}
TARGET_FASLS=$(patsubst %, ${OUT}/%.$(FASLEXT), ${FULL_FASL_LIST})
SRC_LSP=$(patsubst %, %.lsp, ${FULL_FASL_LIST})
stamp-alg: ${TARGET_FASLS} stamp-spadsrc

${STAMP_FASLS}: stamp-fasls% :
	( for A in ${SPADLIST$*} ; do \
	   echo ')lisp (fricas_compile_fasl' \
                ' "$(PREGENERATED)/src/algebra/'$$A'.lsp"' \
                '"${OUT}/'$$A'.${FASLEXT}")' ; \
	done ; \
	echo '(quit)' ) | \
	DAASE=$(fricas_targetdir) $(INTERPSYS)
	${STAMP} $@

${TARGET_FASLS}: ${STAMP_FASLS}
endif

NSPADLIST = ${SPADLIST} ${EXTRASPADS} ${GUESSLIST} ${TESTLIST}

stamp-db: $(patsubst %, %.spad, ${NSPADLIST})
	@echo doing stamp-db
	@if [ ! -f stamp-db ] ; then \
          cp ${srcdir}/boo_db.input . ; \
          rm -f komp_all.input ; \
          for A in ${NSPADLIST} ; do \
              echo ")compile $$A.spad" >> komp_all.input ; \
          done ; \
          rm -f boot_doms.input ; \
          for A in ${CATLIST} ${DOMLIST} ; do \
              echo ")compile $$A.spad" >> boot_doms.input ; \
          done ; \
          ${MKDIR_P} r1/algebra ; \
          cp $(fricas_src_datadir)/algebra/*.daase r1/algebra ; \
          rm -rf axp ; \
          mkdir axp ; \
          cp -r ${AXIOM}/autoload axp ; \
          cp -r ${AXIOM}/algebra axp ; \
          cp -r ${AXIOM}/lib axp ; \
          cp -r ${AXIOM}/share axp ; \
          ( echo ')read "boo_db.input"' | \
              AXIOM=./axp DAASE=./r1 FRICAS_INITFILE='' \
              $(fricas_build_bindir)/interpsys ) || \
              exit 1 ; \
          ${MKDIR_P} r7/algebra && \
          mv category.daase  compress.daase  interp.daase \
              operation.daase r7/algebra || exit 1 ; \
          cp r1/algebra/browse.daase r7/algebra ; \
          touch stamp-db ; \
        fi

stamp-oboo3: stamp-db
	@echo doing stamp-oboo3
	@if [ ! -f stamp-oboo3 ] ; then \
           echo "Bootstrap object copy" ; \
           for A in ${CATLIST} ${DOMLIST} ; do \
              cp $$A.NRLIB/$$A.$(FASLEXT) ${OUT}/$$A.$(FASLEXT) || exit 1 ; \
           done; \
           for A in ${CATDOMS} ; do \
              cp $${A}-.NRLIB/$${A}-.$(FASLEXT) ${OUT}/$${A}-.$(FASLEXT)  || exit 1 ; \
           done; \
           rm -rf *.NRLIB \
           echo "Stage 3 object bootstrap (normal mode)" ; \
           echo > oboo3.input ; \
           for A in ${DOMLIST} ; do \
              echo ')compile "'$$A'.spad"' >> oboo3.input ; \
           done; \
           ( echo ')read "oboo3.input"' | \
              DAASE=./r7 ${INTERPSYS} ) || exit 1 ; \
	   echo "Stage 3 object copy" ; \
	   for A in ${DOMLIST} ; do \
	      cp $$A.NRLIB/$$A.$(FASLEXT) ${OUT}/$$A.$(FASLEXT) || exit 1 ; \
	   done ; \
	   touch stamp-oboo3 ; \
	fi

stamp-bootstrap: stamp-oboo3
	@echo doing stamp-bootstrap
	@if [ ! -f stamp-bootstrap ] ; then \
           $(ECHO_B) 'main-bootstrap: ' > boot.mak ; \
           for A in ${NSPADLIST} ; do \
               $(ECHO_B) $${A}.NRLIB/$${A}.lsp" " >> boot.mak ; \
           done ; \
           echo >> boot.mak ; \
           for A in ${NSPADLIST} ; do \
              echo $${A}.NRLIB/$${A}.lsp: $${A}.spad >> boot.mak ; \
              $(ECHO_T) 'echo ")compile" $$< | DAASE=./r7 ${INTERPSYS}' \
                      >> boot.mak ; \
              echo >> boot.mak ; \
           done ; \
           ${MAKE} -f boot.mak main-bootstrap && \
	   echo ')lisp (make-databases nil nil)' | \
              DAASE=./r7 ${INTERPSYS} && \
	   ${MKDIR_P} rf/algebra && \
	   mv category.daase  compress.daase  interp.daase \
	      operation.daase rf/algebra || exit 1 ; \
	   cp r1/algebra/browse.daase rf/algebra ; \
	   touch stamp-bootstrap ; \
	fi

ifneq ($(BUILD_WAY),use_lisp)
$(patsubst %, ${OUT}/%.$(FASLEXT), ${NSPADLIST}) : stamp-bootstrap
endif

stamp: stamp-src
	-rm -f stamp
	$(STAMP) stamp

# We would prefer to use simple rule like this, unfortunatly
# make can not handle pattern rule for remaking .NRLIBs
# so we expand rules to separate makefile
#
# update-spads: \
#          $(patsubst %, ${OUT}/%.$(FASLEXT), ${SPADLIST} ${EXTRASPADS})

do-update-spads: stamp-bootstrap spad.mak
	${MAKE} -f spad.mak update-spads


spad.mak : Makefile
	@echo making spad.mak
	$(ECHO_B) 'update-spads: ' > spad.mak
	@for A in ${NSPADLIST} ; do \
	    $(ECHO_B) "${OUT}"/$${A}."$(FASLEXT) " >> spad.mak ; \
	done
	@for A in $(patsubst %, ${OUT}/%-.$(FASLEXT), ${CATDOMS}) ; do \
	    $(ECHO_B) $${A}" " >> spad.mak ; \
	done
	@for A in ${NSPADLIST} ; do \
	    echo >> spad.mak ; \
	    echo '${OUT}/'$${A}'.$(FASLEXT): ' \
	         $${A}.NRLIB/$${A}.$(FASLEXT) >> spad.mak ; \
	    $(ECHO_T) 'cp $$< $$@.tmp' >> spad.mak ; \
	    $(ECHO_T) 'mv $$@.tmp $$@' >> spad.mak ; \
	    echo >> spad.mak ; \
	    echo $${A}.NRLIB/$${A}'.$(FASLEXT) : '$${A}.spad >> spad.mak ; \
	    $(ECHO_T) '@ echo compiling '$${A}.spad >> spad.mak ; \
	    $(ECHO_T) 'rm -rf '$${A}.NRLIB >> spad.mak ; \
	    $(ECHO_T) 'echo ")co" '$${A}'.spad | DAASE=./rf ${INTERPSYS}' \
	        >> spad.mak ; \
	done
	@for A in ${CATDOMS} ; do \
	    echo >> spad.mak ; \
	    echo '${OUT}/'$${A}'-.$(FASLEXT): ' \
	         $${A}-.NRLIB/$${A}-.$(FASLEXT) >> spad.mak ; \
	    $(ECHO_T) 'cp $$< $$@ ' >> spad.mak ; \
	    echo >> spad.mak ; \
	    echo $${A}-.NRLIB/$${A}'-.$(FASLEXT) : ' \
	         $${A}.NRLIB/$${A}.$(FASLEXT) >> spad.mak ; \
        done
	echo >> spad.mak
	echo 'srcdir=$(srcdir)' >> spad.mak
	echo 'unpack_file=$(unpack_file)' >> spad.mak
	echo >> spad.mak
	echo 'include extract-spad.mk' >> spad.mak

stamp-src: stamp-spadsrc do-update-spads
	if [ ! -f stamp-src ] ; then \
	    echo 4304 Done building NRLIBS from spad sources ; \
	    touch stamp-src ; \
	fi


stamp-spadsrc: ${SPADFILES}
	touch stamp-spadsrc


# ifneq ($(BUILD_WAY),use_lisp)
# ${OUT}/%.$(FASLEXT): %.NRLIB/%.$(FASLEXT)
# 	cp $*.NRLIB/$*.$(FASLEXT) $@
# endif


#
# .PRECIOUS: %.NRLIB/%.$(FASLEXT)

#
# Causes useless recompilation
#
# %.NRLIB/%.$(FASLEXT): %.spad
#	@ echo compiling $*.spad to $*.NRLIB
#	rm -rf $*.NRLIB
#	( \
#	     echo ')co $*.spad' | DAASE=./rf ${INTERPSYS} \
#	   )

abbrev.list: $(patsubst %, $(srcdir)/%.spad, $(SPAD_SRCS))
	(cd $(srcdir); \
	 sed -n 's/^)abbrev [a-z]*  *\([A-Z0-9]*\) *\([^ ]*\)/\1 \2/p' \
	 $(patsubst %, %.spad, $(SPAD_SRCS))) > $@

$(OUTSRC)/%.spad: $(srcdir)/%.spad
	cp $< $@

mostlyclean-local:
	-rm -f stamp*
	-rm *.$(FASLEXT) *.lib *.fn [A-VX-Z]*.data W*.data
	-rm -f abbrevs.input oboo3.input boot.mak *.daase
	-rm -f boot_doms.input comdb.text komp_all.input libdb.text
	-rm -r *.NRLIB
	-rm -r axp r[1-8f] DEPENDENTS.DAASE USERS.DAASE

clean-local: mostlyclean-local
	-rm -f spad.mak
	-rm -f $(patsubst %, %.spad, ${NSPADLIST})

distclean-local: clean-local
	-rm extract-spad.mk

include extract-spad.mk
## ---------------------------------------
## -- Standard boilerplate dependencies --
## ---------------------------------------

# Recursive rules, usually automatically generated by Automake.
# Since we do not use (yet) Automake, we mimic the behaviour as
# close as possible.
# Recursive wall of sub-directories is based on the variable
# SUBDIRS.  That variable usually contains the of sub-directories
# to be made in depth-first postfix.  However, that order can
# be changed to depth-first prefix by explicitly including "."
# in SUBDIRS.  Rules ending with '-ax' are those specific to the
# the current directory.  Notice that the '-ax' rules are similar
# to Automake generated '-am'.
.PHONY: $(RECURSIVE_TARGETS)
$(RECURSIVE_TARGETS):
	failcmd='exit 1'; \
	for f in $$MAKEFLAGS; do \
	   case $$f in \
	      *=* | --[!k]*) ;; \
	      *k*) failcmd='fail=yes';; \
	   esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; list='$(SUBDIRS)'; \
	for subdir in $$list; do \
	   echo "Making $$target in $$subdir"; \
	   if test "$$subdir" = "."; then \
	      dot_seen=yes; \
	      local_target="$$target-ax"; \
	   else \
	      local_target="$$target"; \
	   fi; \
	   (cd $$subdir && $(MAKE) $$local_target) || eval $$failcmd; \
	done; \
	if test "$$dot_seen" = "no"; then \
	   $(MAKE) "$$target-ax" || exit 1; \
	fi; test -z "$$fail"

# Recursive cleanup is done in reverse, postfix order of ordinary build.
.PHONY: mostlyclean-recursive
.PHONY: clean-recursive
.PHONY: distclean-recursive
.PHONY: maintainer-clean-recursive
mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcmd='exit 1'; \
	for f in $$MAKEFLAGS; do \
	   case $$f in \
	      *=* | --[!k]*) ;; \
	      *k*) failcmd='fail=yes';; \
	   esac; \
	done; \
	dot_seen=no; \
	list='$(SUBDIRS)' ; \
	rev=''; \
	for subdir in $$list; do \
	   if test "$$subdir" != "."; then \
	      rev="$$subdir $$rev"; \
	   fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	   echo "Making $$target in $$subdir"; \
	   if test "$$subdir" = "."; then \
	      local_target="$$target-ax"; \
	   else \
	      local_target="$$target"; \
	   fi; \
	   (cd $$subdir && $(MAKE) $$local_target) || eval $$failcmd; \
	done && test -z "$$fail"

## Rules to make DVI files from pamphlets

.PRECIOUS: %.tex
.PRECIOUS: %.dvi

.PHONY: dvi
dvi: dvi-recursive

$(top_srcdir)/configure: $(top_srcdir)/configure.ac \
			 $(top_srcdir)/config/fricas.m4
	cd $(top_srcdir) && $(AUTOCONF)


.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_srcdir)/config/var-def.mk \
	  $(top_srcdir)/config/setup-dep.mk \
	  $(abs_top_builddir)/config.status
	cd $(abs_top_builddir) && $(SHELL) ./config.status $(subdir)$@

## Cleanup.
##   Each Makefile is responsible of defining targets named
##   mostlyclean-local, clean-local, and distclean-local.
.PHONY: mostlyclean-generic mostlyclean-local mostlyclean mostlyclean-ax
mostlyclean-generic:
	-rm -f *~
	-rm -f *.log *.aux *.toc

mostlyclean: mostlyclean-recursive
mostlyclean-ax: mostlyclean-generic mostlyclean-local

.PHONY: clean-generic clean-local clean clean-ax
clean-generic: mostlyclean-generic
	-rm -f *.dvi

clean: clean-recursive
clean-ax: clean-generic clean-local

.PHONY: distclean-generic distclean-local distclean distclean-ax
distclean-generic: clean-generic
	-rm -rf $(fricas_target_docdir)/$(subdir)

distclean: distclean-recursive
	-rm Makefile

distclean-ax: distclean-generic distclean-local
