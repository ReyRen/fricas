19861               (|FractionFreeFastGaussian| D V)
|package|
(((|FractionFreeFastGaussian| |#1| |#2|)
  (CATEGORY |package|
   (SIGNATURE |fffg|
    ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
     (|Mapping| |#1| (|NonNegativeInteger|)
                (|Vector| (|SparseUnivariatePolynomial| |#1|)))
     (|Vector| (|Integer|)) (|NonNegativeInteger|)))
   (SIGNATURE |fffg|
    ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
     (|Mapping| |#1| (|NonNegativeInteger|)
                (|Vector| (|SparseUnivariatePolynomial| |#1|)))
     (|List| (|NonNegativeInteger|))))
   (SIGNATURE |interpolate|
    ((|Fraction| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
     (|List| |#1|) (|NonNegativeInteger|)))
   (SIGNATURE |interpolate|
    ((|Fraction| (|SparseUnivariatePolynomial| |#1|))
     (|List| (|Fraction| |#1|)) (|List| (|Fraction| |#1|))
     (|NonNegativeInteger|)))
   (SIGNATURE |generalInterpolation|
    ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
     (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
     (|Vector| |#2|) (|List| (|NonNegativeInteger|))))
   (SIGNATURE |generalInterpolation|
    ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
     (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
     (|Vector| |#2|) (|Vector| (|Integer|)) (|NonNegativeInteger|)))
   (SIGNATURE |generalCoefficient|
    (|#1| (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
     (|Vector| |#2|) (|NonNegativeInteger|)
     (|Vector| (|SparseUnivariatePolynomial| |#1|))))
   (SIGNATURE |ShiftAction|
    (|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|))
   (SIGNATURE |ShiftC| ((|List| |#1|) (|NonNegativeInteger|)))
   (SIGNATURE |DiffAction|
    (|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|))
   (SIGNATURE |DiffC| ((|List| |#1|) (|NonNegativeInteger|)))
   (SIGNATURE |qShiftAction|
    (|#1| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|))
   (SIGNATURE |qShiftC| ((|List| |#1|) |#1| (|NonNegativeInteger|)))
   (SIGNATURE |genVectorStream|
    ((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
     (|NonNegativeInteger|) (|NonNegativeInteger|)))
   (SIGNATURE |genVectorStream2|
    ((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
     (|NonNegativeInteger|) (|NonNegativeInteger|))))
  (|Join| (|IntegralDomain|) (|GcdDomain|))
  (|AbelianMonoidRing| |#1| (|NonNegativeInteger|)))
 (T |FractionFreeFastGaussian|))
(CATEGORY |package|
 (SIGNATURE |fffg|
  ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
   (|Mapping| |#1| (|NonNegativeInteger|)
              (|Vector| (|SparseUnivariatePolynomial| |#1|)))
   (|Vector| (|Integer|)) (|NonNegativeInteger|)))
 (SIGNATURE |fffg|
  ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
   (|Mapping| |#1| (|NonNegativeInteger|)
              (|Vector| (|SparseUnivariatePolynomial| |#1|)))
   (|List| (|NonNegativeInteger|))))
 (SIGNATURE |interpolate|
  ((|Fraction| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|) (|List| |#1|)
   (|NonNegativeInteger|)))
 (SIGNATURE |interpolate|
  ((|Fraction| (|SparseUnivariatePolynomial| |#1|)) (|List| (|Fraction| |#1|))
   (|List| (|Fraction| |#1|)) (|NonNegativeInteger|)))
 (SIGNATURE |generalInterpolation|
  ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
   (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
   (|Vector| |#2|) (|List| (|NonNegativeInteger|))))
 (SIGNATURE |generalInterpolation|
  ((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
   (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
   (|Vector| |#2|) (|Vector| (|Integer|)) (|NonNegativeInteger|)))
 (SIGNATURE |generalCoefficient|
  (|#1| (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
   (|Vector| |#2|) (|NonNegativeInteger|)
   (|Vector| (|SparseUnivariatePolynomial| |#1|))))
 (SIGNATURE |ShiftAction|
  (|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|))
 (SIGNATURE |ShiftC| ((|List| |#1|) (|NonNegativeInteger|)))
 (SIGNATURE |DiffAction|
  (|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|))
 (SIGNATURE |DiffC| ((|List| |#1|) (|NonNegativeInteger|)))
 (SIGNATURE |qShiftAction|
  (|#1| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|))
 (SIGNATURE |qShiftC| ((|List| |#1|) |#1| (|NonNegativeInteger|)))
 (SIGNATURE |genVectorStream|
  ((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
   (|NonNegativeInteger|) (|NonNegativeInteger|)))
 (SIGNATURE |genVectorStream2|
  ((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
   (|NonNegativeInteger|) (|NonNegativeInteger|))))
"/git/fricas/src/algebra/FFFG.spad"
((|genVectorStream2| (*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))
 (|genVectorStream| (*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))
 (|qShiftC| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|FractionFreeFastGaussian| *3 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *3 *4))))
 (|qShiftAction| (*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))
 (|DiffC| (*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))
 (|DiffAction| (*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))
 (|ShiftC| (*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))
 (|ShiftAction| (*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))
 (|generalCoefficient| (*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Mapping| *2 (|NonNegativeInteger|) (|NonNegativeInteger|) *7))
   (|isDomain| *4 (|Vector| *7))
   (|isDomain| *6 (|Vector| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *7 (|AbelianMonoidRing| *2 *5))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
   (|isDomain| *1 (|FractionFreeFastGaussian| *2 *7))))
 (|generalInterpolation| (*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|Mapping| *8 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *9))
       (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|Vector| (|Integer|)))
       (|ofCategory| *8 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *9 (|AbelianMonoidRing| *8 *7))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *8 *9))))
 (|generalInterpolation| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *8))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))))
 (|interpolate| (*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| *5)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 (|interpolate| (*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 (|fffg| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Mapping| *6 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *6 *7))
       (|ofCategory| *7 (|AbelianMonoidRing| *6 (|NonNegativeInteger|)))))
 (|fffg| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *7))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 *6)))))
((|qShiftC| (((|List| |#1|) |#1| (|NonNegativeInteger|)) 21))
 (|qShiftAction|
  ((|#1| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|) 20))
 (|interpolate|
  (((|Fraction| (|SparseUnivariatePolynomial| |#1|)) (|List| (|Fraction| |#1|))
    (|List| (|Fraction| |#1|)) (|NonNegativeInteger|))
   76)
  (((|Fraction| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|List| |#1|) (|NonNegativeInteger|))
   69))
 (|generalInterpolation|
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
    (|Vector| |#2|) (|Vector| (|Integer|)) (|NonNegativeInteger|))
   47)
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
    (|Vector| |#2|) (|List| (|NonNegativeInteger|)))
   44))
 (|generalCoefficient|
  ((|#1| (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
    (|Vector| |#2|) (|NonNegativeInteger|)
    (|Vector| (|SparseUnivariatePolynomial| |#1|)))
   37))
 (|genVectorStream2|
  (((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
    (|NonNegativeInteger|) (|NonNegativeInteger|))
   63))
 (|genVectorStream|
  (((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
    (|NonNegativeInteger|) (|NonNegativeInteger|))
   62))
 (|fffg|
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|)
               (|Vector| (|SparseUnivariatePolynomial| |#1|)))
    (|List| (|NonNegativeInteger|)))
   43)
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|)
               (|Vector| (|SparseUnivariatePolynomial| |#1|)))
    (|Vector| (|Integer|)) (|NonNegativeInteger|))
   46))
 (|ShiftC| (((|List| |#1|) (|NonNegativeInteger|)) 17))
 (|ShiftAction| ((|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|) 12))
 (|DiffC| (((|List| |#1|) (|NonNegativeInteger|)) 24))
 (|DiffAction| ((|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|) 23)))
FFFG
((|constructor|
  (NIL
   "This package implements the interpolation algorithm proposed in Beckermann,{} Bernhard and Labahn,{} George,{} Fraction-free computation of matrix rational interpolants and matrix GCDs,{} SIAM Journal on Matrix Analysis and Applications 22."))
 (|genVectorStream2|
  (((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
    (|NonNegativeInteger|) (|NonNegativeInteger|))
   "like genVectorStream,{} but skips every second vector."))
 (|genVectorStream|
  (((|Stream| (|List| (|NonNegativeInteger|))) (|NonNegativeInteger|)
    (|NonNegativeInteger|) (|NonNegativeInteger|))
   "\\spad{genVectorStream(sumEta,{} maxEta,{} k)} generates stream of all possible non-increasing lists \\spad{eta} with maximal entry \\spad{maxEta} and sum of entries at most \\spad{sumEta}."))
 (|qShiftC|
  (((|List| |#1|) |#1| (|NonNegativeInteger|))
   "\\spad{qShiftC} gives the coefficients \\spad{c_}{\\spad{k},{} \\spad{k}} in the expansion <x^k> \\spad{z} \\spad{g}(\\spad{x}) = sum_{\\spad{i=0}}\\spad{^k} \\spad{c_}{\\spad{k},{} \\spad{i}} <x^i> \\spad{g}(\\spad{x}),{} where \\spad{z} acts on \\spad{g}(\\spad{x}) by shifting. In fact,{} the result is [1,{} \\spad{q},{} \\spad{q^2},{} ...]"))
 (|qShiftAction|
  ((|#1| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
   "\\spad{qShiftAction(q,{} k,{} l,{} g)} gives the coefficient of \\spad{x^k} in \\spad{z^l} \\spad{g}(\\spad{x}),{} where \\spad{z*}(a+b*x+c*x^2+d*x^3+...) = (a+q*b*x+q^2*c*x^2+q^3*d*x^3+...). In terms of sequences,{} z*u(\\spad{n})=q^n*u(\\spad{n})."))
 (|DiffC|
  (((|List| |#1|) (|NonNegativeInteger|))
   "\\spad{DiffC} gives the coefficients \\spad{c_}{\\spad{k},{} \\spad{k}} in the expansion <x^k> \\spad{z} \\spad{g}(\\spad{x}) = sum_{\\spad{i=0}}\\spad{^k} \\spad{c_}{\\spad{k},{} \\spad{i}} <x^i> \\spad{g}(\\spad{x}),{} where \\spad{z} acts on \\spad{g}(\\spad{x}) by shifting. In fact,{} the result is [0,{} 0,{} 0,{} ...]"))
 (|DiffAction|
  ((|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
   "\\spad{DiffAction(k,{} l,{} g)} gives the coefficient of \\spad{x^k} in \\spad{z^l} \\spad{g}(\\spad{x}),{} where \\spad{z*}(a+b*x+c*x^2+d*x^3+...) = (a*x+b*x^2+c*x^3+...),{} \\spadignore{i.e.} multiplication with \\spad{x}."))
 (|ShiftC|
  (((|List| |#1|) (|NonNegativeInteger|))
   "\\spad{ShiftC} gives the coefficients \\spad{c_}{\\spad{k},{} \\spad{k}} in the expansion <x^k> \\spad{z} \\spad{g}(\\spad{x}) = sum_{\\spad{i=0}}\\spad{^k} \\spad{c_}{\\spad{k},{} \\spad{i}} <x^i> \\spad{g}(\\spad{x}),{} where \\spad{z} acts on \\spad{g}(\\spad{x}) by shifting. In fact,{} the result is [0,{} 1,{} 2,{} ...]"))
 (|ShiftAction|
  ((|#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
   "\\spad{ShiftAction(k,{} l,{} g)} gives the coefficient of \\spad{x^k} in \\spad{z^l} \\spad{g}(\\spad{x}),{} where \\spad{z*(a+b*x+c*x^2+d*x^3+...) = (b*x+2*c*x^2+3*d*x^3+...)}. In terms of sequences,{} z*u(\\spad{n})=n*u(\\spad{n})."))
 (|generalCoefficient|
  ((|#1| (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
    (|Vector| |#2|) (|NonNegativeInteger|)
    (|Vector| (|SparseUnivariatePolynomial| |#1|)))
   "\\spad{generalCoefficient(action,{} f,{} k,{} p)} gives the coefficient of \\spad{x^k} in \\spad{p}(\\spad{z})\\dot \\spad{f}(\\spad{x}),{} where the \\spad{action} of \\spad{z^l} on a polynomial in \\spad{x} is given by \\spad{action},{} \\spadignore{i.e.} \\spad{action}(\\spad{k},{} \\spad{l},{} \\spad{f}) should return the coefficient of \\spad{x^k} in \\spad{z^l} \\spad{f}(\\spad{x})."))
 (|generalInterpolation|
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
    (|Vector| |#2|) (|Vector| (|Integer|)) (|NonNegativeInteger|))
   "\\spad{generalInterpolation(C,{} CA,{} f,{} vd,{} K)} is like \\spad{generalInterpolation(C,{} CA,{} f,{} eta)} but solves up to order \\spad{K} and modifies \\spad{vd} to return defects of solutions")
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|) (|NonNegativeInteger|) |#2|)
    (|Vector| |#2|) (|List| (|NonNegativeInteger|)))
   "\\spad{generalInterpolation(C,{} CA,{} f,{} eta)} performs Hermite-Pade approximation using the given action \\spad{CA} of polynomials on the elements of \\spad{f}. The result is guaranteed to be correct up to order |eta|-1. Given that eta is a \"normal\" point,{} the degrees on the diagonal are given by eta. The degrees of column \\spad{i} are in this case eta + \\spad{e}.\\spad{i} - [1,{} 1,{} ...,{} 1],{} where the degree of zero is \\spad{-1}. \\blankline The first argument \\spad{C} is the list of coefficients \\spad{c_}{\\spad{k},{} \\spad{k}} in the expansion <x^k> \\spad{z} \\spad{g}(\\spad{x}) = sum_{\\spad{i=0}}\\spad{^k} \\spad{c_}{\\spad{k},{} \\spad{i}} <x^i> \\spad{g}(\\spad{x}). \\blankline The second argument,{} \\spad{CA}(\\spad{k},{} \\spad{l},{} \\spad{f}),{} should return the coefficient of \\spad{x^k} in \\spad{z^l} \\spad{f}(\\spad{x})."))
 (|interpolate|
  (((|Fraction| (|SparseUnivariatePolynomial| |#1|)) (|List| (|Fraction| |#1|))
    (|List| (|Fraction| |#1|)) (|NonNegativeInteger|))
   "\\spad{interpolate(xlist,{} ylist,{} deg)} returns the rational function with numerator degree \\spad{deg} that interpolates the given points using fraction free arithmetic.")
  (((|Fraction| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|List| |#1|) (|NonNegativeInteger|))
   "\\spad{interpolate(xlist,{} ylist,{} deg)} returns the rational function with numerator degree at most \\spad{deg} and denominator degree at most \\spad{\\#xlist-deg-1} that interpolates the given points using fraction free arithmetic. Note that rational interpolation does not guarantee that all given points are interpolated correctly: unattainable points may make this impossible."))
 (|fffg|
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|)
               (|Vector| (|SparseUnivariatePolynomial| |#1|)))
    (|List| (|NonNegativeInteger|)))
   "\\spad{fffg(C,{} c,{} eta)} is version of fffg which uses sum of eta as order")
  (((|Matrix| (|SparseUnivariatePolynomial| |#1|)) (|List| |#1|)
    (|Mapping| |#1| (|NonNegativeInteger|)
               (|Vector| (|SparseUnivariatePolynomial| |#1|)))
    (|Vector| (|Integer|)) (|NonNegativeInteger|))
   "\\spad{fffg(C,{} c,{} vd,{} K)} is the general algorithm as proposed by Beckermann and Labahn. \\blankline The first argument is the list of \\spad{c_}{\\spad{i},{} \\spad{i}}. These are the only values of \\spad{C} explicitely needed in \\spad{fffg}. \\blankline The second argument \\spad{c},{} computes \\spad{c_k}(\\spad{M}),{} \\spadignore{i.e.} \\spad{c_k}(.) is the dual basis of the vector space \\spad{V},{} but also knows about the special multiplication rule as descibed in Equation (2). Note that the information about \\spad{f} is therefore encoded in \\spad{c}. \\blankline \\spad{vd} is modified by the routine,{} on input it is the vector of degree bounds \\spad{n},{} as introduced in Definition 2.1. On output it is vector of defects (degree bound minus degree of solution). \\blankline \\spad{K} is requested order of solution.")))
(("documentation" 0 12595) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 12590) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 10504) ("modemaps" 0 4753) ("sourceFile" 0 4717)
 ("constructorCategory" 0 2522) ("constructorModemap" 0 63)
 ("constructorKind" 0 53) ("constructorForm" 0 20))