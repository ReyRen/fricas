11972               (MAKEPROP '|VectorModularReconstructor| 'NILADIC T)
(|VectorModularReconstructor|)
|domain|
(((|VectorModularReconstructor|)
  (CATEGORY |domain| (SIGNATURE |empty| ($ (|Integer|) (|Integer|)))
   (SIGNATURE |add_slots| ((|Void|) (|List| (|Integer|)) $))
   (SIGNATURE |chinese_update| ((|Void|) (|U32Vector|) (|Integer|) $))
   (SIGNATURE |rational_reconstruction|
    ((|Union|
      (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
                (|:| |denoms| (|PrimitiveArray| (|U32Vector|))))
      "failed")
     $))
   (SIGNATURE |rational_reconstruction|
    ((|Union|
      (|Record| (|:| |numer| (|U32Vector|)) (|:| |denom| (|U32Vector|)))
      "failed")
     (|U32Vector|) (|U32Vector|) (|Integer|) (|Integer|)))
   (SIGNATURE |repack_polys|
    ((|Record| (|:| |nvars| (|Integer|))
               (|:| |offsetdata| (|Vector| (|Integer|)))
               (|:| |expdata| (|SortedExponentVector|))
               (|:| |coeffdata| (|U32Vector|)))
     (|Integer|) (|Vector| (|Integer|)) (|SortedExponentVector|)
     (|PrimitiveArray| (|U32Vector|))))
   (SIGNATURE |remove_denoms|
    ((|PrimitiveArray| (|U32Vector|)) (|Vector| (|Integer|))
     (|PrimitiveArray| (|U32Vector|)) (|PrimitiveArray| (|U32Vector|))
     (|Integer|)))
   (SIGNATURE |reconstruct|
    ((|Record| (|:| |nvars| (|Integer|))
               (|:| |offsetdata| (|Vector| (|Integer|)))
               (|:| |expdata| (|SortedExponentVector|))
               (|:| |coeffdata| (|U32Vector|)))
     (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
     (|SortedExponentVector|) (|PrimitiveArray| (|U32Vector|))
     (|PrimitiveArray| (|U32Vector|)) (|Integer|)))
   (SIGNATURE |reconstruct|
    ((|Union|
      (|Record| (|:| |nvars| (|Integer|))
                (|:| |offsetdata| (|Vector| (|Integer|)))
                (|:| |expdata| (|SortedExponentVector|))
                (|:| |coeffdata| (|U32Vector|)))
      "failed")
     $ (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
     (|SortedExponentVector|)))))
 (T |VectorModularReconstructor|))
(CATEGORY |domain| (SIGNATURE |empty| ($ (|Integer|) (|Integer|)))
 (SIGNATURE |add_slots| ((|Void|) (|List| (|Integer|)) $))
 (SIGNATURE |chinese_update| ((|Void|) (|U32Vector|) (|Integer|) $))
 (SIGNATURE |rational_reconstruction|
  ((|Union|
    (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
              (|:| |denoms| (|PrimitiveArray| (|U32Vector|))))
    "failed")
   $))
 (SIGNATURE |rational_reconstruction|
  ((|Union| (|Record| (|:| |numer| (|U32Vector|)) (|:| |denom| (|U32Vector|)))
            "failed")
   (|U32Vector|) (|U32Vector|) (|Integer|) (|Integer|)))
 (SIGNATURE |repack_polys|
  ((|Record| (|:| |nvars| (|Integer|))
             (|:| |offsetdata| (|Vector| (|Integer|)))
             (|:| |expdata| (|SortedExponentVector|))
             (|:| |coeffdata| (|U32Vector|)))
   (|Integer|) (|Vector| (|Integer|)) (|SortedExponentVector|)
   (|PrimitiveArray| (|U32Vector|))))
 (SIGNATURE |remove_denoms|
  ((|PrimitiveArray| (|U32Vector|)) (|Vector| (|Integer|))
   (|PrimitiveArray| (|U32Vector|)) (|PrimitiveArray| (|U32Vector|))
   (|Integer|)))
 (SIGNATURE |reconstruct|
  ((|Record| (|:| |nvars| (|Integer|))
             (|:| |offsetdata| (|Vector| (|Integer|)))
             (|:| |expdata| (|SortedExponentVector|))
             (|:| |coeffdata| (|U32Vector|)))
   (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
   (|SortedExponentVector|) (|PrimitiveArray| (|U32Vector|))
   (|PrimitiveArray| (|U32Vector|)) (|Integer|)))
 (SIGNATURE |reconstruct|
  ((|Union|
    (|Record| (|:| |nvars| (|Integer|))
              (|:| |offsetdata| (|Vector| (|Integer|)))
              (|:| |expdata| (|SortedExponentVector|))
              (|:| |coeffdata| (|U32Vector|)))
    "failed")
   $ (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
   (|SortedExponentVector|))))
"/git/fricas/src/algebra/VECREC1.spad"
((|reconstruct| (*1 *2 *1 *3 *4 *4 *5)
  (|partial| AND (|isDomain| *4 (|Vector| (|Integer|)))
   (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |nvars| (|Integer|))
                         (|:| |offsetdata| (|Vector| (|Integer|)))
                         (|:| |expdata| (|SortedExponentVector|))
                         (|:| |coeffdata| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 (|reconstruct| (*1 *2 *3 *4 *4 *5 *6 *6 *3)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 (|remove_denoms| (*1 *2 *3 *2 *2 *4)
  (AND (|isDomain| *2 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Vector| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 (|repack_polys| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 (|rational_reconstruction| (*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|U32Vector|))
                         (|:| |denom| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 (|rational_reconstruction| (*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
                         (|:| |denoms| (|PrimitiveArray| (|U32Vector|)))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 (|chinese_update| (*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 (|add_slots| (*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 (|empty| (*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|)))))
((|repack_polys|
  (((|Record| (|:| |nvars| (|Integer|))
              (|:| |offsetdata| (|Vector| (|Integer|)))
              (|:| |expdata| (|SortedExponentVector|))
              (|:| |coeffdata| (|U32Vector|)))
    (|Integer|) (|Vector| (|Integer|)) (|SortedExponentVector|)
    (|PrimitiveArray| (|U32Vector|)))
   48))
 (|remove_denoms|
  (((|PrimitiveArray| (|U32Vector|)) (|Vector| (|Integer|))
    (|PrimitiveArray| (|U32Vector|)) (|PrimitiveArray| (|U32Vector|))
    (|Integer|))
   52))
 (|reconstruct|
  (((|Union|
     (|Record| (|:| |nvars| (|Integer|))
               (|:| |offsetdata| (|Vector| (|Integer|)))
               (|:| |expdata| (|SortedExponentVector|))
               (|:| |coeffdata| (|U32Vector|)))
     "failed")
    $ (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
    (|SortedExponentVector|))
   55)
  (((|Record| (|:| |nvars| (|Integer|))
              (|:| |offsetdata| (|Vector| (|Integer|)))
              (|:| |expdata| (|SortedExponentVector|))
              (|:| |coeffdata| (|U32Vector|)))
    (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
    (|SortedExponentVector|) (|PrimitiveArray| (|U32Vector|))
    (|PrimitiveArray| (|U32Vector|)) (|Integer|))
   53))
 (|rational_reconstruction|
  (((|Union| (|Record| (|:| |numer| (|U32Vector|)) (|:| |denom| (|U32Vector|)))
             "failed")
    (|U32Vector|) (|U32Vector|) (|Integer|) (|Integer|))
   36)
  (((|Union|
     (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
               (|:| |denoms| (|PrimitiveArray| (|U32Vector|))))
     "failed")
    $)
   42))
 (|empty| (($ (|Integer|) (|Integer|)) 8))
 (|chinese_update| (((|Void|) (|U32Vector|) (|Integer|) $) 28))
 (|add_slots| (((|Void|) (|List| (|Integer|)) $) 14)))
VECREC1
((|constructor|
  (NIL
   "This domain supports modular methods based on \\indented{1}{evaluation and rational reconstruction.\\space{2}All computation} \\indented{1}{are done on polynomials modulo machine sized prime \\spad{p} \\spad{--} \\spad{p} must} \\indented{1}{be choosen small enough to avoid overflow in intermediate} \\indented{1}{calculations. Each evaluation is supposed to produce vector of} \\indented{1}{values. Once enough evaluations are known rational reconstruction} \\indented{1}{produces vector of rational functions or multivariate polynomials.}"))
 (|reconstruct|
  (((|Union|
     (|Record| (|:| |nvars| (|Integer|))
               (|:| |offsetdata| (|Vector| (|Integer|)))
               (|:| |expdata| (|SortedExponentVector|))
               (|:| |coeffdata| (|U32Vector|)))
     "failed")
    $ (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
    (|SortedExponentVector|))
   "\\spad{reconstruct polynomials} in \\spad{n} + 1 variables")
  (((|Record| (|:| |nvars| (|Integer|))
              (|:| |offsetdata| (|Vector| (|Integer|)))
              (|:| |expdata| (|SortedExponentVector|))
              (|:| |coeffdata| (|U32Vector|)))
    (|Integer|) (|Vector| (|Integer|)) (|Vector| (|Integer|))
    (|SortedExponentVector|) (|PrimitiveArray| (|U32Vector|))
    (|PrimitiveArray| (|U32Vector|)) (|Integer|))
   "\\spad{reconstruct polynomials} in \\spad{n} + 1 variables from result of rational reconstruction"))
 (|remove_denoms|
  (((|PrimitiveArray| (|U32Vector|)) (|Vector| (|Integer|))
    (|PrimitiveArray| (|U32Vector|)) (|PrimitiveArray| (|U32Vector|))
    (|Integer|))
   "\\spad{remove_denoms(offsets,{} nums,{} denoms,{} p)} removes common denominator from vectors of rational functions. Several vectors of rational functions are packed into \\spad{nums} (storing numerators) and dens (storing denominators) Vector \\spad{i} starts at position \\spad{offsets}(\\spad{i}). Computations are done modulo \\spad{p}."))
 (|repack_polys|
  (((|Record| (|:| |nvars| (|Integer|))
              (|:| |offsetdata| (|Vector| (|Integer|)))
              (|:| |expdata| (|SortedExponentVector|))
              (|:| |coeffdata| (|U32Vector|)))
    (|Integer|) (|Vector| (|Integer|)) (|SortedExponentVector|)
    (|PrimitiveArray| (|U32Vector|)))
   "convert polynomials represented as parallel vector of exponents in \\spad{k} variables and vector of univariate polynomials to parallel vector of exponents in \\spad{k+1} variables and coefficients"))
 (|rational_reconstruction|
  (((|Union| (|Record| (|:| |numer| (|U32Vector|)) (|:| |denom| (|U32Vector|)))
             "failed")
    (|U32Vector|) (|U32Vector|) (|Integer|) (|Integer|))
   "reconstruct rational function")
  (((|Union|
     (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
               (|:| |denoms| (|PrimitiveArray| (|U32Vector|))))
     "failed")
    $)
   "reconstruct vector of rational functions based on information stored in reconstructor."))
 (|chinese_update|
  (((|Void|) (|U32Vector|) (|Integer|) $)
   "\\spad{chinese_update(v,{} pt,{} r)} informs \\spad{r} that evaluation at \\spad{pt} gave vector of values \\spad{v}"))
 (|add_slots|
  (((|Void|) (|List| (|Integer|)) $)
   "extend reconstructor adding zeros at specified positions."))
 (|empty|
  (($ (|Integer|) (|Integer|))
   "\\spad{empty(n,{} p)} initializes reconstructor with \\spad{n} slots working modulo \\spad{p}")))
(("documentation" 0 8559) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 8551) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 6799) ("modemaps" 0 3936) ("sourceFile" 0 3897)
 ("constructorCategory" 0 2079) ("constructorModemap" 0 112)
 ("constructorKind" 0 103) ("constructorForm" 0 72) ("NILADIC" 0 20))