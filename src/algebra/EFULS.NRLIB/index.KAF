16437               (|ElementaryFunctionsUnivariateLaurentSeries| |Coef| UTS
                                                                  ULS)
|domain|
(((|ElementaryFunctionsUnivariateLaurentSeries| |#1| |#2| |#3|)
  (|Join| (|PartialTranscendentalFunctions| |#3|)
          (CATEGORY |package|
           (IF (|has| |#1| (|Field|))
               (SIGNATURE ^ (|#3| |#3| (|Fraction| (|Integer|))))
               |noBranch|)
           (SIGNATURE |exp| (|#3| |#3|)) (SIGNATURE |log| (|#3| |#3|))
           (SIGNATURE |sin| (|#3| |#3|)) (SIGNATURE |cos| (|#3| |#3|))
           (SIGNATURE |tan| (|#3| |#3|)) (SIGNATURE |cot| (|#3| |#3|))
           (SIGNATURE |sec| (|#3| |#3|)) (SIGNATURE |csc| (|#3| |#3|))
           (SIGNATURE |asin| (|#3| |#3|)) (SIGNATURE |acos| (|#3| |#3|))
           (SIGNATURE |atan| (|#3| |#3|)) (SIGNATURE |acot| (|#3| |#3|))
           (SIGNATURE |asec| (|#3| |#3|)) (SIGNATURE |acsc| (|#3| |#3|))
           (SIGNATURE |sinh| (|#3| |#3|)) (SIGNATURE |cosh| (|#3| |#3|))
           (SIGNATURE |tanh| (|#3| |#3|)) (SIGNATURE |coth| (|#3| |#3|))
           (SIGNATURE |sech| (|#3| |#3|)) (SIGNATURE |csch| (|#3| |#3|))
           (SIGNATURE |asinh| (|#3| |#3|)) (SIGNATURE |acosh| (|#3| |#3|))
           (SIGNATURE |atanh| (|#3| |#3|)) (SIGNATURE |acoth| (|#3| |#3|))
           (SIGNATURE |asech| (|#3| |#3|)) (SIGNATURE |acsch| (|#3| |#3|))))
  (|Algebra| (|Fraction| (|Integer|))) (|UnivariateTaylorSeriesCategory| |#1|)
  (|UnivariateLaurentSeriesConstructorCategory| |#1| |#2|))
 (T |ElementaryFunctionsUnivariateLaurentSeries|))
(|Join| (|PartialTranscendentalFunctions| |#3|)
        (CATEGORY |package|
         (IF (|has| |#1| (|Field|))
             (SIGNATURE ^ (|#3| |#3| (|Fraction| (|Integer|))))
             |noBranch|)
         (SIGNATURE |exp| (|#3| |#3|)) (SIGNATURE |log| (|#3| |#3|))
         (SIGNATURE |sin| (|#3| |#3|)) (SIGNATURE |cos| (|#3| |#3|))
         (SIGNATURE |tan| (|#3| |#3|)) (SIGNATURE |cot| (|#3| |#3|))
         (SIGNATURE |sec| (|#3| |#3|)) (SIGNATURE |csc| (|#3| |#3|))
         (SIGNATURE |asin| (|#3| |#3|)) (SIGNATURE |acos| (|#3| |#3|))
         (SIGNATURE |atan| (|#3| |#3|)) (SIGNATURE |acot| (|#3| |#3|))
         (SIGNATURE |asec| (|#3| |#3|)) (SIGNATURE |acsc| (|#3| |#3|))
         (SIGNATURE |sinh| (|#3| |#3|)) (SIGNATURE |cosh| (|#3| |#3|))
         (SIGNATURE |tanh| (|#3| |#3|)) (SIGNATURE |coth| (|#3| |#3|))
         (SIGNATURE |sech| (|#3| |#3|)) (SIGNATURE |csch| (|#3| |#3|))
         (SIGNATURE |asinh| (|#3| |#3|)) (SIGNATURE |acosh| (|#3| |#3|))
         (SIGNATURE |atanh| (|#3| |#3|)) (SIGNATURE |acoth| (|#3| |#3|))
         (SIGNATURE |asech| (|#3| |#3|)) (SIGNATURE |acsch| (|#3| |#3|))))
"/git/fricas/src/algebra/EFULS.spad"
((^ (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *4 *5 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))
 (|exp| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|log| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|sin| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|cos| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|tan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|cot| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|sec| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|csc| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|asin| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|acos| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|atan| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|acot| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|asec| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|acsc| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|sinh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|cosh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|tanh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|coth| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|sech| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|csch| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|asinh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|acosh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|atanh| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|acoth| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|asech| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 (|acsch| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))))
((|tanhIfCan| (((|Union| |#3| #1="failed") |#3|) 109))
 (|tanh| ((|#3| |#3|) 127)) (|tanIfCan| (((|Union| |#3| #1#) |#3|) 82))
 (|tan| ((|#3| |#3|) 117)) (|sinhIfCan| (((|Union| |#3| #1#) |#3|) 58))
 (|sinh| ((|#3| |#3|) 125)) (|sinIfCan| (((|Union| |#3| #1#) |#3|) 46))
 (|sin| ((|#3| |#3|) 115)) (|sechIfCan| (((|Union| |#3| #1#) |#3|) 111))
 (|sech| ((|#3| |#3|) 129)) (|secIfCan| (((|Union| |#3| #1#) |#3|) 84))
 (|sec| ((|#3| |#3|) 119))
 (|nthRootIfCan| (((|Union| |#3| #1#) |#3| (|NonNegativeInteger|)) 36))
 (|logIfCan| (((|Union| |#3| #1#) |#3|) 74)) (|log| ((|#3| |#3|) 114))
 (|expIfCan| (((|Union| |#3| #1#) |#3|) 44)) (|exp| ((|#3| |#3|) 113))
 (|cschIfCan| (((|Union| |#3| #1#) |#3|) 112)) (|csch| ((|#3| |#3|) 130))
 (|cscIfCan| (((|Union| |#3| #1#) |#3|) 85)) (|csc| ((|#3| |#3|) 120))
 (|cothIfCan| (((|Union| |#3| #1#) |#3|) 110)) (|coth| ((|#3| |#3|) 128))
 (|cotIfCan| (((|Union| |#3| #1#) |#3|) 83)) (|cot| ((|#3| |#3|) 118))
 (|coshIfCan| (((|Union| |#3| #1#) |#3|) 60)) (|cosh| ((|#3| |#3|) 126))
 (|cosIfCan| (((|Union| |#3| #1#) |#3|) 48)) (|cos| ((|#3| |#3|) 116))
 (|atanhIfCan| (((|Union| |#3| #1#) |#3|) 66)) (|atanh| ((|#3| |#3|) 133))
 (|atanIfCan| (((|Union| |#3| #1#) |#3|) 103)) (|atan| ((|#3| |#3|) 137))
 (|asinhIfCan| (((|Union| |#3| #1#) |#3|) 62)) (|asinh| ((|#3| |#3|) 131))
 (|asinIfCan| (((|Union| |#3| #1#) |#3|) 50)) (|asin| ((|#3| |#3|) 121))
 (|asechIfCan| (((|Union| |#3| #1#) |#3|) 70)) (|asech| ((|#3| |#3|) 135))
 (|asecIfCan| (((|Union| |#3| #1#) |#3|) 54)) (|asec| ((|#3| |#3|) 123))
 (|acschIfCan| (((|Union| |#3| #1#) |#3|) 72)) (|acsch| ((|#3| |#3|) 136))
 (|acscIfCan| (((|Union| |#3| #1#) |#3|) 56)) (|acsc| ((|#3| |#3|) 124))
 (|acothIfCan| (((|Union| |#3| #1#) |#3|) 68)) (|acoth| ((|#3| |#3|) 134))
 (|acotIfCan| (((|Union| |#3| #1#) |#3|) 106)) (|acot| ((|#3| |#3|) 138))
 (|acoshIfCan| (((|Union| |#3| #1#) |#3|) 64)) (|acosh| ((|#3| |#3|) 132))
 (|acosIfCan| (((|Union| |#3| #1#) |#3|) 52)) (|acos| ((|#3| |#3|) 122))
 (^ ((|#3| |#3| (|Fraction| (|Integer|))) 40 (|has| |#1| (|Field|)))))
((|HasCategory| |#1| '(|Field|)))
EFULS
(((|PartialTranscendentalFunctions| |#3|) . T))
(((|PartialTranscendentalFunctions| |#3|) . T))
((|constructor|
  (NIL
   "\\indented{1}{This package provides elementary functions on any Laurent series} domain over a field which was constructed from a Taylor series domain. These functions are implemented by calling the corresponding functions on the Taylor series domain. We also provide 'partial functions' which compute transcendental functions of Laurent series when possible and return \"failed\" when this is not possible."))
 (|acsch|
  ((|#3| |#3|)
   "\\spad{acsch(z)} returns the inverse hyperbolic cosecant of Laurent series \\spad{z}."))
 (|asech|
  ((|#3| |#3|)
   "\\spad{asech(z)} returns the inverse hyperbolic secant of Laurent series \\spad{z}."))
 (|acoth|
  ((|#3| |#3|)
   "\\spad{acoth(z)} returns the inverse hyperbolic cotangent of Laurent series \\spad{z}."))
 (|atanh|
  ((|#3| |#3|)
   "\\spad{atanh(z)} returns the inverse hyperbolic tangent of Laurent series \\spad{z}."))
 (|acosh|
  ((|#3| |#3|)
   "\\spad{acosh(z)} returns the inverse hyperbolic cosine of Laurent series \\spad{z}."))
 (|asinh|
  ((|#3| |#3|)
   "\\spad{asinh(z)} returns the inverse hyperbolic sine of Laurent series \\spad{z}."))
 (|csch|
  ((|#3| |#3|)
   "\\spad{csch(z)} returns the hyperbolic cosecant of Laurent series \\spad{z}."))
 (|sech|
  ((|#3| |#3|)
   "\\spad{sech(z)} returns the hyperbolic secant of Laurent series \\spad{z}."))
 (|coth|
  ((|#3| |#3|)
   "\\spad{coth(z)} returns the hyperbolic cotangent of Laurent series \\spad{z}."))
 (|tanh|
  ((|#3| |#3|)
   "\\spad{tanh(z)} returns the hyperbolic tangent of Laurent series \\spad{z}."))
 (|cosh|
  ((|#3| |#3|)
   "\\spad{cosh(z)} returns the hyperbolic cosine of Laurent series \\spad{z}."))
 (|sinh|
  ((|#3| |#3|)
   "\\spad{sinh(z)} returns the hyperbolic sine of Laurent series \\spad{z}."))
 (|acsc|
  ((|#3| |#3|)
   "\\spad{acsc(z)} returns the arc-cosecant of Laurent series \\spad{z}."))
 (|asec|
  ((|#3| |#3|)
   "\\spad{asec(z)} returns the arc-secant of Laurent series \\spad{z}."))
 (|acot|
  ((|#3| |#3|)
   "\\spad{acot(z)} returns the arc-cotangent of Laurent series \\spad{z}."))
 (|atan|
  ((|#3| |#3|)
   "\\spad{atan(z)} returns the arc-tangent of Laurent series \\spad{z}."))
 (|acos|
  ((|#3| |#3|)
   "\\spad{acos(z)} returns the arc-cosine of Laurent series \\spad{z}."))
 (|asin|
  ((|#3| |#3|)
   "\\spad{asin(z)} returns the arc-sine of Laurent series \\spad{z}."))
 (|csc|
  ((|#3| |#3|)
   "\\spad{csc(z)} returns the cosecant of Laurent series \\spad{z}."))
 (|sec|
  ((|#3| |#3|)
   "\\spad{sec(z)} returns the secant of Laurent series \\spad{z}."))
 (|cot|
  ((|#3| |#3|)
   "\\spad{cot(z)} returns the cotangent of Laurent series \\spad{z}."))
 (|tan|
  ((|#3| |#3|)
   "\\spad{tan(z)} returns the tangent of Laurent series \\spad{z}."))
 (|cos|
  ((|#3| |#3|)
   "\\spad{cos(z)} returns the cosine of Laurent series \\spad{z}."))
 (|sin|
  ((|#3| |#3|) "\\spad{sin(z)} returns the sine of Laurent series \\spad{z}."))
 (|log|
  ((|#3| |#3|)
   "\\spad{log(z)} returns the logarithm of Laurent series \\spad{z}."))
 (|exp|
  ((|#3| |#3|)
   "\\spad{exp(z)} returns the exponential of Laurent series \\spad{z}."))
 (^
  ((|#3| |#3| (|Fraction| (|Integer|)))
   "\\spad{s ^ r} raises a Laurent series \\spad{s} to a rational power \\spad{r}")))
(("documentation" 0 13179) ("ancestors" 0 13131) ("parents" 0 13083)
 ("abbreviation" 0 13077) ("predicates" 0 13043) ("superDomain" 0 NIL)
 ("operationAlist" 0 10991) ("modemaps" 0 2732) ("sourceFile" 0 2695)
 ("constructorCategory" 0 1571) ("constructorModemap" 0 157)
 ("constructorKind" 0 148) ("constructorForm" 0 20))