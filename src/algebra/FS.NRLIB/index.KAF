38464               (|FunctionSpace| R)
|category|
(((|FunctionSpace| |#1|) (|Category|) (|Comparable|)) (T |FunctionSpace|))
(|Join| (|ExpressionSpace|) (|RetractableTo| (|Symbol|)) (|Patternable| |t#1|)
        (|FullyPatternMatchable| |t#1|) (|FullyRetractableTo| |t#1|)
        (CATEGORY |domain| (SIGNATURE |ground?| ((|Boolean|) $))
         (SIGNATURE |ground| (|t#1| $))
         (SIGNATURE |variables| ((|List| (|Symbol|)) $))
         (SIGNATURE |variables| ((|List| (|Symbol|)) (|List| $)))
         (SIGNATURE |applyQuote| ($ (|Symbol|) $))
         (SIGNATURE |applyQuote| ($ (|Symbol|) $ $))
         (SIGNATURE |applyQuote| ($ (|Symbol|) $ $ $))
         (SIGNATURE |applyQuote| ($ (|Symbol|) $ $ $ $))
         (SIGNATURE |applyQuote| ($ (|Symbol|) (|List| $)))
         (IF (|has| |t#1| (|ConvertibleTo| (|InputForm|)))
             (PROGN
              (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
              (SIGNATURE |eval| ($ $ (|BasicOperator|) $ (|Symbol|)))
              (SIGNATURE |eval|
               ($ $ (|List| (|BasicOperator|)) (|List| $) (|Symbol|))))
             |noBranch|)
         (IF (|has| |t#1| (|SemiGroup|))
             (PROGN
              (ATTRIBUTE (|Monoid|))
              (SIGNATURE |isTimes| ((|Union| (|List| $) "failed") $))
              (SIGNATURE |isExpt|
               ((|Union|
                 (|Record| (|:| |var| (|Kernel| $))
                           (|:| |exponent| (|Integer|)))
                 "failed")
                $)))
             |noBranch|)
         (IF (|has| |t#1| (|Group|))
             (ATTRIBUTE (|Group|))
             |noBranch|)
         (IF (|has| |t#1| (|AbelianSemiGroup|))
             (PROGN
              (ATTRIBUTE (|AbelianMonoid|))
              (SIGNATURE |isPlus| ((|Union| (|List| $) "failed") $))
              (SIGNATURE |isMult|
               ((|Union|
                 (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| $)))
                 "failed")
                $)))
             |noBranch|)
         (IF (|has| |t#1| (|AbelianGroup|))
             (ATTRIBUTE (|AbelianGroup|))
             |noBranch|)
         (IF (|has| |t#1| (|Ring|))
             (PROGN
              (ATTRIBUTE (|Ring|))
              (ATTRIBUTE (|RetractableTo| (|Polynomial| |t#1|)))
              (ATTRIBUTE (|PartialDifferentialRing| (|Symbol|)))
              (ATTRIBUTE (|FullyLinearlyExplicitOver| |t#1|))
              (SIGNATURE |coerce|
               ($ (|SparseMultivariatePolynomial| |t#1| (|Kernel| $))))
              (SIGNATURE |numer|
               ((|SparseMultivariatePolynomial| |t#1| (|Kernel| $)) $))
              (SIGNATURE |numerator| ($ $))
              (SIGNATURE |isExpt|
               ((|Union|
                 (|Record| (|:| |var| (|Kernel| $))
                           (|:| |exponent| (|Integer|)))
                 "failed")
                $ (|BasicOperator|)))
              (SIGNATURE |isExpt|
               ((|Union|
                 (|Record| (|:| |var| (|Kernel| $))
                           (|:| |exponent| (|Integer|)))
                 "failed")
                $ (|Symbol|)))
              (SIGNATURE |isPower|
               ((|Union| (|Record| (|:| |val| $) (|:| |exponent| (|Integer|)))
                         "failed")
                $))
              (SIGNATURE |eval|
               ($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))
                (|List| (|Mapping| $ $))))
              (SIGNATURE |eval|
               ($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))
                (|List| (|Mapping| $ (|List| $)))))
              (SIGNATURE |eval|
               ($ $ (|Symbol|) (|NonNegativeInteger|)
                (|Mapping| $ (|List| $))))
              (SIGNATURE |eval|
               ($ $ (|Symbol|) (|NonNegativeInteger|) (|Mapping| $ $))))
             |noBranch|)
         (IF (|has| |t#1| (|CharacteristicZero|))
             (ATTRIBUTE (|CharacteristicZero|))
             |noBranch|)
         (IF (|has| |t#1| (|CharacteristicNonZero|))
             (ATTRIBUTE (|CharacteristicNonZero|))
             |noBranch|)
         (IF (|has| |t#1| (|CommutativeRing|))
             (ATTRIBUTE (|Algebra| |t#1|))
             |noBranch|)
         (IF (|has| |t#1| (|IntegralDomain|))
             (PROGN
              (ATTRIBUTE (|Field|))
              (ATTRIBUTE (|RetractableTo| (|Fraction| (|Polynomial| |t#1|))))
              (SIGNATURE |algtower| ((|List| (|Kernel| $)) $))
              (SIGNATURE |algtower| ((|List| (|Kernel| $)) (|List| $)))
              (SIGNATURE |convert| ($ (|Factored| $)))
              (SIGNATURE |denom|
               ((|SparseMultivariatePolynomial| |t#1| (|Kernel| $)) $))
              (SIGNATURE |denominator| ($ $))
              (SIGNATURE /
               ($ (|SparseMultivariatePolynomial| |t#1| (|Kernel| $))
                (|SparseMultivariatePolynomial| |t#1| (|Kernel| $))))
              (SIGNATURE |coerce| ($ (|Fraction| |t#1|)))
              (SIGNATURE |coerce| ($ (|Polynomial| (|Fraction| |t#1|))))
              (SIGNATURE |coerce|
               ($ (|Fraction| (|Polynomial| (|Fraction| |t#1|)))))
              (SIGNATURE |univariate|
               ((|Fraction| (|SparseUnivariatePolynomial| $)) $ (|Kernel| $)))
              (IF (|has| |t#1| (|RetractableTo| (|Integer|)))
                  (ATTRIBUTE (|RetractableTo| (|Fraction| (|Integer|))))
                  |noBranch|))
             |noBranch|)))
"/git/fricas/src/algebra/FS.spad"
((|ground?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 (|ground| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2))
       (|ofCategory| *2 (|Comparable|))))
 (|variables| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Symbol|)))))
 (|variables| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| (|Symbol|)))))
 (|applyQuote| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|applyQuote| (*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|applyQuote| (*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|applyQuote| (*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 (|applyQuote| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|))))
 (|eval| (*1 *1 *1 *2 *1 *3)
         (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Symbol|))
              (|ofCategory| *1 (|FunctionSpace| *4))
              (|ofCategory| *4 (|Comparable|))
              (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))))
 (|eval| (*1 *1 *1 *2 *3 *4)
         (AND (|isDomain| *2 (|List| (|BasicOperator|)))
              (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|Symbol|))
              (|ofCategory| *1 (|FunctionSpace| *5))
              (|ofCategory| *5 (|Comparable|))
              (|ofCategory| *5 (|ConvertibleTo| (|InputForm|)))))
 (|isTimes| (*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 (|isExpt| (*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 (|isPlus| (*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 (|isMult| (*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| *1))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 (|coerce| (*1 *1 *2)
           (AND
            (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
            (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
            (|ofCategory| *1 (|FunctionSpace| *3))))
 (|numer| (*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 (|numerator| (*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|Ring|))))
 (|isExpt| (*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 (|isExpt| (*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 (|isPower| (*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2 (|Record| (|:| |val| *1) (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 (|eval| (*1 *1 *1 *2 *3 *4)
         (AND (|isDomain| *2 (|List| (|Symbol|)))
              (|isDomain| *3 (|List| (|NonNegativeInteger|)))
              (|isDomain| *4 (|List| (|Mapping| *1 *1)))
              (|ofCategory| *1 (|FunctionSpace| *5))
              (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|Ring|))))
 (|eval| (*1 *1 *1 *2 *3 *4)
         (AND (|isDomain| *2 (|List| (|Symbol|)))
              (|isDomain| *3 (|List| (|NonNegativeInteger|)))
              (|isDomain| *4 (|List| (|Mapping| *1 (|List| *1))))
              (|ofCategory| *1 (|FunctionSpace| *5))
              (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|Ring|))))
 (|eval| (*1 *1 *1 *2 *3 *4)
         (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
              (|isDomain| *4 (|Mapping| *1 (|List| *1)))
              (|ofCategory| *1 (|FunctionSpace| *5))
              (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|Ring|))))
 (|eval| (*1 *1 *1 *2 *3 *4)
         (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
              (|isDomain| *4 (|Mapping| *1 *1))
              (|ofCategory| *1 (|FunctionSpace| *5))
              (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|Ring|))))
 (|algtower| (*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 (|algtower| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 (|convert| (*1 *1 *2)
            (AND (|isDomain| *2 (|Factored| *1))
                 (|ofCategory| *1 (|FunctionSpace| *3))
                 (|ofCategory| *3 (|IntegralDomain|))
                 (|ofCategory| *3 (|Comparable|))))
 (|denom| (*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 (|denominator| (*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|IntegralDomain|))))
 (/ (*1 *1 *2 *2)
    (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
         (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
         (|ofCategory| *1 (|FunctionSpace| *3))))
 (|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|Fraction| *3))
                (|ofCategory| *3 (|IntegralDomain|))
                (|ofCategory| *3 (|Comparable|))
                (|ofCategory| *1 (|FunctionSpace| *3))))
 (|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|Polynomial| (|Fraction| *3)))
                (|ofCategory| *3 (|IntegralDomain|))
                (|ofCategory| *3 (|Comparable|))
                (|ofCategory| *1 (|FunctionSpace| *3))))
 (|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Fraction| *3))))
                (|ofCategory| *3 (|IntegralDomain|))
                (|ofCategory| *3 (|Comparable|))
                (|ofCategory| *1 (|FunctionSpace| *3))))
 (|univariate| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *1))))))
((~= (((|Boolean|) $ $) 6))
 (|zero?| (((|Boolean|) $) 6 (|has| |#1| (|AbelianSemiGroup|))))
 (|variables| (((|List| (|Symbol|)) $) 6) (((|List| (|Symbol|)) (|List| $)) 6))
 (|univariate|
  (((|Fraction| (|SparseUnivariatePolynomial| $)) $ (|Kernel| $)) 6
   (|has| |#1| (|IntegralDomain|))))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6
   (|has| |#1| (|IntegralDomain|))))
 (|unitCanonical| (($ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|unit?| (((|Boolean|) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|tower| (((|List| (|Kernel| $)) $) 6) (((|List| (|Kernel| $)) (|List| $)) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6 (|has| |#1| (|AbelianGroup|))))
 (|subst| (($ $ (|Equation| $)) 6) (($ $ (|List| (|Equation| $))) 6)
  (($ $ (|List| (|Kernel| $)) (|List| $)) 6))
 (|squareFreePart| (($ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|squareFree| (((|Factored| $) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|smaller?| (((|Boolean|) $ $) 6))
 (|sizeLess?| (((|Boolean|) $ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|sample|
  (($) 6 (OR (|has| |#1| (|SemiGroup|)) (|has| |#1| (|AbelianSemiGroup|)))
   CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6 (|has| |#1| (|SemiGroup|))))
 (|rightPower| (($ $ (|NonNegativeInteger|)) 6 (|has| |#1| (|SemiGroup|)))
  (($ $ (|PositiveInteger|)) 6 (|has| |#1| (|SemiGroup|))))
 (|retractIfCan| (((|Union| (|Kernel| $) #2="failed") $) 6)
  (((|Union| (|Symbol|) #2#) $) 6)
  (((|Union| (|Integer|) #2#) $) 6 (|has| |#1| (|RetractableTo| (|Integer|))))
  (((|Union| |#1| #2#) $) 6)
  (((|Union| (|Fraction| (|Integer|)) #2#) $) 6
   (OR
    (AND (|has| |#1| (|RetractableTo| (|Integer|)))
         (|has| |#1| (|IntegralDomain|)))
    (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|))))))
  (((|Union| (|Fraction| (|Polynomial| |#1|)) #2#) $) 6
   (|has| |#1| (|IntegralDomain|)))
  (((|Union| (|Polynomial| |#1|) #2#) $) 6 (|has| |#1| (|Ring|))))
 (|retract| (((|Kernel| $) $) 6) (((|Symbol|) $) 6)
            (((|Integer|) $) 6 (|has| |#1| (|RetractableTo| (|Integer|))))
            ((|#1| $) 6)
            (((|Fraction| (|Integer|)) $) 6
             (OR
              (AND (|has| |#1| (|RetractableTo| (|Integer|)))
                   (|has| |#1| (|IntegralDomain|)))
              (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|))))))
            (((|Fraction| (|Polynomial| |#1|)) $) 6
             (|has| |#1| (|IntegralDomain|)))
            (((|Polynomial| |#1|) $) 6 (|has| |#1| (|Ring|))))
 (|rem| (($ $ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|reducedSystem|
  (((|Matrix| (|Integer|)) (|Matrix| $)) 6
   (|and| (|has| |#1| (|LinearlyExplicitOver| (|Integer|)))
    (|has| |#1| (|Ring|))))
  (((|Record| (|:| |mat| (|Matrix| (|Integer|)))
              (|:| |vec| (|Vector| (|Integer|))))
    (|Matrix| $) (|Vector| $))
   6
   (|and| (|has| |#1| (|LinearlyExplicitOver| (|Integer|)))
    (|has| |#1| (|Ring|))))
  (((|Record| (|:| |mat| (|Matrix| |#1|)) (|:| |vec| (|Vector| |#1|)))
    (|Matrix| $) (|Vector| $))
   6 (|has| |#1| (|Ring|)))
  (((|Matrix| |#1|) (|Matrix| $)) 6 (|has| |#1| (|Ring|))))
 (|recip| (((|Union| $ #1#) $) 6 (|has| |#1| (|SemiGroup|))))
 (|quo| (($ $ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)) 6
   (|has| |#1| (|IntegralDomain|))))
 (|prime?| (((|Boolean|) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|patternMatch|
  (((|PatternMatchResult| (|Integer|) $) $ (|Pattern| (|Integer|))
    (|PatternMatchResult| (|Integer|) $))
   6 (|has| |#1| (|PatternMatchable| (|Integer|))))
  (((|PatternMatchResult| (|Float|) $) $ (|Pattern| (|Float|))
    (|PatternMatchResult| (|Float|) $))
   6 (|has| |#1| (|PatternMatchable| (|Float|)))))
 (|paren| (($ $) 6))
 (|opposite?| (((|Boolean|) $ $) 6 (|has| |#1| (|AbelianSemiGroup|))))
 (|operators| (((|List| (|BasicOperator|)) $) 6))
 (|operator| (((|BasicOperator|) (|BasicOperator|)) 6))
 (|one?| (((|Boolean|) $) 6 (|has| |#1| (|SemiGroup|))))
 (|odd?| (((|Boolean|) $) 6 (|has| $ (|RetractableTo| (|Integer|)))))
 (|numerator| (($ $) 6 (|has| |#1| (|Ring|))))
 (|numer|
  (((|SparseMultivariatePolynomial| |#1| (|Kernel| $)) $) 6
   (|has| |#1| (|Ring|))))
 (|multiEuclidean|
  (((|Union| (|List| $) #3="failed") (|List| $) $) 6
   (|has| |#1| (|IntegralDomain|))))
 (|minPoly|
  (((|SparseUnivariatePolynomial| $) (|Kernel| $)) 6 (|has| $ (|Ring|))))
 (|map| (($ (|Mapping| $ $) (|Kernel| $)) 6))
 (|mainKernel| (((|Union| (|Kernel| $) "failed") $) 6))
 (|leftRecip| (((|Union| $ #1#) $) 6 (|has| |#1| (|SemiGroup|))))
 (|leftPower| (($ $ (|NonNegativeInteger|)) 6 (|has| |#1| (|SemiGroup|)))
  (($ $ (|PositiveInteger|)) 6 (|has| |#1| (|SemiGroup|))))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) 6
   (|has| |#1| (|IntegralDomain|))))
 (|lcm| (($ (|List| $)) 6 (|has| |#1| (|IntegralDomain|)))
  (($ $ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|latex| (((|String|) $) 6))
 (|kernels| (((|List| (|Kernel| $)) $) 6)
  (((|List| (|Kernel| $)) (|List| $)) 6))
 (|kernel| (($ (|BasicOperator|) $) 6) (($ (|BasicOperator|) (|List| $)) 6))
 (|isTimes| (((|Union| (|List| $) "failed") $) 6 (|has| |#1| (|SemiGroup|))))
 (|isPower|
  (((|Union| (|Record| (|:| |val| $) (|:| |exponent| (|Integer|))) "failed") $)
   6 (|has| |#1| (|Ring|))))
 (|isPlus|
  (((|Union| (|List| $) "failed") $) 6 (|has| |#1| (|AbelianSemiGroup|))))
 (|isMult|
  (((|Union| (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| $)))
             "failed")
    $)
   6 (|has| |#1| (|AbelianSemiGroup|))))
 (|isExpt|
  (((|Union| (|Record| (|:| |var| (|Kernel| $)) (|:| |exponent| (|Integer|)))
             "failed")
    $)
   6 (|has| |#1| (|SemiGroup|)))
  (((|Union| (|Record| (|:| |var| (|Kernel| $)) (|:| |exponent| (|Integer|)))
             "failed")
    $ (|BasicOperator|))
   6 (|has| |#1| (|Ring|)))
  (((|Union| (|Record| (|:| |var| (|Kernel| $)) (|:| |exponent| (|Integer|)))
             "failed")
    $ (|Symbol|))
   6 (|has| |#1| (|Ring|))))
 (|is?| (((|Boolean|) $ (|BasicOperator|)) 6) (((|Boolean|) $ (|Symbol|)) 6))
 (|inv| (($ $) 6 (OR (|has| |#1| (|Group|)) (|has| |#1| (|IntegralDomain|)))))
 (|height| (((|NonNegativeInteger|) $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|ground?| (((|Boolean|) $) 6))
 (|ground| ((|#1| $) 6))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   6 (|has| |#1| (|IntegralDomain|))))
 (|gcd| (($ (|List| $)) 6 (|has| |#1| (|IntegralDomain|)))
  (($ $ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|freeOf?| (((|Boolean|) $ $) 6) (((|Boolean|) $ (|Symbol|)) 6))
 (|factor| (((|Factored| $) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|extendedEuclidean|
  (((|Union| (|Record| (|:| |coef1| $) (|:| |coef2| $)) #3#) $ $ $) 6
   (|has| |#1| (|IntegralDomain|)))
  (((|Record| (|:| |coef1| $) (|:| |coef2| $) (|:| |generator| $)) $ $) 6
   (|has| |#1| (|IntegralDomain|))))
 (|exquo| (((|Union| $ "failed") $ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|expressIdealMember|
  (((|Union| (|List| $) "failed") (|List| $) $) 6
   (|has| |#1| (|IntegralDomain|))))
 (|even?| (((|Boolean|) $) 6 (|has| $ (|RetractableTo| (|Integer|)))))
 (|eval| (($ $ (|Kernel| $) $) 6) (($ $ (|List| (|Kernel| $)) (|List| $)) 6)
         (($ $ (|List| (|Equation| $))) 6) (($ $ (|Equation| $)) 6)
         (($ $ $ $) 6) (($ $ (|List| $) (|List| $)) 6)
         (($ $ (|List| (|Symbol|)) (|List| (|Mapping| $ $))) 6)
         (($ $ (|List| (|Symbol|)) (|List| (|Mapping| $ (|List| $)))) 6)
         (($ $ (|Symbol|) (|Mapping| $ (|List| $))) 6)
         (($ $ (|Symbol|) (|Mapping| $ $)) 6)
         (($ $ (|List| (|BasicOperator|)) (|List| (|Mapping| $ $))) 6)
         (($ $ (|List| (|BasicOperator|)) (|List| (|Mapping| $ (|List| $)))) 6)
         (($ $ (|BasicOperator|) (|Mapping| $ (|List| $))) 6)
         (($ $ (|BasicOperator|) (|Mapping| $ $)) 6)
         (($ $ (|BasicOperator|) $ (|Symbol|)) 6
          (|has| |#1| (|ConvertibleTo| (|InputForm|))))
         (($ $ (|List| (|BasicOperator|)) (|List| $) (|Symbol|)) 6
          (|has| |#1| (|ConvertibleTo| (|InputForm|))))
         (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))
           (|List| (|Mapping| $ $)))
          6 (|has| |#1| (|Ring|)))
         (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))
           (|List| (|Mapping| $ (|List| $))))
          6 (|has| |#1| (|Ring|)))
         (($ $ (|Symbol|) (|NonNegativeInteger|) (|Mapping| $ (|List| $))) 6
          (|has| |#1| (|Ring|)))
         (($ $ (|Symbol|) (|NonNegativeInteger|) (|Mapping| $ $)) 6
          (|has| |#1| (|Ring|))))
 (|euclideanSize|
  (((|NonNegativeInteger|) $) 6 (|has| |#1| (|IntegralDomain|))))
 (|elt| (($ (|BasicOperator|) $) 6) (($ (|BasicOperator|) $ $) 6)
  (($ (|BasicOperator|) $ $ $) 6) (($ (|BasicOperator|) $ $ $ $) 6)
  (($ (|BasicOperator|) $ $ $ $ $) 6) (($ (|BasicOperator|) $ $ $ $ $ $) 6)
  (($ (|BasicOperator|) $ $ $ $ $ $ $) 6)
  (($ (|BasicOperator|) $ $ $ $ $ $ $ $) 6)
  (($ (|BasicOperator|) $ $ $ $ $ $ $ $ $) 6)
  (($ (|BasicOperator|) (|List| $)) 6))
 (|divide|
  (((|Record| (|:| |quotient| $) (|:| |remainder| $)) $ $) 6
   (|has| |#1| (|IntegralDomain|))))
 (|distribute| (($ $) 6) (($ $ $) 6))
 (|differentiate|
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) 6
   (|has| |#1| (|Ring|)))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) 6 (|has| |#1| (|Ring|)))
  (($ $ (|List| (|Symbol|))) 6 (|has| |#1| (|Ring|)))
  (($ $ (|Symbol|)) 6 (|has| |#1| (|Ring|))))
 (|denominator| (($ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|denom|
  (((|SparseMultivariatePolynomial| |#1| (|Kernel| $)) $) 6
   (|has| |#1| (|IntegralDomain|))))
 (|definingPolynomial| (($ $) 6 (|has| $ (|Ring|))))
 (|convert|
  (((|Pattern| (|Integer|)) $) 6
   (|has| |#1| (|ConvertibleTo| (|Pattern| (|Integer|)))))
  (((|Pattern| (|Float|)) $) 6
   (|has| |#1| (|ConvertibleTo| (|Pattern| (|Float|)))))
  (($ (|Factored| $)) 6 (|has| |#1| (|IntegralDomain|)))
  (((|InputForm|) $) 6 (|has| |#1| (|ConvertibleTo| (|InputForm|)))))
 (|conjugate| (($ $ $) 6 (|has| |#1| (|Group|))))
 (|commutator| (($ $ $) 6 (OR (|has| |#1| (|Group|)) (|has| |#1| (|Ring|)))))
 (|coerce| (((|OutputForm|) $) 6) (($ (|Kernel| $)) 6) (($ (|Symbol|)) 6)
           (($ |#1|) 6)
           (($ (|SparseMultivariatePolynomial| |#1| (|Kernel| $))) 6
            (|has| |#1| (|Ring|)))
           (($ (|Fraction| |#1|)) 6 (|has| |#1| (|IntegralDomain|)))
           (($ (|Polynomial| (|Fraction| |#1|))) 6
            (|has| |#1| (|IntegralDomain|)))
           (($ (|Fraction| (|Polynomial| (|Fraction| |#1|)))) 6
            (|has| |#1| (|IntegralDomain|)))
           (($ (|Fraction| (|Polynomial| |#1|))) 6
            (|has| |#1| (|IntegralDomain|)))
           (($ (|Fraction| (|Integer|))) 6
            (OR (|has| |#1| (|IntegralDomain|))
                (AND (|has| |#1| (|RetractableTo| (|Integer|)))
                     (|has| |#1| (|IntegralDomain|)))
                (|has| |#1| (|RetractableTo| (|Fraction| (|Integer|))))))
           (($ $) 6 (|has| |#1| (|IntegralDomain|)))
           (($ (|Polynomial| |#1|)) 6 (|has| |#1| (|Ring|)))
           (($ (|Integer|)) 6
            (OR (|has| |#1| (|Ring|))
                (|has| |#1| (|RetractableTo| (|Integer|))))))
 (|charthRoot|
  (((|Union| $ "failed") $) 6 (|has| |#1| (|CharacteristicNonZero|))))
 (|characteristic| (((|NonNegativeInteger|)) 6 (|has| |#1| (|Ring|))))
 (|box| (($ $) 6)) (|belong?| (((|Boolean|) (|BasicOperator|)) 6))
 (|associator| (($ $ $ $) 6 (|has| |#1| (|Ring|))))
 (|associates?| (((|Boolean|) $ $) 6 (|has| |#1| (|IntegralDomain|))))
 (|applyQuote| (($ (|Symbol|) $) 6) (($ (|Symbol|) $ $) 6)
  (($ (|Symbol|) $ $ $) 6) (($ (|Symbol|) $ $ $ $) 6)
  (($ (|Symbol|) (|List| $)) 6))
 (|antiCommutator| (($ $ $) 6 (|has| |#1| (|Ring|))))
 (|annihilate?| (((|Boolean|) $ $) 6 (|has| |#1| (|Ring|))))
 (|algtower| (((|List| (|Kernel| $)) $) 6 (|has| |#1| (|IntegralDomain|)))
  (((|List| (|Kernel| $)) (|List| $)) 6 (|has| |#1| (|IntegralDomain|))))
 (^
  (($ $ (|Integer|)) 6
   (OR (|has| |#1| (|Group|)) (|has| |#1| (|IntegralDomain|))))
  (($ $ (|NonNegativeInteger|)) 6 (|has| |#1| (|SemiGroup|)))
  (($ $ (|PositiveInteger|)) 6 (|has| |#1| (|SemiGroup|))))
 (|Zero| (($) 6 (|has| |#1| (|AbelianSemiGroup|)) CONST))
 (|One| (($) 6 (|has| |#1| (|SemiGroup|)) CONST))
 (D
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) 6
   (|has| |#1| (|Ring|)))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) 6 (|has| |#1| (|Ring|)))
  (($ $ (|List| (|Symbol|))) 6 (|has| |#1| (|Ring|)))
  (($ $ (|Symbol|)) 6 (|has| |#1| (|Ring|))))
 (= (((|Boolean|) $ $) 6))
 (/
  (($ (|SparseMultivariatePolynomial| |#1| (|Kernel| $))
    (|SparseMultivariatePolynomial| |#1| (|Kernel| $)))
   6 (|has| |#1| (|IntegralDomain|)))
  (($ $ $) 6 (OR (|has| |#1| (|Group|)) (|has| |#1| (|IntegralDomain|)))))
 (- (($ $ $) 6 (|has| |#1| (|AbelianGroup|)))
    (($ $) 6 (|has| |#1| (|AbelianGroup|))))
 (+ (($ $ $) 6 (|has| |#1| (|AbelianSemiGroup|))))
 (* (($ (|Fraction| (|Integer|)) $) 6 (|has| |#1| (|IntegralDomain|)))
    (($ $ (|Fraction| (|Integer|))) 6 (|has| |#1| (|IntegralDomain|)))
    (($ |#1| $) 6 (|has| |#1| (|CommutativeRing|)))
    (($ $ |#1|) 6 (|has| |#1| (|CommutativeRing|)))
    (($ (|Integer|) $) 6 (|has| |#1| (|AbelianGroup|)))
    (($ (|NonNegativeInteger|) $) 6 (|has| |#1| (|AbelianSemiGroup|)))
    (($ (|PositiveInteger|) $) 6 (|has| |#1| (|AbelianSemiGroup|)))
    (($ $ $) 6 (|has| |#1| (|SemiGroup|)))))
FS
(((|ExpressionSpace|) . T) ((|RetractableTo| (|Symbol|)) . T)
 ((|Patternable| |#1|) . T) ((|FullyPatternMatchable| |#1|) . T)
 ((|FullyRetractableTo| |#1|) . T)
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|)))
 ((|Monoid|) |has| |#1| (|SemiGroup|)) ((|Group|) |has| |#1| (|Group|))
 ((|AbelianMonoid|) |has| |#1| (|AbelianSemiGroup|))
 ((|AbelianGroup|) |has| |#1| (|AbelianGroup|))
 ((|FullyLinearlyExplicitOver| |#1|) |has| |#1| (|Ring|))
 ((|PartialDifferentialRing| (|Symbol|)) |has| |#1| (|Ring|))
 ((|RetractableTo| (|Polynomial| |#1|)) |has| |#1| (|Ring|))
 ((|Ring|) |has| |#1| (|Ring|))
 ((|CharacteristicZero|) |has| |#1| (|CharacteristicZero|))
 ((|CharacteristicNonZero|) |has| |#1| (|CharacteristicNonZero|))
 ((|Algebra| |#1|) |has| |#1| (|CommutativeRing|))
 ((|RetractableTo| (|Fraction| (|Integer|))) AND
  (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|RetractableTo| (|Integer|))))
 ((|RetractableTo| (|Fraction| (|Polynomial| |#1|))) |has| |#1|
  (|IntegralDomain|))
 ((|Field|) |has| |#1| (|IntegralDomain|)))
(((|AbelianGroup|) OR
  (AND (|has| |#1| (|Ring|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|IntegralDomain|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CharacteristicZero|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CharacteristicNonZero|)) (|has| |t#1| (|AbelianGroup|)))
  (|has| |#1| (|AbelianGroup|)))
 ((|AbelianMonoid|) |has| |#1| (|AbelianSemiGroup|))
 ((|AbelianSemiGroup|) |has| |#1| (|AbelianSemiGroup|))
 ((|Algebra| (|Fraction| (|Integer|))) |has| |#1| (|IntegralDomain|))
 ((|Algebra| $) |has| |#1| (|IntegralDomain|))
 ((|Algebra| |#1|) |has| |#1| (|CommutativeRing|)) ((|BasicType|) . T)
 ((|BiModule| |t#1| |t#1|) |has| |#1| (|CommutativeRing|))
 ((|BiModule| $ $) |has| |#1| (|Ring|))
 ((|CancellationAbelianMonoid|) OR
  (AND (|has| |#1| (|Ring|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|IntegralDomain|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CharacteristicZero|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CharacteristicNonZero|)) (|has| |t#1| (|AbelianGroup|)))
  (|has| |#1| (|AbelianGroup|)))
 ((|CharacteristicNonZero|) |has| |#1| (|CharacteristicNonZero|))
 ((|CharacteristicZero|) |has| |#1| (|CharacteristicZero|))
 ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CommutativeRing|) |has| |#1| (|IntegralDomain|))
 ((|CommutativeStar|) |has| |#1| (|IntegralDomain|)) ((|Comparable|) . T)
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|)))
 ((|ConvertibleTo| (|Pattern| (|Float|))) |has| |t#1|
  (|ConvertibleTo| (|Pattern| (|Float|))))
 ((|ConvertibleTo| (|Pattern| (|Integer|))) |has| |t#1|
  (|ConvertibleTo| (|Pattern| (|Integer|))))
 ((|DivisionRing|) |has| |#1| (|IntegralDomain|))
 ((|EntireRing|) |has| |#1| (|IntegralDomain|))
 ((|EuclideanDomain|) |has| |#1| (|IntegralDomain|)) ((|Evalable| $) . T)
 ((|ExpressionSpace|) . T) ((|Field|) |has| |#1| (|IntegralDomain|))
 ((|FullyLinearlyExplicitOver| |#1|) |has| |#1| (|Ring|))
 ((|FullyPatternMatchable| |#1|) . T) ((|FullyRetractableTo| |#1|) . T)
 ((|GcdDomain|) |has| |#1| (|IntegralDomain|)) ((|Group|) |has| |#1| (|Group|))
 ((|InnerEvalable| |t#1| |t#1|) . T) ((|InnerEvalable| (|Kernel| $) $) . T)
 ((|IntegralDomain|) |has| |#1| (|IntegralDomain|))
 ((|LeftModule| |t#1|) |has| |#1| (|Ring|))
 ((|LeftOreRing|) |has| |#1| (|IntegralDomain|))
 ((|LinearlyExplicitOver| (|Integer|)) AND (|has| |#1| (|Ring|))
  (|has| |t#1| (|LinearlyExplicitOver| (|Integer|))))
 ((|LinearlyExplicitOver| |t#1|) |has| |#1| (|Ring|))
 ((|Magma|) |has| |#1| (|SemiGroup|))
 ((|MagmaWithUnit|) |has| |#1| (|SemiGroup|))
 ((|Module| |t#1|) |has| |#1| (|CommutativeRing|))
 ((|Monoid|) |has| |#1| (|SemiGroup|))
 ((|NonAssociativeRing|) |has| |#1| (|Ring|))
 ((|NonAssociativeRng|) |has| |#1| (|Ring|))
 ((|NonAssociativeSemiRing|) |has| |#1| (|Ring|))
 ((|NonAssociativeSemiRng|) |has| |#1| (|Ring|))
 ((|PartialDifferentialRing| (|Symbol|)) |has| |#1| (|Ring|))
 ((|PatternMatchable| (|Float|)) |has| |t#1| (|PatternMatchable| (|Float|)))
 ((|PatternMatchable| (|Integer|)) |has| |t#1|
  (|PatternMatchable| (|Integer|)))
 ((|Patternable| |#1|) . T)
 ((|PrincipalIdealDomain|) |has| |#1| (|IntegralDomain|))
 ((|RetractableTo| (|Fraction| (|Polynomial| |#1|))) |has| |#1|
  (|IntegralDomain|))
 ((|RetractableTo| (|Polynomial| |#1|)) |has| |#1| (|Ring|))
 ((|RetractableTo| (|Fraction| (|Integer|))) OR
  (|has| |t#1| (|RetractableTo| (|Fraction| (|Integer|))))
  (AND (|has| |#1| (|IntegralDomain|))
       (|has| |#1| (|RetractableTo| (|Integer|)))))
 ((|RetractableTo| (|Integer|)) |has| |t#1| (|RetractableTo| (|Integer|)))
 ((|RetractableTo| |t#1|) . T) ((|RetractableTo| (|Symbol|)) . T)
 ((|RetractableTo| (|Kernel| $)) . T)
 ((|RightModule| |t#2|) |has| |#1| (|Ring|)) ((|Ring|) |has| |#1| (|Ring|))
 ((|Rng|) |has| |#1| (|Ring|)) ((|SemiGroup|) |has| |#1| (|SemiGroup|))
 ((|SemiRing|) |has| |#1| (|Ring|)) ((|SemiRng|) |has| |#1| (|Ring|))
 ((|SetCategory|) . T)
 ((|TwoSidedRecip|) OR (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|Group|)))
 ((|Type|) . T) ((|UniqueFactorizationDomain|) |has| |#1| (|IntegralDomain|))
 ((|canonicalUnitNormal|) |has| |#1| (|IntegralDomain|))
 ((|canonicalsClosed|) |has| |#1| (|IntegralDomain|))
 ((|noZeroDivisors|) |has| |#1| (|IntegralDomain|))
 ((|unitsKnown|) OR (|has| |#1| (|Ring|)) (|has| |#1| (|Group|))))
((|constructor|
  (NIL
   "A space of formal functions with arguments in an arbitrary ordered set."))
 (|univariate|
  (((|Fraction| (|SparseUnivariatePolynomial| $)) $ (|Kernel| $))
   "\\spad{univariate(f,{} k)} returns \\spad{f} viewed as a univariate fraction in \\spad{k}."))
 (/
  (($ (|SparseMultivariatePolynomial| |#1| (|Kernel| $))
    (|SparseMultivariatePolynomial| |#1| (|Kernel| $)))
   "\\spad{p1/p2} returns the quotient of \\spad{p1} and \\spad{p2} as an element of \\%."))
 (|denominator|
  (($ $)
   "\\spad{denominator(f)} returns the denominator of \\spad{f} converted to \\%."))
 (|denom|
  (((|SparseMultivariatePolynomial| |#1| (|Kernel| $)) $)
   "\\spad{denom(f)} returns the denominator of \\spad{f} viewed as a polynomial in the kernels over \\spad{R}."))
 (|convert|
  (($ (|Factored| $))
   "\\spad{convert(f1\\^e1 ... fm\\^em)} returns \\spad{(f1)\\^e1 ... (fm)\\^em} as an element of \\%,{} using formal kernels created using a \\spadfunFrom{paren}{ExpressionSpace}."))
 (|algtower|
  (((|List| (|Kernel| $)) (|List| $))
   "\\spad{algtower([f1,{} ...,{} fn])} returns list of kernels \\spad{[ak1,{} ...,{} akl]} such that each toplevel algebraic kernel in one of \\spad{f1},{} ...,{} \\spad{fn} or in arguments of \\spad{ak1},{} ...,{} akl is one of \\spad{ak1},{} ...,{} akl.")
  (((|List| (|Kernel| $)) $) "\\spad{algtower(f)} is algtower([\\spad{f}])"))
 (|isPower|
  (((|Union| (|Record| (|:| |val| $) (|:| |exponent| (|Integer|))) "failed") $)
   "\\spad{isPower(p)} returns \\spad{[x,{} n]} if \\spad{p = x^n} and \\spad{n ~= 0}."))
 (|numerator|
  (($ $)
   "\\spad{numerator(f)} returns the numerator of \\spad{f} converted to \\%."))
 (|numer|
  (((|SparseMultivariatePolynomial| |#1| (|Kernel| $)) $)
   "\\spad{numer(f)} returns the numerator of \\spad{f} viewed as a polynomial in the kernels over \\spad{R} if \\spad{R} is an integral domain. If not,{} then numer(\\spad{f}) = \\spad{f} viewed as a polynomial in the kernels over \\spad{R}."))
 (|coerce|
  (($ (|Fraction| (|Polynomial| (|Fraction| |#1|))))
   "\\spad{coerce(f)} returns \\spad{f} as an element of \\%.")
  (($ (|Polynomial| (|Fraction| |#1|)))
   "\\spad{coerce(p)} returns \\spad{p} as an element of \\%.")
  (($ (|Fraction| |#1|))
   "\\spad{coerce(q)} returns \\spad{q} as an element of \\%.")
  (($ (|SparseMultivariatePolynomial| |#1| (|Kernel| $)))
   "\\spad{coerce(p)} returns \\spad{p} as an element of \\%."))
 (|isMult|
  (((|Union| (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| $)))
             "failed")
    $)
   "\\spad{isMult(p)} returns \\spad{[n,{} x]} if \\spad{p = n * x} and \\spad{n ~= 0}."))
 (|isPlus|
  (((|Union| (|List| $) "failed") $)
   "\\spad{isPlus(p)} returns \\spad{[m1,{} ...,{} mn]} if \\spad{p = m1 +...+ mn} and \\spad{n > 1}."))
 (|isExpt|
  (((|Union| (|Record| (|:| |var| (|Kernel| $)) (|:| |exponent| (|Integer|)))
             "failed")
    $ (|Symbol|))
   "\\spad{isExpt(p,{} f)} returns \\spad{[x,{} n]} if \\spad{p = x^n} and \\spad{n ~= 0} and \\spad{x = f(a)}.")
  (((|Union| (|Record| (|:| |var| (|Kernel| $)) (|:| |exponent| (|Integer|)))
             "failed")
    $ (|BasicOperator|))
   "\\spad{isExpt(p,{} op)} returns \\spad{[x,{} n]} if \\spad{p = x^n} and \\spad{n ~= 0} and \\spad{x = op(a)}.")
  (((|Union| (|Record| (|:| |var| (|Kernel| $)) (|:| |exponent| (|Integer|)))
             "failed")
    $)
   "\\spad{isExpt(p)} returns \\spad{[x,{} n]} if \\spad{p = x^n} and \\spad{n ~= 0}."))
 (|isTimes|
  (((|Union| (|List| $) "failed") $)
   "\\spad{isTimes(p)} returns \\spad{[a1,{} ...,{} an]} if \\spad{p = a1*...*an} and \\spad{n > 1}."))
 (|eval|
  (($ $ (|Symbol|) (|NonNegativeInteger|) (|Mapping| $ $))
   "\\spad{eval(x,{} s,{} n,{} f)} replaces every \\spad{s(a)^n} in \\spad{x} by \\spad{f(a)} for any \\spad{a}.")
  (($ $ (|Symbol|) (|NonNegativeInteger|) (|Mapping| $ (|List| $)))
   "\\spad{eval(x,{} s,{} n,{} f)} replaces every \\spad{s(a1,{} ...,{} am)^n} in \\spad{x} by \\spad{f(a1,{} ...,{} am)} for any \\spad{a1},{} ...,{} am.")
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))
    (|List| (|Mapping| $ (|List| $))))
   "\\spad{eval(x,{} [s1,{} ...,{} sm],{} [n1,{} ...,{} nm],{} [f1,{} ...,{} fm])} replaces every \\spad{\\spad{si}(a1,{} ...,{} an)^ni} in \\spad{x} by \\spad{\\spad{fi}(a1,{} ...,{} an)} for any \\spad{a1},{} ...,{} am.")
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))
    (|List| (|Mapping| $ $)))
   "\\spad{eval(x,{} [s1,{} ...,{} sm],{} [n1,{} ...,{} nm],{} [f1,{} ...,{} fm])} replaces every \\spad{\\spad{si}(a)^ni} in \\spad{x} by \\spad{\\spad{fi}(a)} for any \\spad{a}.")
  (($ $ (|List| (|BasicOperator|)) (|List| $) (|Symbol|))
   "\\spad{eval(x,{} [s1,{} ...,{} sm],{} [f1,{} ...,{} fm],{} y)} replaces every \\spad{\\spad{si}(a)} in \\spad{x} by \\spad{\\spad{fi}(y)} with \\spad{y} replaced by \\spad{a} for any \\spad{a}.")
  (($ $ (|BasicOperator|) $ (|Symbol|))
   "\\spad{eval(x,{} s,{} f,{} y)} replaces every \\spad{s(a)} in \\spad{x} by \\spad{f(y)} with \\spad{y} replaced by \\spad{a} for any \\spad{a}."))
 (|applyQuote|
  (($ (|Symbol|) (|List| $))
   "\\spad{applyQuote(foo,{} [x1,{} ...,{} xn])} returns \\spad{'foo(x1,{} ...,{} xn)}.")
  (($ (|Symbol|) $ $ $ $)
   "\\spad{applyQuote(foo,{} x,{} y,{} z,{} t)} returns \\spad{'foo(x,{} y,{} z,{} t)}.")
  (($ (|Symbol|) $ $ $)
   "\\spad{applyQuote(foo,{} x,{} y,{} z)} returns \\spad{'foo(x,{} y,{} z)}.")
  (($ (|Symbol|) $ $)
   "\\spad{applyQuote(foo,{} x,{} y)} returns \\spad{'foo(x,{} y)}.")
  (($ (|Symbol|) $) "\\spad{applyQuote(foo,{} x)} returns \\spad{'foo(x)}."))
 (|variables|
  (((|List| (|Symbol|)) (|List| $))
   "\\spad{variables([f1,{} ...,{} fn])} returns the list of all the variables of \\spad{f1},{} ...,{} \\spad{fn}.")
  (((|List| (|Symbol|)) $)
   "\\spad{variables(f)} returns the list of all the variables of \\spad{f}."))
 (|ground|
  ((|#1| $)
   "\\spad{ground(f)} returns \\spad{f} as an element of \\spad{R}. An error occurs if \\spad{f} is not an element of \\spad{R}."))
 (|ground?|
  (((|Boolean|) $)
   "\\spad{ground?(f)} tests if \\spad{f} is an element of \\spad{R}.")))
(("documentation" 0 32325) ("ancestors" 0 27856) ("parents" 0 26796)
 ("abbreviation" 0 26793) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 13207) ("modemaps" 0 5481) ("sourceFile" 0 5447)
 ("constructorCategory" 0 126) ("constructorModemap" 0 51)
 ("constructorKind" 0 40) ("constructorForm" 0 20))