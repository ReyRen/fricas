5437                (|ModularRing| R |Mod| |reduction| |merge| |exactQuo|)
|domain|
(((|ModularRing| |#1| |#2| |#3| |#4| |#5|)
  (|Join| (|Ring|)
          (CATEGORY |domain| (SIGNATURE |modulus| (|#2| $))
           (SIGNATURE |coerce| (|#1| $)) (SIGNATURE |reduce| ($ |#1| |#2|))
           (SIGNATURE |exQuo| ((|Union| $ "failed") $ $))
           (SIGNATURE |recip| ((|Union| $ "failed") $))
           (SIGNATURE |inv| ($ $))))
  (|CommutativeRing|) (|AbelianMonoid|) (|Mapping| |#1| |#1| |#2|)
  (|Mapping| (|Union| |#2| "failed") |#2| |#2|)
  (|Mapping| (|Union| |#1| "failed") |#1| |#1| |#2|))
 (T |ModularRing|))
(|Join| (|Ring|)
        (CATEGORY |domain| (SIGNATURE |modulus| (|#2| $))
         (SIGNATURE |coerce| (|#1| $)) (SIGNATURE |reduce| ($ |#1| |#2|))
         (SIGNATURE |exQuo| ((|Union| $ "failed") $ $))
         (SIGNATURE |recip| ((|Union| $ "failed") $)) (SIGNATURE |inv| ($ $))))
"/git/fricas/src/algebra/MODRING.spad"
((|recip| (*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 #1="failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 #2="failed") *2 *2 *3))))
 (|modulus| (*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularRing| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 #1#) *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 #2#) *3 *3 *2))))
 (|coerce| (*1 *2 *1)
           (AND (|ofCategory| *2 (|CommutativeRing|))
                (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
                (|ofCategory| *3 (|AbelianMonoid|))
                (|ofType| *4 (|Mapping| *2 *2 *3))
                (|ofType| *5 (|Mapping| (|Union| *3 #1#) *3 *3))
                (|ofType| *6 (|Mapping| (|Union| *2 #2#) *2 *2 *3))))
 (|reduce| (*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 #1#) *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 #2#) *2 *2 *3))))
 (|exQuo| (*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 #1#) *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 #2#) *2 *2 *3))))
 (|inv| (*1 *1 *1)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 #1#) *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 #2#) *2 *2 *3)))))
((~= (((|Boolean|) $ $) NIL)) (|zero?| (((|Boolean|) $) 33))
 (|subtractIfCan| (((|Union| $ "failed") $ $) NIL))
 (|sample| (($) NIL T CONST)) (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|reduce| (($ |#1| |#2|) 25)) (|recip| (((|Union| $ #1#) $) 48))
 (|opposite?| (((|Boolean|) $ $) NIL)) (|one?| (((|Boolean|) $) 35))
 (|modulus| ((|#2| $) 12)) (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|latex| (((|String|) $) NIL)) (|inv| (($ $) 49))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL)) (|exQuo| (((|Union| $ "failed") $ $) 47))
 (|commutator| (($ $ $) NIL))
 (|coerce| (((|OutputForm|) $) 24) (($ (|Integer|)) 19) ((|#1| $) 13))
 (|characteristic| (((|NonNegativeInteger|)) 28))
 (|associator| (($ $ $ $) NIL)) (|antiCommutator| (($ $ $) NIL))
 (|annihilate?| (((|Boolean|) $ $) NIL))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|Zero| (($) 16 T CONST)) (|One| (($) 30 T CONST)) (= (((|Boolean|) $ $) 38))
 (- (($ $ $) 37) (($ $) 43)) (+ (($ $ $) 40))
 (* (($ (|PositiveInteger|) $) NIL) (($ $ $) 20) (($ (|Integer|) $) 21)
    (($ (|NonNegativeInteger|) $) NIL)))
MODRING
(((|Ring|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CoercibleTo| (|OutputForm|)) . T) ((|LeftModule| |t#1|) . T)
 ((|Magma|) . T) ((|MagmaWithUnit|) . T) ((|Monoid|) . T)
 ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "These domains are used for the factorization and gcds of univariate polynomials over the integers in order to work modulo different primes. See \\spadtype{EuclideanModularRing} ,{} \\spadtype{ModularField}"))
 (|inv| (($ $) "\\spad{inv(x)} \\undocumented"))
 (|recip| (((|Union| $ "failed") $) "\\spad{recip(x)} \\undocumented"))
 (|exQuo| (((|Union| $ "failed") $ $) "\\spad{exQuo(x,{} y)} \\undocumented"))
 (|reduce| (($ |#1| |#2|) "\\spad{reduce(r,{} m)} \\undocumented"))
 (|coerce| ((|#1| $) "\\spad{coerce(x)} \\undocumented"))
 (|modulus| ((|#2| $) "\\spad{modulus(x)} \\undocumented")))
(("documentation" 0 4814) ("ancestors" 0 4251) ("parents" 0 4234)
 ("abbreviation" 0 4226) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2910) ("modemaps" 0 946) ("sourceFile" 0 907)
 ("constructorCategory" 0 622) ("constructorModemap" 0 84)
 ("constructorKind" 0 75) ("constructorForm" 0 20))