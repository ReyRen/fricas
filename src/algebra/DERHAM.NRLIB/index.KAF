8768                (|DeRhamComplex| |CoefRing| |listIndVar|)
|domain|
(((|DeRhamComplex| |#1| |#2|)
  (|Join| (|LeftAlgebra| (|Expression| |#1|))
          (|RetractableTo| (|Expression| |#1|))
          (CATEGORY |domain|
           (SIGNATURE |leadingCoefficient| ((|Expression| |#1|) $))
           (SIGNATURE |leadingBasisTerm| ($ $)) (SIGNATURE |reductum| ($ $))
           (SIGNATURE |coefficient| ((|Expression| |#1|) $ $))
           (SIGNATURE |generator| ($ (|NonNegativeInteger|)))
           (SIGNATURE |homogeneous?| ((|Boolean|) $))
           (SIGNATURE |retractable?| ((|Boolean|) $))
           (SIGNATURE |degree| ((|NonNegativeInteger|) $))
           (SIGNATURE |map|
            ($ (|Mapping| (|Expression| |#1|) (|Expression| |#1|)) $))
           (SIGNATURE |totalDifferential| ($ (|Expression| |#1|)))
           (SIGNATURE |exteriorDifferential| ($ $))))
  (|Join| (|Ring|) (|Comparable|)) (|List| (|Symbol|)))
 (T |DeRhamComplex|))
(|Join| (|LeftAlgebra| (|Expression| |#1|))
        (|RetractableTo| (|Expression| |#1|))
        (CATEGORY |domain|
         (SIGNATURE |leadingCoefficient| ((|Expression| |#1|) $))
         (SIGNATURE |leadingBasisTerm| ($ $)) (SIGNATURE |reductum| ($ $))
         (SIGNATURE |coefficient| ((|Expression| |#1|) $ $))
         (SIGNATURE |generator| ($ (|NonNegativeInteger|)))
         (SIGNATURE |homogeneous?| ((|Boolean|) $))
         (SIGNATURE |retractable?| ((|Boolean|) $))
         (SIGNATURE |degree| ((|NonNegativeInteger|) $))
         (SIGNATURE |map|
          ($ (|Mapping| (|Expression| |#1|) (|Expression| |#1|)) $))
         (SIGNATURE |totalDifferential| ($ (|Expression| |#1|)))
         (SIGNATURE |exteriorDifferential| ($ $))))
"/git/fricas/src/algebra/DERHAM.spad"
((|leadingCoefficient| (*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|leadingBasisTerm| (*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))
 (|reductum| (*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))
 (|coefficient| (*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|generator| (*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|homogeneous?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|retractable?| (*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|degree| (*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|map| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Expression| *3) (|Expression| *3)))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|totalDifferential| (*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *3))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 (|exteriorDifferential| (*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|))))))
((~= (((|Boolean|) $ $) NIL)) (|zero?| (((|Boolean|) $) NIL))
 (|totalDifferential| (($ (|Expression| |#1|)) 23))
 (|subtractIfCan| (((|Union| $ "failed") $ $) NIL))
 (|sample| (($) NIL T CONST)) (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|retractable?| (((|Boolean|) $) NIL))
 (|retractIfCan| (((|Union| (|Expression| |#1|) "failed") $) NIL))
 (|retract| (((|Expression| |#1|) $) NIL)) (|reductum| (($ $) 31))
 (|recip| (((|Union| $ #1#) $) NIL)) (|opposite?| (((|Boolean|) $ $) NIL))
 (|one?| (((|Boolean|) $) NIL))
 (|map| (($ (|Mapping| (|Expression| |#1|) (|Expression| |#1|)) $) NIL))
 (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|leadingCoefficient| (((|Expression| |#1|) $) NIL))
 (|leadingBasisTerm| (($ $) 30)) (|latex| (((|String|) $) NIL))
 (|homogeneous?| (((|Boolean|) $) NIL))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|generator| (($ (|NonNegativeInteger|)) NIL))
 (|exteriorDifferential| (($ $) 32))
 (|degree| (((|NonNegativeInteger|) $) NIL)) (|commutator| (($ $ $) NIL))
 (|coerce| (((|OutputForm|) $) 63) (($ (|Integer|)) NIL)
           (($ (|Expression| |#1|)) NIL))
 (|coefficient| (((|Expression| |#1|) $ $) NIL))
 (|characteristic| (((|NonNegativeInteger|)) NIL))
 (|associator| (($ $ $ $) NIL)) (|antiCommutator| (($ $ $) NIL))
 (|annihilate?| (((|Boolean|) $ $) NIL))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL))
 (|Zero| (($) 25 T CONST)) (|One| (($) 56 T CONST)) (= (((|Boolean|) $ $) 28))
 (- (($ $ $) NIL) (($ $) NIL)) (+ (($ $ $) 19))
 (* (($ (|PositiveInteger|) $) NIL) (($ $ $) 24) (($ (|Integer|) $) NIL)
    (($ (|NonNegativeInteger|) $) NIL) (($ (|Expression| |#1|) $) 18)))
DERHAM
(((|LeftAlgebra| (|Expression| |#1|)) . T)
 ((|RetractableTo| (|Expression| |#1|)) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|BasicType|) . T) ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CoercibleTo| (|OutputForm|)) . T) ((|LeftAlgebra| (|Expression| |#1|)) . T)
 ((|LeftModule| |t#1|) . T) ((|Magma|) . T) ((|MagmaWithUnit|) . T)
 ((|Monoid|) . T) ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|RetractableTo| (|Expression| |#1|)) . T) ((|RightModule| |t#2|) . T)
 ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T) ((|SemiRing|) . T)
 ((|SemiRng|) . T) ((|SetCategory|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "The deRham complex of Euclidean space,{} that is,{} the class of differential forms of arbitary degree over a coefficient ring. See Flanders,{} Harley,{} Differential Forms,{} With Applications to the Physical Sciences,{} New York,{} Academic Press,{} 1963."))
 (|exteriorDifferential|
  (($ $)
   "\\spad{exteriorDifferential(df)} returns the exterior derivative (gradient,{} curl,{} divergence,{} ...) of the differential form \\spad{df}."))
 (|totalDifferential|
  (($ (|Expression| |#1|))
   "\\spad{totalDifferential(x)} returns the total differential (gradient) form for element \\spad{x}."))
 (|map|
  (($ (|Mapping| (|Expression| |#1|) (|Expression| |#1|)) $)
   "\\spad{map(f,{} df)} replaces each coefficient \\spad{x} of differential form \\spad{df} by \\spad{f(x)}."))
 (|degree|
  (((|NonNegativeInteger|) $)
   "\\spad{degree(df)} returns the homogeneous degree of differential form \\spad{df}."))
 (|retractable?|
  (((|Boolean|) $)
   "\\spad{retractable?(df)} tests if differential form \\spad{df} is a 0-form,{} \\spadignore{i.e.} if degree(\\spad{df}) = 0."))
 (|homogeneous?|
  (((|Boolean|) $)
   "\\spad{homogeneous?(df)} tests if all of the terms of differential form \\spad{df} have the same degree."))
 (|generator|
  (($ (|NonNegativeInteger|))
   "\\spad{generator(n)} returns the \\spad{n}th basis term for a differential form."))
 (|coefficient|
  (((|Expression| |#1|) $ $)
   "\\spad{coefficient(df,{} u)},{} where \\spad{df} is a differential form,{} returns the coefficient of \\spad{df} containing the basis term \\spad{u} if such a term exists,{} and 0 otherwise."))
 (|reductum|
  (($ $)
   "\\spad{reductum(df)},{} where \\spad{df} is a differential form,{} returns \\spad{df} minus the leading term of \\spad{df} if \\spad{df} has two or more terms,{} and 0 otherwise."))
 (|leadingBasisTerm|
  (($ $)
   "\\spad{leadingBasisTerm(df)} returns the leading basis term of differential form \\spad{df}."))
 (|leadingCoefficient|
  (((|Expression| |#1|) $)
   "\\spad{leadingCoefficient(df)} returns the leading coefficient of differential form \\spad{df}.")))
(("documentation" 0 6647) ("ancestors" 0 5998) ("parents" 0 5909)
 ("abbreviation" 0 5902) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 4034) ("modemaps" 0 1749) ("sourceFile" 0 1711)
 ("constructorCategory" 0 959) ("constructorModemap" 0 71)
 ("constructorKind" 0 62) ("constructorForm" 0 20))