18711               (|ExpressionToUnivariatePowerSeries| R FE)
|package|
(((|ExpressionToUnivariatePowerSeries| |#1| |#2|)
  (CATEGORY |package| (SIGNATURE |taylor| ((|Any|) (|Symbol|)))
   (SIGNATURE |taylor| ((|Any|) |#2|))
   (SIGNATURE |taylor| ((|Any|) |#2| (|NonNegativeInteger|)))
   (SIGNATURE |taylor| ((|Any|) |#2| (|Equation| |#2|)))
   (SIGNATURE |taylor| ((|Any|) |#2| (|Equation| |#2|) (|NonNegativeInteger|)))
   (SIGNATURE |laurent| ((|Any|) (|Symbol|)))
   (SIGNATURE |laurent| ((|Any|) |#2|))
   (SIGNATURE |laurent| ((|Any|) |#2| (|Integer|)))
   (SIGNATURE |laurent| ((|Any|) |#2| (|Equation| |#2|)))
   (SIGNATURE |laurent| ((|Any|) |#2| (|Equation| |#2|) (|Integer|)))
   (SIGNATURE |puiseux| ((|Any|) (|Symbol|)))
   (SIGNATURE |puiseux| ((|Any|) |#2|))
   (SIGNATURE |puiseux| ((|Any|) |#2| (|Fraction| (|Integer|))))
   (SIGNATURE |puiseux| ((|Any|) |#2| (|Equation| |#2|)))
   (SIGNATURE |puiseux|
    ((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|))))
   (SIGNATURE |series| ((|Any|) (|Symbol|)))
   (SIGNATURE |series| ((|Any|) |#2|))
   (SIGNATURE |series| ((|Any|) |#2| (|Fraction| (|Integer|))))
   (SIGNATURE |series| ((|Any|) |#2| (|Equation| |#2|)))
   (SIGNATURE |series|
    ((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|)))))
  (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| (|Integer|))
          (|LinearlyExplicitOver| (|Integer|)))
  (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|)
          (|FunctionSpace| |#1|)))
 (T |ExpressionToUnivariatePowerSeries|))
(CATEGORY |package| (SIGNATURE |taylor| ((|Any|) (|Symbol|)))
 (SIGNATURE |taylor| ((|Any|) |#2|))
 (SIGNATURE |taylor| ((|Any|) |#2| (|NonNegativeInteger|)))
 (SIGNATURE |taylor| ((|Any|) |#2| (|Equation| |#2|)))
 (SIGNATURE |taylor| ((|Any|) |#2| (|Equation| |#2|) (|NonNegativeInteger|)))
 (SIGNATURE |laurent| ((|Any|) (|Symbol|)))
 (SIGNATURE |laurent| ((|Any|) |#2|))
 (SIGNATURE |laurent| ((|Any|) |#2| (|Integer|)))
 (SIGNATURE |laurent| ((|Any|) |#2| (|Equation| |#2|)))
 (SIGNATURE |laurent| ((|Any|) |#2| (|Equation| |#2|) (|Integer|)))
 (SIGNATURE |puiseux| ((|Any|) (|Symbol|)))
 (SIGNATURE |puiseux| ((|Any|) |#2|))
 (SIGNATURE |puiseux| ((|Any|) |#2| (|Fraction| (|Integer|))))
 (SIGNATURE |puiseux| ((|Any|) |#2| (|Equation| |#2|)))
 (SIGNATURE |puiseux|
  ((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|))))
 (SIGNATURE |series| ((|Any|) (|Symbol|))) (SIGNATURE |series| ((|Any|) |#2|))
 (SIGNATURE |series| ((|Any|) |#2| (|Fraction| (|Integer|))))
 (SIGNATURE |series| ((|Any|) |#2| (|Equation| |#2|)))
 (SIGNATURE |series| ((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|)))))
"/git/fricas/src/algebra/EXPR2UPS.spad"
((|series| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 (|series| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 (|series| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 (|series| (*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 (|series| (*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 (|puiseux| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 (|puiseux| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 (|puiseux| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 (|puiseux| (*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 (|puiseux| (*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 (|laurent| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *5)
                             (|LinearlyExplicitOver| *5)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 (|laurent| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 (|laurent| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *4)
                             (|LinearlyExplicitOver| *4)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 (|laurent| (*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 (|laurent| (*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 (|taylor| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 (|taylor| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 (|taylor| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 (|taylor| (*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 (|taylor| (*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4))))))
((|taylor| (((|Any|) |#2| (|Equation| |#2|) (|NonNegativeInteger|)) 33)
  (((|Any|) |#2| (|Equation| |#2|)) 24)
  (((|Any|) |#2| (|NonNegativeInteger|)) 28) (((|Any|) |#2|) 25)
  (((|Any|) (|Symbol|)) 21))
 (|series| (((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|))) 51)
  (((|Any|) |#2| (|Equation| |#2|)) 48)
  (((|Any|) |#2| (|Fraction| (|Integer|))) 50) (((|Any|) |#2|) 49)
  (((|Any|) (|Symbol|)) 47))
 (|puiseux| (((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|))) 46)
  (((|Any|) |#2| (|Equation| |#2|)) 43)
  (((|Any|) |#2| (|Fraction| (|Integer|))) 45) (((|Any|) |#2|) 44)
  (((|Any|) (|Symbol|)) 42))
 (|laurent| (((|Any|) |#2| (|Equation| |#2|) (|Integer|)) 39)
  (((|Any|) |#2| (|Equation| |#2|)) 35) (((|Any|) |#2| (|Integer|)) 38)
  (((|Any|) |#2|) 36) (((|Any|) (|Symbol|)) 34)))
EXPR2UPS
((|constructor|
  (NIL
   "This package provides functions to convert functional expressions to power series."))
 (|series|
  (((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|)))
   "\\spad{series(f,{} x = a,{} n)} expands the expression \\spad{f} as a series in powers of (\\spad{x} - a); terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2| (|Equation| |#2|))
   "\\spad{series(f,{} x = a)} expands the expression \\spad{f} as a series in powers of (\\spad{x} - a).")
  (((|Any|) |#2| (|Fraction| (|Integer|)))
   "\\spad{series(f,{} n)} returns a series expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable and terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2|)
   "\\spad{series(f)} returns a series expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable.")
  (((|Any|) (|Symbol|))
   "\\spad{series(x)} returns \\spad{x} viewed as a series."))
 (|puiseux|
  (((|Any|) |#2| (|Equation| |#2|) (|Fraction| (|Integer|)))
   "\\spad{puiseux(f,{} x = a,{} n)} expands the expression \\spad{f} as a Puiseux series in powers of \\spad{(x - a)}; terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2| (|Equation| |#2|))
   "\\spad{puiseux(f,{} x = a)} expands the expression \\spad{f} as a Puiseux series in powers of \\spad{(x - a)}.")
  (((|Any|) |#2| (|Fraction| (|Integer|)))
   "\\spad{puiseux(f,{} n)} returns a Puiseux expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable and terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2|)
   "\\spad{puiseux(f)} returns a Puiseux expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable.")
  (((|Any|) (|Symbol|))
   "\\spad{puiseux(x)} returns \\spad{x} viewed as a Puiseux series."))
 (|laurent|
  (((|Any|) |#2| (|Equation| |#2|) (|Integer|))
   "\\spad{laurent(f,{} x = a,{} n)} expands the expression \\spad{f} as a Laurent series in powers of \\spad{(x - a)}; terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2| (|Equation| |#2|))
   "\\spad{laurent(f,{} x = a)} expands the expression \\spad{f} as a Laurent series in powers of \\spad{(x - a)}.")
  (((|Any|) |#2| (|Integer|))
   "\\spad{laurent(f,{} n)} returns a Laurent expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable and terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2|)
   "\\spad{laurent(f)} returns a Laurent expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable.")
  (((|Any|) (|Symbol|))
   "\\spad{laurent(x)} returns \\spad{x} viewed as a Laurent series."))
 (|taylor|
  (((|Any|) |#2| (|Equation| |#2|) (|NonNegativeInteger|))
   "\\spad{taylor(f,{} x = a)} expands the expression \\spad{f} as a Taylor series in powers of \\spad{(x - a)}; terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2| (|Equation| |#2|))
   "\\spad{taylor(f,{} x = a)} expands the expression \\spad{f} as a Taylor series in powers of \\spad{(x - a)}.")
  (((|Any|) |#2| (|NonNegativeInteger|))
   "\\spad{taylor(f,{} n)} returns a Taylor expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable and terms will be computed up to order at least \\spad{n}.")
  (((|Any|) |#2|)
   "\\spad{taylor(f)} returns a Taylor expansion of the expression \\spad{f}. Note: \\spad{f} should have only one variable; the series will be expanded in powers of that variable.")
  (((|Any|) (|Symbol|))
   "\\spad{taylor(x)} returns \\spad{x} viewed as a Taylor series.")))
(("documentation" 0 14703) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 14694) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 13883) ("modemaps" 0 2696) ("sourceFile" 0 2656)
 ("constructorCategory" 0 1547) ("constructorModemap" 0 73)
 ("constructorKind" 0 63) ("constructorForm" 0 20))