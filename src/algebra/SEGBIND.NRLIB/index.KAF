3511                (|SegmentBinding| S)
|domain|
(((|SegmentBinding| |#1|)
  (|Join| (|Type|)
          (CATEGORY |domain|
           (SIGNATURE |equation| ($ (|Symbol|) (|Segment| |#1|)))
           (SIGNATURE |variable| ((|Symbol|) $))
           (SIGNATURE |segment| ((|Segment| |#1|) $))
           (IF (|has| |#1| (|SetCategory|))
               (ATTRIBUTE (|SetCategory|))
               |noBranch|)
           (IF (|has| |#1| (|ConvertibleTo| (|InputForm|)))
               (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
               |noBranch|)))
  (|Type|))
 (T |SegmentBinding|))
(|Join| (|Type|)
        (CATEGORY |domain|
         (SIGNATURE |equation| ($ (|Symbol|) (|Segment| |#1|)))
         (SIGNATURE |variable| ((|Symbol|) $))
         (SIGNATURE |segment| ((|Segment| |#1|) $))
         (IF (|has| |#1| (|SetCategory|))
             (ATTRIBUTE (|SetCategory|))
             |noBranch|)
         (IF (|has| |#1| (|ConvertibleTo| (|InputForm|)))
             (ATTRIBUTE (|ConvertibleTo| (|InputForm|)))
             |noBranch|)))
"/git/fricas/src/algebra/SEGBIND.spad"
((|equation| (*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Segment| *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SegmentBinding| *4))))
 (|variable| (*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 (|segment| (*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| *3)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|)))))
((~= (((|Boolean|) $ $) NIL (|has| |#1| (|SetCategory|))))
 (|variable| (((|Symbol|) $) 11)) (|segment| (((|Segment| |#1|) $) 12))
 (|latex| (((|String|) $) NIL (|has| |#1| (|SetCategory|))))
 (|hashUpdate!|
  (((|HashState|) (|HashState|) $) NIL (|has| |#1| (|SetCategory|))))
 (|hash| (((|SingleInteger|) $) NIL (|has| |#1| (|SetCategory|))))
 (|equation| (($ (|Symbol|) (|Segment| |#1|)) 10))
 (|convert|
  (((|InputForm|) $) 27 (|has| |#1| (|ConvertibleTo| (|InputForm|)))))
 (|coerce| (((|OutputForm|) $) 20 (|has| |#1| (|SetCategory|))))
 (= (((|Boolean|) $ $) 15 (|has| |#1| (|SetCategory|)))))
((|HasCategory| |#1| (LIST '|ConvertibleTo| '(|InputForm|)))
 (|HasCategory| |#1| '(|SetCategory|)))
SEGBIND
(((|Type|) . T) ((|SetCategory|) |has| |#1| (|SetCategory|))
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|))))
(((|BasicType|) |has| |#1| (|SetCategory|))
 ((|CoercibleTo| (|OutputForm|)) |has| |#1| (|SetCategory|))
 ((|ConvertibleTo| (|InputForm|)) |has| |#1| (|ConvertibleTo| (|InputForm|)))
 ((|SetCategory|) |has| |#1| (|SetCategory|)) ((|Type|) . T))
((|constructor|
  (NIL
   "This domain is used to provide the function argument syntax \\spad{v=a..b}. This is used,{} for example,{} by the top-level \\spadfun{draw} functions."))
 (|segment|
  (((|Segment| |#1|) $)
   "\\spad{segment(segb)} returns the segment from the right hand side of the \\spadtype{SegmentBinding}. For example,{} if \\spad{segb} is \\spad{v=a..b},{} then \\spad{segment(segb)} returns \\spad{a..b}."))
 (|variable|
  (((|Symbol|) $)
   "\\spad{variable(segb)} returns the variable from the left hand side of the \\spadtype{SegmentBinding}. For example,{} if \\spad{segb} is \\spad{v=a..b},{} then \\spad{variable(segb)} returns \\spad{v}."))
 (|equation|
  (($ (|Symbol|) (|Segment| |#1|))
   "\\spad{equation(v,{} a..b)} creates a segment binding value with variable \\spad{v} and segment \\spad{a..b}. Note that the interpreter parses \\spad{v=a..b} to this form.")))
(("documentation" 0 2616) ("ancestors" 0 2371) ("parents" 0 2231)
 ("abbreviation" 0 2223) ("predicates" 0 2122) ("superDomain" 0 NIL)
 ("operationAlist" 0 1520) ("modemaps" 0 1086) ("sourceFile" 0 1047)
 ("constructorCategory" 0 590) ("constructorModemap" 0 50)
 ("constructorKind" 0 41) ("constructorForm" 0 20))