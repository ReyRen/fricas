)abbrev package INFPROD0 InfiniteLambertProduct
++ Author: Clifton J. Williamson
++ Date Created: 22 February 1990
++ Basic Operations: infiniteProduct, evenInfiniteProduct, oddInfiniteProduct,
++   generalInfiniteProduct
++ Related Domains: UnivariateTaylorSeriesCategory
++ Also See:
++ AMS Classifications:
++ Keywords: Taylor series, infinite product
++ Examples:
++ References:
++ Description:
++   This package computes infinite products of univariate Taylor series
InfiniteLambertProduct(Coef, UTS) : Exports == Implementation where
  Coef : Ring
  UTS  : UnivariateTaylorSeriesCategory Coef
  I  ==> Integer

  Exports ==> with
    infiniteProduct : UTS -> UTS
      ++ infiniteProduct(f(x)) computes \spad{product(n=1, 2, 3..., f(x^n))}.
      ++ The series \spad{f(x)} should have constant coefficient 1.
    evenInfiniteProduct : UTS -> UTS
      ++ evenInfiniteProduct(f(x)) computes
      ++ \spad{product(n=2, 4, 6..., f(x^n))}.
      ++ The series \spad{f(x)} should have constant coefficient 1.
    oddInfiniteProduct : UTS -> UTS
      ++ oddInfiniteProduct(f(x)) computes \spad{product(n=1, 3, 5..., f(x^n))}.
      ++ The series \spad{f(x)} should have constant coefficient 1.
    generalInfiniteProduct : (UTS, I, I) -> UTS
      ++ generalInfiniteProduct(f(x), a, d) computes
      ++ \spad{product(n=a, a+d, a+2*d, ..., f(x^n))}.
      ++ The series \spad{f(x)} should have constant coefficient 1.

  Implementation ==> add

    import from StreamTaylorSeriesOperations(Coef)

    infiniteProduct x     == generalInfiniteProduct(x, 1, 1)
    evenInfiniteProduct x == generalInfiniteProduct(x, 2, 2)
    oddInfiniteProduct x  == generalInfiniteProduct(x, 1, 2)

    generalInfiniteProduct(x, a, d) ==
      series general_Lambert_product(coefficients x, a, d)

--Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
--All rights reserved.
--
--Redistribution and use in source and binary forms, with or without
--modification, are permitted provided that the following conditions are
--met:
--
--    - Redistributions of source code must retain the above copyright
--      notice, this list of conditions and the following disclaimer.
--
--    - Redistributions in binary form must reproduce the above copyright
--      notice, this list of conditions and the following disclaimer in
--      the documentation and/or other materials provided with the
--      distribution.
--
--    - Neither the name of The Numerical ALgorithms Group Ltd. nor the
--      names of its contributors may be used to endorse or promote products
--      derived from this software without specific prior written permission.
--
--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
--IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
--TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
--PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
--OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
--EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
--PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
--PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
--LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
--NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
--SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
