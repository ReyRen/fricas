12441               (MAKEPROP '|MachineFloat| 'NILADIC T)
(|MachineFloat|)
|domain|
(((|MachineFloat|)
  (|Join| (|FloatingPointSystem|) (|FortranMachineTypeCategory|) (|Field|)
          (|RetractableTo| (|Float|))
          (|RetractableTo| (|Fraction| (|Integer|))) (|CharacteristicZero|)
          (CATEGORY |domain|
           (SIGNATURE |precision| ((|PositiveInteger|) (|PositiveInteger|)))
           (SIGNATURE |precision| ((|PositiveInteger|)))
           (SIGNATURE |base| ((|PositiveInteger|) (|PositiveInteger|)))
           (SIGNATURE |base| ((|PositiveInteger|)))
           (SIGNATURE |maximumExponent| ((|Integer|) (|Integer|)))
           (SIGNATURE |maximumExponent| ((|Integer|)))
           (SIGNATURE |minimumExponent| ((|Integer|) (|Integer|)))
           (SIGNATURE |minimumExponent| ((|Integer|)))
           (SIGNATURE |coerce| ((|Float|) $))
           (SIGNATURE |coerce| ($ (|MachineInteger|)))
           (SIGNATURE |mantissa| ((|Integer|) $))
           (SIGNATURE |exponent| ((|Integer|) $))
           (SIGNATURE |changeBase|
            ($ (|Integer|) (|Integer|) (|PositiveInteger|))))))
 (T |MachineFloat|))
(|Join| (|FloatingPointSystem|) (|FortranMachineTypeCategory|) (|Field|)
        (|RetractableTo| (|Float|)) (|RetractableTo| (|Fraction| (|Integer|)))
        (|CharacteristicZero|)
        (CATEGORY |domain|
         (SIGNATURE |precision| ((|PositiveInteger|) (|PositiveInteger|)))
         (SIGNATURE |precision| ((|PositiveInteger|)))
         (SIGNATURE |base| ((|PositiveInteger|) (|PositiveInteger|)))
         (SIGNATURE |base| ((|PositiveInteger|)))
         (SIGNATURE |maximumExponent| ((|Integer|) (|Integer|)))
         (SIGNATURE |maximumExponent| ((|Integer|)))
         (SIGNATURE |minimumExponent| ((|Integer|) (|Integer|)))
         (SIGNATURE |minimumExponent| ((|Integer|)))
         (SIGNATURE |coerce| ((|Float|) $))
         (SIGNATURE |coerce| ($ (|MachineInteger|)))
         (SIGNATURE |mantissa| ((|Integer|) $))
         (SIGNATURE |exponent| ((|Integer|) $))
         (SIGNATURE |changeBase|
          ($ (|Integer|) (|Integer|) (|PositiveInteger|)))))
"/git/fricas/src/algebra/MFLOAT.spad"
((|base| (*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 (|exponent| (*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 (|mantissa| (*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 (|precision| (*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 (|precision| (*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 (|base| (*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 (|maximumExponent| (*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 (|maximumExponent| (*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 (|minimumExponent| (*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 (|minimumExponent| (*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 (|coerce| (*1 *2 *1)
           (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|MachineFloat|))))
 (|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|MachineInteger|))
                (|isDomain| *1 (|MachineFloat|))))
 (|changeBase| (*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|MachineFloat|)))))
((~= (((|Boolean|) $ $) NIL)) (|zero?| (((|Boolean|) $) 83))
 (|wholePart| (((|Integer|) $) 30))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) NIL))
 (|unitCanonical| (($ $) NIL)) (|unit?| (((|Boolean|) $) NIL))
 (|truncate| (($ $) NIL))
 (|toString| (((|String|) $) NIL) (((|String|) $ (|NonNegativeInteger|)) NIL))
 (|subtractIfCan| (((|Union| $ "failed") $ $) NIL))
 (|squareFreePart| (($ $) NIL)) (|squareFree| (((|Factored| $) $) NIL))
 (|sqrt| (($ $) NIL)) (|smaller?| (((|Boolean|) $ $) NIL))
 (|sizeLess?| (((|Boolean|) $ $) NIL)) (|sign| (((|Integer|) $) NIL))
 (|sample| (($) NIL T CONST)) (|round| (($ $) NIL))
 (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|retractIfCan| (((|Union| (|Integer|) #2="failed") $) 71)
  (((|Union| (|Fraction| (|Integer|)) #2#) $) 26)
  (((|Union| (|Float|) #2#) $) 68))
 (|retract| (((|Integer|) $) 73) (((|Fraction| (|Integer|)) $) 65)
            (((|Float|) $) 66))
 (|rem| (($ $ $) 95)) (|recip| (((|Union| $ #1#) $) 86)) (|quo| (($ $ $) 94))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)) NIL))
 (|prime?| (((|Boolean|) $) NIL))
 (|precision| (((|PositiveInteger|)) 75)
  (((|PositiveInteger|) (|PositiveInteger|)) 74))
 (|positive?| (((|Boolean|) $) NIL))
 (|patternMatch|
  (((|PatternMatchResult| (|Float|) $) $ (|Pattern| (|Float|))
    (|PatternMatchResult| (|Float|) $))
   NIL))
 (|order| (((|Integer|) $) NIL)) (|opposite?| (((|Boolean|) $ $) NIL))
 (|one?| (((|Boolean|) $) NIL)) (|nthRoot| (($ $ (|Integer|)) NIL))
 (|norm| (($ $) NIL)) (|negative?| (((|Boolean|) $) NIL))
 (|multiEuclidean| (((|Union| (|List| $) #3="failed") (|List| $) $) NIL))
 (|minimumExponent| (((|Integer|) (|Integer|)) 80) (((|Integer|)) 81))
 (|min| (($ $ $) NIL)
  (($) NIL
   (AND (|not| (|has| $ (|arbitraryExponent|)))
        (|not| (|has| $ (|arbitraryPrecision|))))))
 (|maximumExponent| (((|Integer|) (|Integer|)) 78) (((|Integer|)) 79))
 (|max| (($ $ $) NIL)
  (($) NIL
   (AND (|not| (|has| $ (|arbitraryExponent|)))
        (|not| (|has| $ (|arbitraryPrecision|))))))
 (|mantissa| (((|Integer|) $) 16)) (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) NIL))
 (|lcm| (($ $ $) NIL) (($ (|List| $)) NIL)) (|latex| (((|String|) $) NIL))
 (|inv| (($ $) 90))
 (|increasePrecision|
  (((|PositiveInteger|) (|Integer|)) NIL (|has| $ (|arbitraryPrecision|))))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   NIL))
 (|gcd| (($ $ $) NIL) (($ (|List| $)) NIL)) (|fractionPart| (($ $) NIL))
 (|floor| (($ $) NIL))
 (|float| (($ (|Integer|) (|Integer|)) NIL)
          (($ (|Integer|) (|Integer|) (|PositiveInteger|)) NIL))
 (|factor| (((|Factored| $) $) NIL))
 (|extendedEuclidean|
  (((|Record| (|:| |coef1| $) (|:| |coef2| $) (|:| |generator| $)) $ $) NIL)
  (((|Union| (|Record| (|:| |coef1| $) (|:| |coef2| $)) #3#) $ $ $) NIL))
 (|exquo| (((|Union| $ "failed") $ $) 91))
 (|expressIdealMember| (((|Union| (|List| $) "failed") (|List| $) $) NIL))
 (|exponent| (((|Integer|) $) 22))
 (|euclideanSize| (((|NonNegativeInteger|) $) NIL))
 (|divide| (((|Record| (|:| |quotient| $) (|:| |remainder| $)) $ $) 93))
 (|digits| (((|PositiveInteger|)) NIL)
  (((|PositiveInteger|) (|PositiveInteger|)) NIL
   (|has| $ (|arbitraryPrecision|))))
 (|decreasePrecision|
  (((|PositiveInteger|) (|Integer|)) NIL (|has| $ (|arbitraryPrecision|))))
 (|convert| (((|Float|) $) NIL) (((|DoubleFloat|) $) NIL)
            (((|Pattern| (|Float|)) $) NIL) (((|String|) $) NIL))
 (|commutator| (($ $ $) NIL))
 (|coerce| (((|OutputForm|) $) 50) (($ $) NIL) (($ (|Integer|)) 60)
           (($ (|Fraction| (|Integer|))) 64) (($ (|Float|)) 59)
           (((|Float|) $) 47) (($ (|MachineInteger|)) 53))
 (|characteristic| (((|NonNegativeInteger|)) 102))
 (|changeBase| (($ (|Integer|) (|Integer|) (|PositiveInteger|)) 43))
 (|ceiling| (($ $) NIL))
 (|bits| (((|PositiveInteger|)) NIL)
  (((|PositiveInteger|) (|PositiveInteger|)) NIL
   (|has| $ (|arbitraryPrecision|))))
 (|base| (((|PositiveInteger|)) 77)
  (((|PositiveInteger|) (|PositiveInteger|)) 76))
 (|associator| (($ $ $ $) NIL)) (|associates?| (((|Boolean|) $ $) NIL))
 (|antiCommutator| (($ $ $) NIL)) (|annihilate?| (((|Boolean|) $ $) NIL))
 (|abs| (($ $) NIL))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL)
  (($ $ (|Integer|)) NIL) (($ $ (|Fraction| (|Integer|))) 89))
 (|Zero| (($) 32 T CONST)) (|One| (($) 17 T CONST))
 (>= (((|Boolean|) $ $) NIL)) (> (((|Boolean|) $ $) NIL))
 (= (((|Boolean|) $ $) 82)) (<= (((|Boolean|) $ $) NIL))
 (< (((|Boolean|) $ $) 100)) (/ (($ $ $) 63) (($ $ (|Integer|)) NIL))
 (- (($ $ $) 99) (($ $) 98)) (+ (($ $ $) 97))
 (* (($ (|PositiveInteger|) $) NIL) (($ $ $) 87) (($ (|Integer|) $) 96)
    (($ (|NonNegativeInteger|) $) NIL) (($ $ (|Fraction| (|Integer|))) NIL)
    (($ (|Fraction| (|Integer|)) $) NIL)))
((|HasCategory| $ '(|arbitraryPrecision|))
 (AND (|not| (|HasCategory| $ '(|arbitraryExponent|)))
      (|not| (|HasCategory| $ '(|arbitraryPrecision|)))))
MFLOAT
(((|FloatingPointSystem|) . T) ((|FortranMachineTypeCategory|) . T)
 ((|Field|) . T) ((|RetractableTo| (|Float|)) . T)
 ((|RetractableTo| (|Fraction| (|Integer|))) . T) ((|CharacteristicZero|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) . T) ((|Algebra| $) . T)
 ((|Approximate|) . T) ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CharacteristicZero|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CommutativeRing|) . T) ((|CommutativeStar|) . T) ((|Comparable|) . T)
 ((|ConvertibleTo| (|String|)) . T)
 ((|ConvertibleTo| (|Pattern| (|Float|))) . T)
 ((|ConvertibleTo| (|Float|)) . T) ((|ConvertibleTo| (|DoubleFloat|)) . T)
 ((|DivisionRing|) . T) ((|EntireRing|) . T) ((|EuclideanDomain|) . T)
 ((|Field|) . T) ((|FloatingPointSystem|) . T)
 ((|FortranMachineTypeCategory|) . T) ((|GcdDomain|) . T)
 ((|IntegralDomain|) . T) ((|LeftModule| |t#1|) . T) ((|LeftOreRing|) . T)
 ((|Magma|) . T) ((|MagmaWithUnit|) . T) ((|Module| |t#1|) . T)
 ((|Monoid|) . T) ((|NonAssociativeRing|) . T) ((|NonAssociativeRng|) . T)
 ((|NonAssociativeSemiRing|) . T) ((|NonAssociativeSemiRng|) . T)
 ((|OrderedAbelianGroup|) . T) ((|OrderedAbelianMonoid|) . T)
 ((|OrderedAbelianSemiGroup|) . T) ((|OrderedCancellationAbelianMonoid|) . T)
 ((|OrderedRing|) . T) ((|OrderedSet|) . T) ((|PartialOrder|) . T)
 ((|PatternMatchable| (|Float|)) . T) ((|PrincipalIdealDomain|) . T)
 ((|RadicalCategory|) . T) ((|RealConstant|) . T) ((|RealNumberSystem|) . T)
 ((|RetractableTo| (|Float|)) . T)
 ((|RetractableTo| (|Fraction| (|Integer|))) . T)
 ((|RetractableTo| (|Integer|)) . T) ((|RightModule| |t#2|) . T) ((|Ring|) . T)
 ((|Rng|) . T) ((|SemiGroup|) . T) ((|SemiRing|) . T) ((|SemiRng|) . T)
 ((|SetCategory|) . T) ((|TwoSidedRecip|) . T)
 ((|UniqueFactorizationDomain|) . T) ((|canonicalUnitNormal|) . T)
 ((|canonicalsClosed|) . T) ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "A domain which models the floating point representation used by machines in the AXIOM-NAG link."))
 (|changeBase|
  (($ (|Integer|) (|Integer|) (|PositiveInteger|))
   "\\spad{changeBase(exp,{} man,{} base)} \\undocumented{}"))
 (|exponent|
  (((|Integer|) $) "\\spad{exponent(u)} returns the exponent of \\spad{u}"))
 (|mantissa|
  (((|Integer|) $) "\\spad{mantissa(u)} returns the mantissa of \\spad{u}"))
 (|coerce|
  (($ (|MachineInteger|))
   "\\spad{coerce(u)} transforms a MachineInteger into a MachineFloat")
  (((|Float|) $)
   "\\spad{coerce(u)} transforms a MachineFloat to a standard Float"))
 (|minimumExponent|
  (((|Integer|))
   "\\spad{minimumExponent()} returns the minimum exponent in the model")
  (((|Integer|) (|Integer|))
   "\\spad{minimumExponent(e)} sets the minimum exponent in the model to \\spad{e}"))
 (|maximumExponent|
  (((|Integer|))
   "\\spad{maximumExponent()} returns the maximum exponent in the model")
  (((|Integer|) (|Integer|))
   "\\spad{maximumExponent(e)} sets the maximum exponent in the model to \\spad{e}"))
 (|base| (((|PositiveInteger|)) "\\spad{base()} returns the base of the model")
  (((|PositiveInteger|) (|PositiveInteger|))
   "\\spad{base(b)} sets the base of the model to \\spad{b}"))
 (|precision|
  (((|PositiveInteger|))
   "\\spad{precision()} returns the number of digits in the model")
  (((|PositiveInteger|) (|PositiveInteger|))
   "\\spad{precision(p)} sets the number of digits in the model to \\spad{p}")))
(("documentation" 0 10936) ("ancestors" 0 9129) ("parents" 0 8930)
 ("abbreviation" 0 8923) ("predicates" 0 8767) ("superDomain" 0 NIL)
 ("operationAlist" 0 3516) ("modemaps" 0 2165) ("sourceFile" 0 2127)
 ("constructorCategory" 0 1144) ("constructorModemap" 0 84)
 ("constructorKind" 0 75) ("constructorForm" 0 58) ("NILADIC" 0 20))