6577                (|ModularField| R |Mod| |reduction| |merge| |exactQuo|)
|domain|
(((|ModularField| |#1| |#2| |#3| |#4| |#5|)
  (|Join| (|Field|)
          (CATEGORY |domain| (SIGNATURE |modulus| (|#2| $))
           (SIGNATURE |coerce| (|#1| $)) (SIGNATURE |reduce| ($ |#1| |#2|))
           (SIGNATURE |exQuo| ((|Union| $ "failed") $ $))))
  (|CommutativeRing|) (|AbelianMonoid|) (|Mapping| |#1| |#1| |#2|)
  (|Mapping| (|Union| |#2| "failed") |#2| |#2|)
  (|Mapping| (|Union| |#1| "failed") |#1| |#1| |#2|))
 (T |ModularField|))
(|Join| (|Field|)
        (CATEGORY |domain| (SIGNATURE |modulus| (|#2| $))
         (SIGNATURE |coerce| (|#1| $)) (SIGNATURE |reduce| ($ |#1| |#2|))
         (SIGNATURE |exQuo| ((|Union| $ "failed") $ $))))
"/git/fricas/src/algebra/MODFIELD.spad"
((|modulus| (*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularField| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 #1="failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 #2="failed") *3 *3 *2))))
 (|coerce| (*1 *2 *1)
           (AND (|ofCategory| *2 (|CommutativeRing|))
                (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
                (|ofCategory| *3 (|AbelianMonoid|))
                (|ofType| *4 (|Mapping| *2 *2 *3))
                (|ofType| *5 (|Mapping| (|Union| *3 #1#) *3 *3))
                (|ofType| *6 (|Mapping| (|Union| *2 #2#) *2 *2 *3))))
 (|reduce| (*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 #1#) *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 #2#) *2 *2 *3))))
 (|exQuo| (*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 #1#) *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 #2#) *2 *2 *3)))))
((~= (((|Boolean|) $ $) NIL)) (|zero?| (((|Boolean|) $) NIL))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) NIL))
 (|unitCanonical| (($ $) NIL)) (|unit?| (((|Boolean|) $) NIL))
 (|subtractIfCan| (((|Union| $ "failed") $ $) NIL))
 (|squareFreePart| (($ $) NIL)) (|squareFree| (((|Factored| $) $) NIL))
 (|sizeLess?| (((|Boolean|) $ $) NIL)) (|sample| (($) NIL T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) NIL))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|rem| (($ $ $) NIL)) (|reduce| (($ |#1| |#2|) NIL))
 (|recip| (((|Union| $ #1#) $) NIL)) (|quo| (($ $ $) NIL))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)) NIL))
 (|prime?| (((|Boolean|) $) NIL)) (|opposite?| (((|Boolean|) $ $) NIL))
 (|one?| (((|Boolean|) $) NIL))
 (|multiEuclidean| (((|Union| (|List| $) #2="failed") (|List| $) $) NIL))
 (|modulus| ((|#2| $) NIL)) (|leftRecip| (((|Union| $ #1#) $) NIL))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL)
  (($ $ (|NonNegativeInteger|)) NIL))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) NIL))
 (|lcm| (($ $ $) NIL) (($ (|List| $)) NIL)) (|latex| (((|String|) $) NIL))
 (|inv| (($ $) NIL)) (|hashUpdate!| (((|HashState|) (|HashState|) $) NIL))
 (|hash| (((|SingleInteger|) $) NIL))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   NIL))
 (|gcd| (($ $ $) NIL) (($ (|List| $)) NIL)) (|factor| (((|Factored| $) $) NIL))
 (|extendedEuclidean|
  (((|Record| (|:| |coef1| $) (|:| |coef2| $) (|:| |generator| $)) $ $) NIL)
  (((|Union| (|Record| (|:| |coef1| $) (|:| |coef2| $)) #2#) $ $ $) NIL))
 (|exquo| (((|Union| $ "failed") $ $) NIL))
 (|expressIdealMember| (((|Union| (|List| $) "failed") (|List| $) $) NIL))
 (|exQuo| (((|Union| $ "failed") $ $) NIL))
 (|euclideanSize| (((|NonNegativeInteger|) $) NIL))
 (|divide| (((|Record| (|:| |quotient| $) (|:| |remainder| $)) $ $) NIL))
 (|commutator| (($ $ $) NIL))
 (|coerce| (((|OutputForm|) $) NIL) (($ (|Integer|)) NIL) (($ $) NIL)
           (($ (|Fraction| (|Integer|))) NIL) ((|#1| $) NIL))
 (|characteristic| (((|NonNegativeInteger|)) NIL))
 (|associator| (($ $ $ $) NIL)) (|associates?| (((|Boolean|) $ $) NIL))
 (|antiCommutator| (($ $ $) NIL)) (|annihilate?| (((|Boolean|) $ $) NIL))
 (^ (($ $ (|PositiveInteger|)) NIL) (($ $ (|NonNegativeInteger|)) NIL)
  (($ $ (|Integer|)) NIL))
 (|Zero| (($) NIL T CONST)) (|One| (($) NIL T CONST))
 (= (((|Boolean|) $ $) NIL)) (/ (($ $ $) NIL)) (- (($ $ $) NIL) (($ $) NIL))
 (+ (($ $ $) NIL))
 (* (($ (|PositiveInteger|) $) NIL) (($ $ $) NIL) (($ (|Integer|) $) NIL)
    (($ (|NonNegativeInteger|) $) NIL) (($ $ (|Fraction| (|Integer|))) NIL)
    (($ (|Fraction| (|Integer|)) $) NIL)))
MODFIELD
(((|Field|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| (|Fraction| (|Integer|))) . T) ((|Algebra| $) . T)
 ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T) ((|BiModule| $ $) . T)
 ((|CancellationAbelianMonoid|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CommutativeRing|) . T) ((|CommutativeStar|) . T) ((|DivisionRing|) . T)
 ((|EntireRing|) . T) ((|EuclideanDomain|) . T) ((|Field|) . T)
 ((|GcdDomain|) . T) ((|IntegralDomain|) . T) ((|LeftModule| |t#1|) . T)
 ((|LeftOreRing|) . T) ((|Magma|) . T) ((|MagmaWithUnit|) . T)
 ((|Module| |t#1|) . T) ((|Monoid|) . T) ((|NonAssociativeRing|) . T)
 ((|NonAssociativeRng|) . T) ((|NonAssociativeSemiRing|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|PrincipalIdealDomain|) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|TwoSidedRecip|) . T) ((|UniqueFactorizationDomain|) . T)
 ((|canonicalUnitNormal|) . T) ((|canonicalsClosed|) . T)
 ((|noZeroDivisors|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "\\indented{1}{These domains are used for the factorization and gcds} of univariate polynomials over the integers in order to work modulo different primes. See \\spadtype{ModularRing},{} \\spadtype{EuclideanModularRing}"))
 (|exQuo| (((|Union| $ "failed") $ $) "\\spad{exQuo(x,{} y)} \\undocumented"))
 (|reduce| (($ |#1| |#2|) "\\spad{reduce(r,{} m)} \\undocumented"))
 (|coerce| ((|#1| $) "\\spad{coerce(x)} \\undocumented"))
 (|modulus| ((|#2| $) "\\spad{modulus(x)} \\undocumented")))
(("documentation" 0 6062) ("ancestors" 0 4997) ("parents" 0 4979)
 ("abbreviation" 0 4970) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2129) ("modemaps" 0 783) ("sourceFile" 0 743)
 ("constructorCategory" 0 535) ("constructorModemap" 0 85)
 ("constructorKind" 0 76) ("constructorForm" 0 20))