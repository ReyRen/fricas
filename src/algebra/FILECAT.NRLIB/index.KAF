4217                (|FileCategory| |Name| S)
|category|
(((|FileCategory| |#1| |#2|) (|Category|) (|SetCategory|) (|SetCategory|))
 (T |FileCategory|))
(|Join| (|SetCategory|)
        (CATEGORY |domain| (SIGNATURE |open| ($ |t#1|))
         (SIGNATURE |open| ($ |t#1| (|String|)))
         (SIGNATURE |reopen!| ($ $ (|String|))) (SIGNATURE |close!| ($ $))
         (SIGNATURE |name| (|t#1| $)) (SIGNATURE |iomode| ((|String|) $))
         (SIGNATURE |read!| (|t#2| $)) (SIGNATURE |write!| (|t#2| $ |t#2|))
         (SIGNATURE |flush| ((|Void|) $))))
"/git/fricas/src/algebra/FILECAT.spad"
((|open| (*1 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 (|open| (*1 *1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *1 (|FileCategory| *2 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 (|reopen!| (*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 (|close!| (*1 *1 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 (|name| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 (|iomode| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))
 (|read!| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 (|write!| (*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 (|flush| (*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|)))))
((~= (((|Boolean|) $ $) 6)) (|write!| ((|#2| $ |#2|) 6))
 (|reopen!| (($ $ (|String|)) 6)) (|read!| ((|#2| $) 6))
 (|open| (($ |#1|) 6) (($ |#1| (|String|)) 6)) (|name| ((|#1| $) 6))
 (|latex| (((|String|) $) 6)) (|iomode| (((|String|) $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|flush| (((|Void|) $) 6))
 (|coerce| (((|OutputForm|) $) 6)) (|close!| (($ $) 6))
 (= (((|Boolean|) $ $) 6)))
FILECAT
(((|SetCategory|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|SetCategory|) . T))
((|constructor|
  (NIL
   "This category provides an interface to operate on files in the computer\\spad{'s} file system. The precise method of naming files is determined by the Name parameter. The type of the contents of the file is determined by \\spad{S}."))
 (|flush|
  (((|Void|) $)
   "\\spad{flush(f)} make sure that buffered data in written out to the operating system."))
 (|write!|
  ((|#2| $ |#2|)
   "\\spad{write!(f,{} s)} puts the value \\spad{s} into the file \\spad{f}. The state of \\spad{f} is modified so subsequents call to \\spad{write!} will append one after another."))
 (|read!|
  ((|#2| $)
   "\\spad{read!(f)} extracts a value from file \\spad{f}. The state of \\spad{f} is modified so a subsequent call to \\spadfun{read!} will return the next element."))
 (|iomode|
  (((|String|) $)
   "\\spad{iomode(f)} returns the status of the file \\spad{f}. The input/output status of \\spad{f} may be \"input\",{} \"output\" or \"closed\" mode."))
 (|name|
  ((|#1| $)
   "\\spad{name(f)} returns the external name of the file \\spad{f}."))
 (|close!|
  (($ $)
   "\\spad{close!(f)} returns the file \\spad{f} closed to input and output."))
 (|reopen!|
  (($ $ (|String|))
   "\\spad{reopen!(f,{} mode)} returns a file \\spad{f} reopened for operation in the indicated mode: \"input\" or \"output\". \\spad{reopen!(f,{}\"input\")} will reopen the file \\spad{f} for input."))
 (|open|
  (($ |#1| (|String|))
   "\\spad{open(s,{} mode)} returns a file \\spad{s} open for operation in the indicated mode: \"input\" or \"output\".")
  (($ |#1|) "\\spad{open(s)} returns the file \\spad{s} open for input.")))
(("documentation" 0 2592) ("ancestors" 0 2511) ("parents" 0 2487)
 ("abbreviation" 0 2479) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2036) ("modemaps" 0 590) ("sourceFile" 0 551)
 ("constructorCategory" 0 153) ("constructorModemap" 0 57)
 ("constructorKind" 0 46) ("constructorForm" 0 20))