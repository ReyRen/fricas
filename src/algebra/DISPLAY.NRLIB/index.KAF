5103                (MAKEPROP '|DisplayPackage| 'NILADIC T)
(|DisplayPackage|)
|package|
(((|DisplayPackage|)
  (CATEGORY |package| (SIGNATURE |bright| ((|List| (|String|)) (|String|)))
   (SIGNATURE |bright| ((|List| (|String|)) (|List| (|String|))))
   (SIGNATURE |newLine| ((|String|)))
   (SIGNATURE |copies| ((|String|) (|Integer|) (|String|)))
   (SIGNATURE |center| ((|String|) (|String|) (|Integer|) (|String|)))
   (SIGNATURE |center|
    ((|List| (|String|)) (|List| (|String|)) (|Integer|) (|String|)))
   (SIGNATURE |say| ((|Void|) (|String|)))
   (SIGNATURE |say| ((|Void|) (|List| (|String|))))
   (SIGNATURE |sayLength| ((|Integer|) (|String|)))
   (SIGNATURE |sayLength| ((|Integer|) (|List| (|String|))))))
 (T |DisplayPackage|))
(CATEGORY |package| (SIGNATURE |bright| ((|List| (|String|)) (|String|)))
 (SIGNATURE |bright| ((|List| (|String|)) (|List| (|String|))))
 (SIGNATURE |newLine| ((|String|)))
 (SIGNATURE |copies| ((|String|) (|Integer|) (|String|)))
 (SIGNATURE |center| ((|String|) (|String|) (|Integer|) (|String|)))
 (SIGNATURE |center|
  ((|List| (|String|)) (|List| (|String|)) (|Integer|) (|String|)))
 (SIGNATURE |say| ((|Void|) (|String|)))
 (SIGNATURE |say| ((|Void|) (|List| (|String|))))
 (SIGNATURE |sayLength| ((|Integer|) (|String|)))
 (SIGNATURE |sayLength| ((|Integer|) (|List| (|String|)))))
"/git/fricas/src/algebra/DISPLAY.spad"
((|sayLength| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 (|sayLength| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 (|say| (*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))
 (|say| (*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))
 (|center| (*1 *2 *2 *3 *4)
           (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *3 (|Integer|))
                (|isDomain| *4 (|String|)) (|isDomain| *1 (|DisplayPackage|))))
 (|center| (*1 *2 *2 *3 *2)
           (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
                (|isDomain| *1 (|DisplayPackage|))))
 (|copies| (*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 (|newLine| (*1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DisplayPackage|))))
 (|bright| (*1 *2 *2)
           (AND (|isDomain| *2 (|List| (|String|)))
                (|isDomain| *1 (|DisplayPackage|))))
 (|bright| (*1 *2 *3)
           (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
                (|isDomain| *1 (|DisplayPackage|)))))
((|sayLength| (((|Integer|) (|List| (|String|))) 27)
  (((|Integer|) (|String|)) 20))
 (|say| (((|Void|) (|List| (|String|))) 32) (((|Void|) (|String|)) 31))
 (|newLine| (((|String|)) 15))
 (|copies| (((|String|) (|Integer|) (|String|)) 17))
 (|center|
  (((|List| (|String|)) (|List| (|String|)) (|Integer|) (|String|)) 28)
  (((|String|) (|String|) (|Integer|) (|String|)) 26))
 (|bright| (((|List| (|String|)) (|List| (|String|))) 14)
           (((|List| (|String|)) (|String|)) 11)))
DISPLAY
((|constructor|
  (NIL
   "DisplayPackage allows one to print strings in a nice manner,{} including highlighting substrings."))
 (|sayLength|
  (((|Integer|) (|List| (|String|)))
   "\\spad{sayLength(l)} returns the length of a list of strings \\spad{l} as an integer.")
  (((|Integer|) (|String|))
   "\\spad{sayLength(s)} returns the length of a string \\spad{s} as an integer."))
 (|say|
  (((|Void|) (|List| (|String|)))
   "\\spad{say(l)} sends a list of strings \\spad{l} to output.")
  (((|Void|) (|String|)) "\\spad{say(s)} sends a string \\spad{s} to output."))
 (|center|
  (((|List| (|String|)) (|List| (|String|)) (|Integer|) (|String|))
   "\\spad{center(l,{} i,{} s)} takes a list of strings \\spad{l},{} and centers them within a list of strings which is \\spad{i} characters long,{} in which the remaining spaces are filled with strings composed of as many repetitions as possible of the last string parameter \\spad{s}.")
  (((|String|) (|String|) (|Integer|) (|String|))
   "\\spad{center(s,{} i,{} s)} takes the first string \\spad{s},{} and centers it within a string of length \\spad{i},{} in which the other elements of the string are composed of as many replications as possible of the second indicated string,{} \\spad{s} which must have a length greater than that of an empty string."))
 (|copies|
  (((|String|) (|Integer|) (|String|))
   "\\spad{copies(i,{} s)} will take a string \\spad{s} and create a new string composed of \\spad{i} copies of \\spad{s}."))
 (|newLine|
  (((|String|)) "\\spad{newLine()} sends a new line command to output."))
 (|bright|
  (((|List| (|String|)) (|List| (|String|)))
   "\\spad{bright(l)} sets the font property of a list of strings,{} \\spad{l},{} to bold-face type.")
  (((|List| (|String|)) (|String|))
   "\\spad{bright(s)} sets the font property of the string \\spad{s} to bold-face type.")))
(("documentation" 0 3242) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 3234) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2745) ("modemaps" 0 1377) ("sourceFile" 0 1338)
 ("constructorCategory" 0 747) ("constructorModemap" 0 89)
 ("constructorKind" 0 79) ("constructorForm" 0 60) ("NILADIC" 0 20))