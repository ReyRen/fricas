2354                (MAKEPROP '|Group| 'NILADIC T)
(|Group|)
|category|
(((|Group|) (|Category|)) (T |Group|))
(|Join| (|Monoid|) (|TwoSidedRecip|) (|unitsKnown|)
        (CATEGORY |domain| (SIGNATURE |inv| ($ $)) (SIGNATURE / ($ $ $))
         (SIGNATURE ^ ($ $ (|Integer|))) (SIGNATURE |conjugate| ($ $ $))
         (SIGNATURE |commutator| ($ $ $))))
"/git/fricas/src/algebra/GROUP.spad"
((|inv| (*1 *1 *1) (|ofCategory| *1 (|Group|)))
 (/ (*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 (^ (*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|))))
 (|conjugate| (*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 (|commutator| (*1 *1 *1 *1) (|ofCategory| *1 (|Group|))))
((~= (((|Boolean|) $ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|recip| (((|Union| $ #1#) $) 6)) (|one?| (((|Boolean|) $) 6))
 (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|latex| (((|String|) $) 6)) (|inv| (($ $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6)) (|conjugate| (($ $ $) 6))
 (|commutator| (($ $ $) 6)) (|coerce| (((|OutputForm|) $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6)
  (($ $ (|Integer|)) 6))
 (|One| (($) 6 T CONST)) (= (((|Boolean|) $ $) 6)) (/ (($ $ $) 6))
 (* (($ $ $) 6)))
GROUP
(((|Monoid|) . T) ((|TwoSidedRecip|) . T) ((|unitsKnown|) . T))
(((|BasicType|) . T) ((|CoercibleTo| (|OutputForm|)) . T) ((|Magma|) . T)
 ((|MagmaWithUnit|) . T) ((|Monoid|) . T) ((|SemiGroup|) . T)
 ((|SetCategory|) . T) ((|TwoSidedRecip|) . T) ((|unitsKnown|) . T))
((|constructor|
  (NIL
   "The class of multiplicative groups,{} \\spadignore{i.e.} monoids with multiplicative inverses. \\blankline"))
 (|commutator|
  (($ $ $)
   "\\spad{commutator(p,{} q)} computes \\spad{inv(p) * inv(q) * p * q}."))
 (|conjugate|
  (($ $ $)
   "\\spad{conjugate(p,{} q)} computes \\spad{inv(q) * p * q}; this is 'right action by conjugation'."))
 (^
  (($ $ (|Integer|))
   "\\spad{x^n} returns \\spad{x} raised to the integer power \\spad{n}."))
 (/
  (($ $ $)
   "\\spad{x/y} is the same as \\spad{x} times the inverse of \\spad{y}."))
 (|inv| (($ $) "\\spad{inv(x)} returns the inverse of \\spad{x}.")))
(("documentation" 0 1724) ("ancestors" 0 1519) ("parents" 0 1455)
 ("abbreviation" 0 1449) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 684) ("modemaps" 0 390) ("sourceFile" 0 353)
 ("constructorCategory" 0 111) ("constructorModemap" 0 72)
 ("constructorKind" 0 61) ("constructorForm" 0 51) ("NILADIC" 0 20))