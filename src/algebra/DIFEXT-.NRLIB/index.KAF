3813                (|DifferentialExtension&| S R)
|domain|
(((|DifferentialExtension&| |#1| |#2|)
  (CATEGORY |domain| (SIGNATURE |differentiate| (|#1| |#1|))
   (SIGNATURE D (|#1| |#1|))
   (SIGNATURE |differentiate| (|#1| |#1| (|NonNegativeInteger|)))
   (SIGNATURE D (|#1| |#1| (|NonNegativeInteger|)))
   (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|)))
   (SIGNATURE |differentiate| (|#1| |#1| (|List| (|Symbol|))))
   (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|) (|NonNegativeInteger|)))
   (SIGNATURE |differentiate|
    (|#1| |#1| (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))))
   (SIGNATURE D (|#1| |#1| (|Symbol|)))
   (SIGNATURE D (|#1| |#1| (|List| (|Symbol|))))
   (SIGNATURE D (|#1| |#1| (|Symbol|) (|NonNegativeInteger|)))
   (SIGNATURE D
    (|#1| |#1| (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))))
   (SIGNATURE D (|#1| |#1| (|Mapping| |#2| |#2|) (|NonNegativeInteger|)))
   (SIGNATURE D (|#1| |#1| (|Mapping| |#2| |#2|)))
   (SIGNATURE |differentiate|
    (|#1| |#1| (|Mapping| |#2| |#2|) (|NonNegativeInteger|)))
   (SIGNATURE |differentiate| (|#1| |#1| (|Mapping| |#2| |#2|))))
  (|DifferentialExtension| |#2|) (|Ring|))
 (T |DifferentialExtension&|))
(CATEGORY |domain| (SIGNATURE |differentiate| (|#1| |#1|))
 (SIGNATURE D (|#1| |#1|))
 (SIGNATURE |differentiate| (|#1| |#1| (|NonNegativeInteger|)))
 (SIGNATURE D (|#1| |#1| (|NonNegativeInteger|)))
 (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|)))
 (SIGNATURE |differentiate| (|#1| |#1| (|List| (|Symbol|))))
 (SIGNATURE |differentiate| (|#1| |#1| (|Symbol|) (|NonNegativeInteger|)))
 (SIGNATURE |differentiate|
  (|#1| |#1| (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))))
 (SIGNATURE D (|#1| |#1| (|Symbol|)))
 (SIGNATURE D (|#1| |#1| (|List| (|Symbol|))))
 (SIGNATURE D (|#1| |#1| (|Symbol|) (|NonNegativeInteger|)))
 (SIGNATURE D (|#1| |#1| (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))))
 (SIGNATURE D (|#1| |#1| (|Mapping| |#2| |#2|) (|NonNegativeInteger|)))
 (SIGNATURE D (|#1| |#1| (|Mapping| |#2| |#2|)))
 (SIGNATURE |differentiate|
  (|#1| |#1| (|Mapping| |#2| |#2|) (|NonNegativeInteger|)))
 (SIGNATURE |differentiate| (|#1| |#1| (|Mapping| |#2| |#2|))))
"/git/fricas/src/algebra/DIFEXT.spad"
((|differentiate| (($ $ (|Mapping| |#2| |#2|)) NIL)
  (($ $ (|Mapping| |#2| |#2|) (|NonNegativeInteger|)) 11)
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) NIL)
  (($ $ (|Symbol|) (|NonNegativeInteger|)) NIL) (($ $ (|List| (|Symbol|))) NIL)
  (($ $ (|Symbol|)) 19) (($ $ (|NonNegativeInteger|)) NIL) (($ $) 16))
 (D (($ $ (|Mapping| |#2| |#2|)) 12)
  (($ $ (|Mapping| |#2| |#2|) (|NonNegativeInteger|)) 14)
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) NIL)
  (($ $ (|Symbol|) (|NonNegativeInteger|)) NIL) (($ $ (|List| (|Symbol|))) NIL)
  (($ $ (|Symbol|)) NIL) (($ $ (|NonNegativeInteger|)) NIL) (($ $) NIL)))
((|HasCategory| |#2| (LIST '|PartialDifferentialRing| '(|Symbol|)))
 (|HasCategory| |#2| '(|DifferentialRing|)))
DIFEXT-
((|constructor|
  (NIL
   "Differential extensions of a ring \\spad{R}. Given a differentiation on \\spad{R},{} extend it to a differentiation on \\%."))
 (D
  (($ $ (|Mapping| |#2| |#2|) (|NonNegativeInteger|))
   "\\spad{D(x,{} deriv,{} n)} differentiate \\spad{x} \\spad{n} times using a derivation which extends \\spad{deriv} on \\spad{R}.")
  (($ $ (|Mapping| |#2| |#2|))
   "\\spad{D(x,{} deriv)} differentiates \\spad{x} extending the derivation deriv on \\spad{R}."))
 (|differentiate|
  (($ $ (|Mapping| |#2| |#2|) (|NonNegativeInteger|))
   "\\spad{differentiate(x,{} deriv,{} n)} differentiate \\spad{x} \\spad{n} times using a derivation which extends \\spad{deriv} on \\spad{R}.")
  (($ $ (|Mapping| |#2| |#2|))
   "\\spad{differentiate(x,{} deriv)} differentiates \\spad{x} extending the derivation deriv on \\spad{R}.")))
(("documentation" 0 2976) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 2968) ("predicates" 0 2855) ("superDomain" 0 NIL)
 ("operationAlist" 0 2213) ("modemaps" 0 NIL) ("sourceFile" 0 2175)
 ("constructorCategory" 0 1194) ("constructorModemap" 0 60)
 ("constructorKind" 0 51) ("constructorForm" 0 20))