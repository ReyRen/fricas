6942                (|InnerMatrixLinearAlgebraFunctions| R |Row| |Col| M)
|package|
(((|InnerMatrixLinearAlgebraFunctions| |#1| |#2| |#3| |#4|)
  (CATEGORY |package| (SIGNATURE |rowEchelon| (|#4| |#4|))
   (SIGNATURE |rank| ((|NonNegativeInteger|) |#4|))
   (SIGNATURE |nullity| ((|NonNegativeInteger|) |#4|))
   (IF (|has| |#3| (|shallowlyMutable|))
       (SIGNATURE |nullSpace| ((|List| |#3|) |#4|))
       |noBranch|)
   (SIGNATURE |determinant| (|#1| |#4|))
   (SIGNATURE |generalizedInverse| (|#4| |#4|))
   (SIGNATURE |inverse| ((|Union| |#4| "failed") |#4|))
   (SIGNATURE |row_operation_base|
    ((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|))
   (SIGNATURE |row_operation_modular|
    ((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|
     (|Integer|))))
  (|Field|) (|FiniteLinearAggregate| |#1|) (|FiniteLinearAggregate| |#1|)
  (|MatrixCategory| |#1| |#2| |#3|))
 (T |InnerMatrixLinearAlgebraFunctions|))
(CATEGORY |package| (SIGNATURE |rowEchelon| (|#4| |#4|))
 (SIGNATURE |rank| ((|NonNegativeInteger|) |#4|))
 (SIGNATURE |nullity| ((|NonNegativeInteger|) |#4|))
 (IF (|has| |#3| (|shallowlyMutable|))
     (SIGNATURE |nullSpace| ((|List| |#3|) |#4|))
     |noBranch|)
 (SIGNATURE |determinant| (|#1| |#4|))
 (SIGNATURE |generalizedInverse| (|#4| |#4|))
 (SIGNATURE |inverse| ((|Union| |#4| "failed") |#4|))
 (SIGNATURE |row_operation_base|
  ((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|))
 (SIGNATURE |row_operation_modular|
  ((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|
   (|Integer|))))
"/git/fricas/src/algebra/IMATLIN.spad"
((|row_operation_modular| (*1 *2 *3 *4 *4 *4 *4 *5 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))
 (|row_operation_base| (*1 *2 *3 *4 *4 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))
 (|inverse| (*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 (|generalizedInverse| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 (|determinant| (*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 (|nullSpace| (*1 *2 *3)
  (AND (|ofCategory| *6 (|shallowlyMutable|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 (|nullity| (*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 (|rank| (*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 (|rowEchelon| (*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5)))))
((|row_operation_modular|
  (((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|
    (|Integer|))
   23))
 (|row_operation_base|
  (((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|) 22))
 (|rowEchelon| ((|#4| |#4|) 36)) (|rank| (((|NonNegativeInteger|) |#4|) 50))
 (|nullity| (((|NonNegativeInteger|) |#4|) 51))
 (|nullSpace| (((|List| |#3|) |#4|) 42 (|has| |#3| (|shallowlyMutable|))))
 (|inverse| (((|Union| |#4| "failed") |#4|) 59))
 (|generalizedInverse| ((|#4| |#4|) 52)) (|determinant| ((|#1| |#4|) 45)))
((|HasCategory| |#3| '(|shallowlyMutable|)))
IMATLIN
((|constructor|
  (NIL
   "\\spadtype{InnerMatrixLinearAlgebraFunctions} is an internal package which provides standard linear algebra functions on domains in \\spad{MatrixCategory}"))
 (|row_operation_modular|
  (((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|
    (|Integer|))
   "\\spad{row_operation_modular should} be local,{} but conditional"))
 (|row_operation_base|
  (((|Void|) |#4| (|Integer|) (|Integer|) (|Integer|) (|Integer|) |#1|)
   "\\spad{row_operation_base should} be local,{} but conditional"))
 (|inverse|
  (((|Union| |#4| "failed") |#4|)
   "\\spad{inverse(m)} returns the inverse of the matrix \\spad{m}. If the matrix is not invertible,{} \"failed\" is returned. Error: if the matrix is not square."))
 (|generalizedInverse|
  ((|#4| |#4|)
   "\\spad{generalizedInverse(m)} returns the generalized (Moore--Penrose) inverse of the matrix \\spad{m},{} \\spadignore{i.e.} the matrix \\spad{h} such that m*h*m=h,{} h*m*h=m,{} \\spad{m*h} and \\spad{h*m} are both symmetric matrices."))
 (|determinant|
  ((|#1| |#4|)
   "\\spad{determinant(m)} returns the determinant of the matrix \\spad{m}. an error message is returned if the matrix is not square."))
 (|nullSpace|
  (((|List| |#3|) |#4|)
   "\\spad{nullSpace(m)} returns a basis for the null space of the matrix \\spad{m}."))
 (|nullity|
  (((|NonNegativeInteger|) |#4|)
   "\\spad{nullity(m)} returns the mullity of the matrix \\spad{m}. This is the dimension of the null space of the matrix \\spad{m}."))
 (|rank|
  (((|NonNegativeInteger|) |#4|)
   "\\spad{rank(m)} returns the rank of the matrix \\spad{m}."))
 (|rowEchelon|
  ((|#4| |#4|)
   "\\spad{rowEchelon(m)} returns the row echelon form of the matrix \\spad{m}.")))
(("documentation" 0 5219) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 5211) ("predicates" 0 5166) ("superDomain" 0 NIL)
 ("operationAlist" 0 4620) ("modemaps" 0 1632) ("sourceFile" 0 1593)
 ("constructorCategory" 0 959) ("constructorModemap" 0 84)
 ("constructorKind" 0 74) ("constructorForm" 0 20))