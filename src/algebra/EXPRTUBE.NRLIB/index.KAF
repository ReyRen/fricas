8187                (MAKEPROP '|ExpressionTubePlot| 'NILADIC T)
(|ExpressionTubePlot|)
|package|
(((|ExpressionTubePlot|)
  (CATEGORY |package|
   (SIGNATURE |constantToUnaryFunction|
    ((|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|DoubleFloat|)))
   (SIGNATURE |tubePlot|
    ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
     (|Expression| (|Integer|)) (|Expression| (|Integer|))
     (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
     (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|)))
   (SIGNATURE |tubePlot|
    ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
     (|Expression| (|Integer|)) (|Expression| (|Integer|))
     (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
     (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|) (|String|)))
   (SIGNATURE |tubePlot|
    ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
     (|Expression| (|Integer|)) (|Expression| (|Integer|))
     (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
     (|DoubleFloat|) (|Integer|)))
   (SIGNATURE |tubePlot|
    ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
     (|Expression| (|Integer|)) (|Expression| (|Integer|))
     (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
     (|DoubleFloat|) (|Integer|) (|String|)))))
 (T |ExpressionTubePlot|))
(CATEGORY |package|
 (SIGNATURE |constantToUnaryFunction|
  ((|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|DoubleFloat|)))
 (SIGNATURE |tubePlot|
  ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
   (|Expression| (|Integer|)) (|Expression| (|Integer|))
   (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
   (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|)))
 (SIGNATURE |tubePlot|
  ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
   (|Expression| (|Integer|)) (|Expression| (|Integer|))
   (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
   (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|) (|String|)))
 (SIGNATURE |tubePlot|
  ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
   (|Expression| (|Integer|)) (|Expression| (|Integer|))
   (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
   (|DoubleFloat|) (|Integer|)))
 (SIGNATURE |tubePlot|
  ((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
   (|Expression| (|Integer|)) (|Expression| (|Integer|))
   (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
   (|DoubleFloat|) (|Integer|) (|String|))))
"/git/fricas/src/algebra/EXPRTUBE.spad"
((|tubePlot| (*1 *2 *3 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *8 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 (|tubePlot| (*1 *2 *3 *3 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 (|tubePlot| (*1 *2 *3 *3 *3 *4 *5 *4 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *7 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 (|tubePlot| (*1 *2 *3 *3 *3 *4 *5 *4 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 (|constantToUnaryFunction| (*1 *2 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|ExpressionTubePlot|)))))
((|tubePlot|
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|DoubleFloat|) (|Integer|) (|String|))
   47)
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|DoubleFloat|) (|Integer|))
   48)
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|) (|String|))
   44)
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|))
   45))
 (|constantToUnaryFunction|
  (((|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|DoubleFloat|)) 46)))
EXPRTUBE
((|constructor|
  (NIL
   "\\indented{1}{Author: Clifton \\spad{J}. Williamson} Date Created: Bastille Day 1989 Keywords: Examples: Package for constructing tubes around 3-dimensional parametric curves."))
 (|tubePlot|
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|DoubleFloat|) (|Integer|) (|String|))
   "\\spad{tubePlot(f,{} g,{} h,{} colorFcn,{} a..b,{} r,{} n,{} s)} puts a tube of radius \\spad{r} with \\spad{n} points on each circle about the curve \\spad{x = f(t)},{} \\spad{y = g(t)},{} \\spad{z = h(t)} for \\spad{t} in \\spad{[a,{} b]}. If \\spad{s} = \"closed\",{} the tube is considered to be closed; if \\spad{s} = \"open\",{} the tube is considered to be open.")
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|DoubleFloat|) (|Integer|))
   "\\spad{tubePlot(f,{} g,{} h,{} colorFcn,{} a..b,{} r,{} n)} puts a tube of radius \\spad{r} with \\spad{n} points on each circle about the curve \\spad{x = f(t)},{} \\spad{y = g(t)},{} \\spad{z = h(t)} for \\spad{t} in \\spad{[a,{} b]}. The tube is considered to be open.")
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|) (|String|))
   "\\spad{tubePlot(f,{} g,{} h,{} colorFcn,{} a..b,{} r,{} n,{} s)} puts a tube of radius \\spad{r(t)} with \\spad{n} points on each circle about the curve \\spad{x = f(t)},{} \\spad{y = g(t)},{} \\spad{z = h(t)} for \\spad{t} in \\spad{[a,{}b]}. If \\spad{s} = \"closed\",{} the tube is considered to be closed; if \\spad{s} = \"open\",{} the tube is considered to be open.")
  (((|TubePlot| (|Plot3D|)) (|Expression| (|Integer|))
    (|Expression| (|Integer|)) (|Expression| (|Integer|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Segment| (|DoubleFloat|))
    (|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|Integer|))
   "\\spad{tubePlot(f,{} g,{} h,{} colorFcn,{} a..b,{} r,{} n)} puts a tube of radius \\spad{r}(\\spad{t}) with \\spad{n} points on each circle about the curve \\spad{x = f(t)},{} \\spad{y = g(t)},{} \\spad{z = h(t)} for \\spad{t} in \\spad{[a,{} b]}. The tube is considered to be open."))
 (|constantToUnaryFunction|
  (((|Mapping| (|DoubleFloat|) (|DoubleFloat|)) (|DoubleFloat|))
   "\\spad{constantToUnaryFunction(s)} is a local function which takes the value of \\spad{s},{} which may be a function of a constant,{} and returns a function which always returns the value \\spadtype{DoubleFloat} \\spad{s}.")))
(("documentation" 0 5356) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 5347) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 4240) ("modemaps" 0 2576) ("sourceFile" 0 2536)
 ("constructorCategory" 0 1366) ("constructorModemap" 0 97)
 ("constructorKind" 0 87) ("constructorForm" 0 64) ("NILADIC" 0 20))