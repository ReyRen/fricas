24055               (|Equation| S)
|domain|
(((|Equation| |#1|)
  (|Join| (|Type|)
          (CATEGORY |domain| (SIGNATURE = ($ |#1| |#1|))
           (SIGNATURE |equation| ($ |#1| |#1|)) (SIGNATURE |swap| ($ $))
           (SIGNATURE |lhs| (|#1| $)) (SIGNATURE |rhs| (|#1| $))
           (SIGNATURE |map| ($ (|Mapping| |#1| |#1|) $))
           (IF (|has| |#1| (|InnerEvalable| (|Symbol|) |#1|))
               (ATTRIBUTE (|InnerEvalable| (|Symbol|) |#1|))
               |noBranch|)
           (IF (|has| |#1| (|SetCategory|))
               (PROGN
                (ATTRIBUTE (|SetCategory|))
                (ATTRIBUTE (|CoercibleTo| (|Boolean|)))
                (IF (|has| |#1| (|Evalable| |#1|))
                    (PROGN
                     (SIGNATURE |eval| ($ $ $))
                     (SIGNATURE |eval| ($ $ (|List| $))))
                    |noBranch|))
               |noBranch|)
           (IF (|has| |#1| (|AbelianSemiGroup|))
               (PROGN
                (ATTRIBUTE (|AbelianSemiGroup|))
                (SIGNATURE + ($ |#1| $))
                (SIGNATURE + ($ $ |#1|)))
               |noBranch|)
           (IF (|has| |#1| (|AbelianGroup|))
               (PROGN
                (ATTRIBUTE (|AbelianGroup|))
                (SIGNATURE |leftZero| ($ $))
                (SIGNATURE |rightZero| ($ $))
                (SIGNATURE - ($ |#1| $))
                (SIGNATURE - ($ $ |#1|)))
               |noBranch|)
           (IF (|has| |#1| (|SemiGroup|))
               (PROGN
                (ATTRIBUTE (|SemiGroup|))
                (SIGNATURE * ($ |#1| $))
                (SIGNATURE * ($ $ |#1|)))
               |noBranch|)
           (IF (|has| |#1| (|Monoid|))
               (PROGN
                (ATTRIBUTE (|Monoid|))
                (SIGNATURE |leftOne| ((|Union| $ "failed") $))
                (SIGNATURE |rightOne| ((|Union| $ "failed") $)))
               |noBranch|)
           (IF (|has| |#1| (|Group|))
               (PROGN
                (ATTRIBUTE (|Group|))
                (SIGNATURE |leftOne| ((|Union| $ "failed") $))
                (SIGNATURE |rightOne| ((|Union| $ "failed") $)))
               |noBranch|)
           (IF (|has| |#1| (|Ring|))
               (PROGN (ATTRIBUTE (|Ring|)) (ATTRIBUTE (|BiModule| |#1| |#1|)))
               |noBranch|)
           (IF (|has| |#1| (|CommutativeRing|))
               (ATTRIBUTE (|Module| |#1|))
               |noBranch|)
           (IF (|has| |#1| (|IntegralDomain|))
               (SIGNATURE |factorAndSplit| ((|List| $) $))
               |noBranch|)
           (IF (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
               (ATTRIBUTE (|PartialDifferentialRing| (|Symbol|)))
               |noBranch|)
           (IF (|has| |#1| (|Field|))
               (PROGN
                (ATTRIBUTE (|VectorSpace| |#1|))
                (SIGNATURE / ($ $ $))
                (SIGNATURE |inv| ($ $)))
               |noBranch|)
           (IF (|has| |#1| (|ExpressionSpace|))
               (SIGNATURE |subst| ($ $ $))
               |noBranch|)))
  (|Type|))
 (T |Equation|))
(|Join| (|Type|)
        (CATEGORY |domain| (SIGNATURE = ($ |#1| |#1|))
         (SIGNATURE |equation| ($ |#1| |#1|)) (SIGNATURE |swap| ($ $))
         (SIGNATURE |lhs| (|#1| $)) (SIGNATURE |rhs| (|#1| $))
         (SIGNATURE |map| ($ (|Mapping| |#1| |#1|) $))
         (IF (|has| |#1| (|InnerEvalable| (|Symbol|) |#1|))
             (ATTRIBUTE (|InnerEvalable| (|Symbol|) |#1|))
             |noBranch|)
         (IF (|has| |#1| (|SetCategory|))
             (PROGN
              (ATTRIBUTE (|SetCategory|))
              (ATTRIBUTE (|CoercibleTo| (|Boolean|)))
              (IF (|has| |#1| (|Evalable| |#1|))
                  (PROGN
                   (SIGNATURE |eval| ($ $ $))
                   (SIGNATURE |eval| ($ $ (|List| $))))
                  |noBranch|))
             |noBranch|)
         (IF (|has| |#1| (|AbelianSemiGroup|))
             (PROGN
              (ATTRIBUTE (|AbelianSemiGroup|))
              (SIGNATURE + ($ |#1| $))
              (SIGNATURE + ($ $ |#1|)))
             |noBranch|)
         (IF (|has| |#1| (|AbelianGroup|))
             (PROGN
              (ATTRIBUTE (|AbelianGroup|))
              (SIGNATURE |leftZero| ($ $))
              (SIGNATURE |rightZero| ($ $))
              (SIGNATURE - ($ |#1| $))
              (SIGNATURE - ($ $ |#1|)))
             |noBranch|)
         (IF (|has| |#1| (|SemiGroup|))
             (PROGN
              (ATTRIBUTE (|SemiGroup|))
              (SIGNATURE * ($ |#1| $))
              (SIGNATURE * ($ $ |#1|)))
             |noBranch|)
         (IF (|has| |#1| (|Monoid|))
             (PROGN
              (ATTRIBUTE (|Monoid|))
              (SIGNATURE |leftOne| ((|Union| $ "failed") $))
              (SIGNATURE |rightOne| ((|Union| $ "failed") $)))
             |noBranch|)
         (IF (|has| |#1| (|Group|))
             (PROGN
              (ATTRIBUTE (|Group|))
              (SIGNATURE |leftOne| ((|Union| $ "failed") $))
              (SIGNATURE |rightOne| ((|Union| $ "failed") $)))
             |noBranch|)
         (IF (|has| |#1| (|Ring|))
             (PROGN (ATTRIBUTE (|Ring|)) (ATTRIBUTE (|BiModule| |#1| |#1|)))
             |noBranch|)
         (IF (|has| |#1| (|CommutativeRing|))
             (ATTRIBUTE (|Module| |#1|))
             |noBranch|)
         (IF (|has| |#1| (|IntegralDomain|))
             (SIGNATURE |factorAndSplit| ((|List| $) $))
             |noBranch|)
         (IF (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
             (ATTRIBUTE (|PartialDifferentialRing| (|Symbol|)))
             |noBranch|)
         (IF (|has| |#1| (|Field|))
             (PROGN
              (ATTRIBUTE (|VectorSpace| |#1|))
              (SIGNATURE / ($ $ $))
              (SIGNATURE |inv| ($ $)))
             |noBranch|)
         (IF (|has| |#1| (|ExpressionSpace|))
             (SIGNATURE |subst| ($ $ $))
             |noBranch|)))
"/git/fricas/src/algebra/EQ.spad"
((|inv| (*1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 (/ (*1 *1 *1 *1)
    (OR
     (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
          (|ofCategory| *2 (|Type|)))
     (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
          (|ofCategory| *2 (|Type|)))))
 (* (*1 *1 *2 *1)
    (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
         (|ofCategory| *2 (|Type|))))
 (* (*1 *1 *1 *2)
    (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
         (|ofCategory| *2 (|Type|))))
 (= (*1 *1 *2 *2)
    (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 (|equation| (*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 (|swap| (*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 (|lhs| (*1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 (|rhs| (*1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 (|map| (*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Equation| *3))))
 (|eval| (*1 *1 *1 *1)
         (AND (|ofCategory| *2 (|Evalable| *2))
              (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Type|))
              (|isDomain| *1 (|Equation| *2))))
 (|eval| (*1 *1 *1 *2)
         (AND (|isDomain| *2 (|List| (|Equation| *3)))
              (|ofCategory| *3 (|Evalable| *3))
              (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))
              (|isDomain| *1 (|Equation| *3))))
 (+ (*1 *1 *2 *1)
    (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
         (|ofCategory| *2 (|Type|))))
 (+ (*1 *1 *1 *2)
    (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
         (|ofCategory| *2 (|Type|))))
 (|leftZero| (*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 (|rightZero| (*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 (- (*1 *1 *2 *1)
    (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
         (|ofCategory| *2 (|Type|))))
 (- (*1 *1 *1 *2)
    (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
         (|ofCategory| *2 (|Type|))))
 (|leftOne| (*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))
 (|rightOne| (*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))
 (|factorAndSplit| (*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|Equation| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Type|))))
 (|subst| (*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|)))))
((~= (((|Boolean|) $ $) NIL (|has| |#1| (|SetCategory|))))
 (|zero?|
  (((|Boolean|) $) NIL
   (OR (|has| |#1| (|AbelianGroup|))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|CommutativeRing|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Field|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Ring|))))))
 (|swap| (($ $) 23))
 (|subtractIfCan|
  (((|Union| $ "failed") $ $) NIL (|has| |#1| (|AbelianGroup|))))
 (|subst| (($ $ $) 94 (|has| |#1| (|ExpressionSpace|))))
 (|sample|
  (($) NIL
   (OR (|has| |#1| (|AbelianGroup|))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|CommutativeRing|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Field|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Ring|)))
       (|has| |#1| (|Monoid|)))
   CONST))
 (|rightZero| (($ $) 8 (|has| |#1| (|AbelianGroup|))))
 (|rightRecip| (((|Union| $ #1="failed") $) NIL (|has| |#1| (|Monoid|))))
 (|rightPower| (($ $ (|PositiveInteger|)) NIL (|has| |#1| (|SemiGroup|)))
  (($ $ (|NonNegativeInteger|)) NIL (|has| |#1| (|Monoid|))))
 (|rightOne| (((|Union| $ "failed") $) 69 (|has| |#1| (|Monoid|))))
 (|rhs| ((|#1| $) 22))
 (|recip| (((|Union| $ #1#) $) 67 (|has| |#1| (|Monoid|))))
 (|opposite?|
  (((|Boolean|) $ $) NIL
   (OR (|has| |#1| (|AbelianGroup|))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|CommutativeRing|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Field|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Ring|))))))
 (|one?| (((|Boolean|) $) NIL (|has| |#1| (|Monoid|))))
 (|map| (($ (|Mapping| |#1| |#1|) $) 25)) (|lhs| ((|#1| $) 9))
 (|leftZero| (($ $) 58 (|has| |#1| (|AbelianGroup|))))
 (|leftRecip| (((|Union| $ #1#) $) NIL (|has| |#1| (|Monoid|))))
 (|leftPower| (($ $ (|PositiveInteger|)) NIL (|has| |#1| (|SemiGroup|)))
  (($ $ (|NonNegativeInteger|)) NIL (|has| |#1| (|Monoid|))))
 (|leftOne| (((|Union| $ "failed") $) 68 (|has| |#1| (|Monoid|))))
 (|latex| (((|String|) $) NIL (|has| |#1| (|SetCategory|))))
 (|inv| (($ $) 71 (OR (|has| |#1| (|Field|)) (|has| |#1| (|Group|)))))
 (|hashUpdate!|
  (((|HashState|) (|HashState|) $) NIL (|has| |#1| (|SetCategory|))))
 (|hash| (((|SingleInteger|) $) NIL (|has| |#1| (|SetCategory|))))
 (|factorAndSplit| (((|List| $) $) 20 (|has| |#1| (|IntegralDomain|))))
 (|eval|
  (($ $ (|List| (|Symbol|)) (|List| |#1|)) 32
   (|has| |#1| (|InnerEvalable| (|Symbol|) |#1|)))
  (($ $ (|Symbol|) |#1|) 28 (|has| |#1| (|InnerEvalable| (|Symbol|) |#1|)))
  (($ $ $) 35
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|))))
  (($ $ (|List| $)) 38
   (AND (|has| |#1| (|Evalable| |#1|)) (|has| |#1| (|SetCategory|)))))
 (|equation| (($ |#1| |#1|) 18))
 (|dimension| (((|CardinalNumber|)) 89 (|has| |#1| (|Field|))))
 (|differentiate|
  (($ $ (|Symbol|)) 86 (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|))) NIL
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) NIL
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) NIL
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))))
 (|conjugate| (($ $ $) NIL (|has| |#1| (|Group|))))
 (|commutator| (($ $ $) NIL (OR (|has| |#1| (|Group|)) (|has| |#1| (|Ring|)))))
 (|coerce| (((|OutputForm|) $) 45 (|has| |#1| (|SetCategory|)))
           (((|Boolean|) $) 46 (|has| |#1| (|SetCategory|)))
           (($ (|Integer|)) NIL (|has| |#1| (|Ring|))))
 (|characteristic| (((|NonNegativeInteger|)) 74 (|has| |#1| (|Ring|))))
 (|associator| (($ $ $ $) NIL (|has| |#1| (|Ring|))))
 (|antiCommutator| (($ $ $) NIL (|has| |#1| (|Ring|))))
 (|annihilate?| (((|Boolean|) $ $) NIL (|has| |#1| (|Ring|))))
 (^ (($ $ (|PositiveInteger|)) NIL (|has| |#1| (|SemiGroup|)))
  (($ $ (|NonNegativeInteger|)) NIL (|has| |#1| (|Monoid|)))
  (($ $ (|Integer|)) NIL (|has| |#1| (|Group|))))
 (|Zero|
  (($) 56
   (OR (|has| |#1| (|AbelianGroup|))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|CommutativeRing|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Field|)))
       (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Ring|))))
   CONST))
 (|One| (($) 64 (|has| |#1| (|Monoid|)) CONST))
 (D (($ $ (|Symbol|)) NIL (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|))) NIL
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|Symbol|) (|NonNegativeInteger|)) NIL
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|))))
  (($ $ (|List| (|Symbol|)) (|List| (|NonNegativeInteger|))) NIL
   (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))))
 (= (((|Boolean|) $ $) 41 (|has| |#1| (|SetCategory|))) (($ |#1| |#1|) 21))
 (/ (($ $ $) 91 (OR (|has| |#1| (|Field|)) (|has| |#1| (|Group|))))
    (($ $ |#1|) NIL (|has| |#1| (|Field|))))
 (- (($ $) 52 (|has| |#1| (|AbelianGroup|)))
    (($ $ $) 53 (|has| |#1| (|AbelianGroup|)))
    (($ |#1| $) 54 (|has| |#1| (|AbelianGroup|)))
    (($ $ |#1|) 55 (|has| |#1| (|AbelianGroup|))))
 (+ (($ $ $) 48 (|has| |#1| (|AbelianSemiGroup|)))
    (($ |#1| $) 49 (|has| |#1| (|AbelianSemiGroup|)))
    (($ $ |#1|) 50 (|has| |#1| (|AbelianSemiGroup|))))
 (* (($ (|PositiveInteger|) $) NIL (|has| |#1| (|AbelianSemiGroup|)))
    (($ (|NonNegativeInteger|) $) NIL
     (OR (|has| |#1| (|AbelianGroup|))
         (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|CommutativeRing|)))
         (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Field|)))
         (AND (|has| |#1| (|AbelianMonoid|)) (|has| |#1| (|Ring|)))))
    (($ (|Integer|) $) 77 (|has| |#1| (|AbelianGroup|)))
    (($ $ $) 60 (|has| |#1| (|SemiGroup|)))
    (($ |#1| $) 61 (|has| |#1| (|SemiGroup|)))
    (($ $ |#1|) 62 (|has| |#1| (|SemiGroup|)))))
((|HasCategory| |#1| '(|Field|))
 (OR (|HasCategory| |#1| '(|CommutativeRing|)) (|HasCategory| |#1| '(|Field|)))
 (|HasCategory| |#1| '(|SetCategory|)) (|HasCategory| |#1| '(|Ring|))
 (OR (|HasCategory| |#1| '(|CommutativeRing|)) (|HasCategory| |#1| '(|Field|))
     (|HasCategory| |#1| '(|Ring|)))
 (|HasCategory| |#1| '(|AbelianGroup|))
 (|HasCategory| |#1| (LIST '|PartialDifferentialRing| '(|Symbol|)))
 (OR (|HasCategory| |#1| (LIST '|PartialDifferentialRing| '(|Symbol|)))
     (|HasCategory| |#1| '(|Ring|)))
 (|HasCategory| |#1| '(|Monoid|)) (|HasCategory| |#1| '(|Group|))
 (OR (|HasCategory| |#1| '(|Group|)) (|HasCategory| |#1| '(|Ring|)))
 (OR (|HasCategory| |#1| '(|Group|)) (|HasCategory| |#1| '(|Monoid|)))
 (|HasCategory| |#1| (LIST '|InnerEvalable| '(|Symbol|) (|devaluate| |#1|)))
 (OR (|HasCategory| |#1| '(|AbelianGroup|))
     (AND (|HasCategory| |#1| '(|AbelianMonoid|))
          (|HasCategory| |#1| '(|CommutativeRing|)))
     (AND (|HasCategory| |#1| '(|AbelianMonoid|))
          (|HasCategory| |#1| '(|Field|)))
     (AND (|HasCategory| |#1| '(|AbelianMonoid|))
          (|HasCategory| |#1| '(|Ring|)))
     (|HasCategory| |#1| '(|Monoid|)))
 (OR (|HasCategory| |#1| '(|AbelianGroup|))
     (AND (|HasCategory| |#1| '(|AbelianMonoid|))
          (|HasCategory| |#1| '(|CommutativeRing|)))
     (AND (|HasCategory| |#1| '(|AbelianMonoid|))
          (|HasCategory| |#1| '(|Field|)))
     (AND (|HasCategory| |#1| '(|AbelianMonoid|))
          (|HasCategory| |#1| '(|Ring|))))
 (OR (|HasCategory| |#1| '(|Field|)) (|HasCategory| |#1| '(|Group|)))
 (|HasCategory| |#1| '(|SemiGroup|))
 (OR (|HasCategory| |#1| '(|Group|)) (|HasCategory| |#1| '(|Monoid|))
     (|HasCategory| |#1| '(|SemiGroup|)))
 (AND (|HasCategory| |#1| (LIST '|Evalable| (|devaluate| |#1|)))
      (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| |#1| '(|AbelianSemiGroup|))
 (OR (|HasCategory| |#1| (LIST '|PartialDifferentialRing| '(|Symbol|)))
     (|HasCategory| |#1| '(|AbelianGroup|))
     (|HasCategory| |#1| '(|AbelianSemiGroup|))
     (|HasCategory| |#1| '(|CommutativeRing|)) (|HasCategory| |#1| '(|Field|))
     (|HasCategory| |#1| '(|Ring|)))
 (OR (|HasCategory| |#1| (LIST '|PartialDifferentialRing| '(|Symbol|)))
     (|HasCategory| |#1| '(|AbelianGroup|))
     (|HasCategory| |#1| '(|AbelianSemiGroup|))
     (|HasCategory| |#1| '(|CommutativeRing|)) (|HasCategory| |#1| '(|Field|))
     (|HasCategory| |#1| '(|Group|)) (|HasCategory| |#1| '(|Monoid|))
     (|HasCategory| |#1| '(|Ring|)) (|HasCategory| |#1| '(|SemiGroup|))
     (|HasCategory| |#1| '(|SetCategory|)))
 (|HasCategory| |#1| '(|IntegralDomain|))
 (|HasCategory| |#1| '(|ExpressionSpace|)))
EQ
(((|Type|) . T)
 ((|InnerEvalable| (|Symbol|) |#1|) |has| |#1|
  (|InnerEvalable| (|Symbol|) |#1|))
 ((|CoercibleTo| (|Boolean|)) |has| |#1| (|SetCategory|))
 ((|SetCategory|) |has| |#1| (|SetCategory|))
 ((|AbelianSemiGroup|) |has| |#1| (|AbelianSemiGroup|))
 ((|AbelianGroup|) |has| |#1| (|AbelianGroup|))
 ((|SemiGroup|) |has| |#1| (|SemiGroup|)) ((|Monoid|) |has| |#1| (|Monoid|))
 ((|Group|) |has| |#1| (|Group|)) ((|BiModule| |#1| |#1|) |has| |#1| (|Ring|))
 ((|Ring|) |has| |#1| (|Ring|))
 ((|Module| |#1|) |has| |#1| (|CommutativeRing|))
 ((|PartialDifferentialRing| (|Symbol|)) |has| |#1|
  (|PartialDifferentialRing| (|Symbol|)))
 ((|VectorSpace| |#1|) |has| |#1| (|Field|)))
(((|AbelianGroup|) OR
  (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
       (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianGroup|)))
  (|has| |#1| (|AbelianGroup|)))
 ((|AbelianMonoid|) OR
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianMonoid|)))
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianMonoid|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianGroup|)))
  (|has| |#1| (|AbelianGroup|)))
 ((|AbelianSemiGroup|) OR
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianMonoid|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianMonoid|)))
  (|has| |#1| (|AbelianSemiGroup|)))
 ((|BasicType|) OR (|has| |#1| (|SetCategory|))
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianMonoid|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianMonoid|))))
 ((|BiModule| |t#1| |t#1|) |has| |#1| (|CommutativeRing|))
 ((|BiModule| $ $) |has| |#1| (|Ring|))
 ((|BiModule| |#1| |#1|) |has| |#1| (|Ring|))
 ((|CancellationAbelianMonoid|) OR
  (AND (|has| |#1| (|PartialDifferentialRing| (|Symbol|)))
       (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianGroup|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianGroup|)))
  (|has| |#1| (|AbelianGroup|)))
 ((|CoercibleTo| (|OutputForm|)) OR (|has| |#1| (|SetCategory|))
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianMonoid|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianMonoid|))))
 ((|CoercibleTo| (|Boolean|)) |has| |#1| (|SetCategory|))
 ((|Group|) |has| |#1| (|Group|))
 ((|InnerEvalable| (|Symbol|) |#1|) |has| |#1|
  (|InnerEvalable| (|Symbol|) |#1|))
 ((|LeftModule| |t#1|) |has| |#1| (|Ring|))
 ((|Magma|) |has| |#1| (|SemiGroup|)) ((|MagmaWithUnit|) |has| |#1| (|Monoid|))
 ((|Module| |t#1|) |has| |#1| (|Field|))
 ((|Module| |#1|) |has| |#1| (|CommutativeRing|))
 ((|Monoid|) |has| |#1| (|Monoid|))
 ((|NonAssociativeRing|) |has| |#1| (|Ring|))
 ((|NonAssociativeRng|) |has| |#1| (|Ring|))
 ((|NonAssociativeSemiRing|) |has| |#1| (|Ring|))
 ((|NonAssociativeSemiRng|) |has| |#1| (|Ring|))
 ((|PartialDifferentialRing| (|Symbol|)) |has| |#1|
  (|PartialDifferentialRing| (|Symbol|)))
 ((|RightModule| |t#2|) |has| |#1| (|Ring|)) ((|Ring|) |has| |#1| (|Ring|))
 ((|Rng|) |has| |#1| (|Ring|)) ((|SemiGroup|) |has| |#1| (|SemiGroup|))
 ((|SemiRing|) |has| |#1| (|Ring|)) ((|SemiRng|) |has| |#1| (|Ring|))
 ((|SetCategory|) OR (|has| |#1| (|SetCategory|))
  (AND (|has| |#1| (|Field|)) (|has| |t#1| (|AbelianMonoid|)))
  (AND (|has| |#1| (|CommutativeRing|)) (|has| |t#1| (|AbelianMonoid|))))
 ((|TwoSidedRecip|) |has| |#1| (|Group|)) ((|Type|) . T)
 ((|VectorSpace| |#1|) |has| |#1| (|Field|))
 ((|unitsKnown|) OR (|has| |#1| (|Ring|)) (|has| |#1| (|Group|))))
((|constructor|
  (NIL
   "Equations as mathematical objects. All properties of the basis domain,{} \\spadignore{e.g.} being an abelian group are carried over the equation domain,{} by performing the structural operations on the left and on the right hand side."))
 (|subst|
  (($ $ $)
   "\\spad{subst(eq1,{} eq2)} substitutes \\spad{eq2} into both sides of \\spad{eq1} the \\spad{lhs} of \\spad{eq2} should be a kernel"))
 (|inv|
  (($ $) "\\spad{inv(x)} returns the multiplicative inverse of \\spad{x}."))
 (/
  (($ $ $)
   "\\spad{e1/e2} produces a new equation by dividing the left and right hand sides of equations \\spad{e1} and \\spad{e2}."))
 (|factorAndSplit|
  (((|List| $) $)
   "\\spad{factorAndSplit(eq)} make the right hand side 0 and factors the new left hand side. Each factor is equated to 0 and put into the resulting list without repetitions."))
 (|rightOne|
  (((|Union| $ "failed") $)
   "\\spad{rightOne(eq)} divides by the right hand side.")
  (((|Union| $ "failed") $)
   "\\spad{rightOne(eq)} divides by the right hand side,{} if possible."))
 (|leftOne|
  (((|Union| $ "failed") $)
   "\\spad{leftOne(eq)} divides by the left hand side.")
  (((|Union| $ "failed") $)
   "\\spad{leftOne(eq)} divides by the left hand side,{} if possible."))
 (*
  (($ $ |#1|)
   "\\spad{eqn*x} produces a new equation by multiplying both sides of equation eqn by \\spad{x}.")
  (($ |#1| $)
   "\\spad{x*eqn} produces a new equation by multiplying both sides of equation eqn by \\spad{x}."))
 (-
  (($ $ |#1|)
   "\\spad{eqn-x} produces a new equation by subtracting \\spad{x} from both sides of equation eqn.")
  (($ |#1| $)
   "\\spad{x-eqn} produces a new equation by subtracting both sides of equation eqn from \\spad{x}."))
 (|rightZero| (($ $) "\\spad{rightZero(eq)} subtracts the right hand side."))
 (|leftZero| (($ $) "\\spad{leftZero(eq)} subtracts the left hand side."))
 (+
  (($ $ |#1|)
   "\\spad{eqn+x} produces a new equation by adding \\spad{x} to both sides of equation eqn.")
  (($ |#1| $)
   "\\spad{x+eqn} produces a new equation by adding \\spad{x} to both sides of equation eqn."))
 (|eval|
  (($ $ (|List| $))
   "\\spad{eval(eqn,{} [x1=v1,{} ... xn=vn])} replaces \\spad{xi} by \\spad{vi} in equation \\spad{eqn}.")
  (($ $ $)
   "\\spad{eval(eqn,{} x=f)} replaces \\spad{x} by \\spad{f} in equation \\spad{eqn}."))
 (|map|
  (($ (|Mapping| |#1| |#1|) $)
   "\\spad{map(f,{} eqn)} constructs a new equation by applying \\spad{f} to both sides of eqn."))
 (|rhs|
  ((|#1| $)
   "\\spad{rhs(eqn)} returns the right hand side of equation \\spad{eqn}."))
 (|lhs|
  ((|#1| $)
   "\\spad{lhs(eqn)} returns the left hand side of equation \\spad{eqn}."))
 (|swap|
  (($ $)
   "\\spad{swap(eq)} interchanges left and right hand side of equation \\spad{eq}."))
 (|equation| (($ |#1| |#1|) "\\spad{equation(a,{} b)} creates an equation."))
 (= (($ |#1| |#1|) "\\spad{a=b} creates an equation.")))
(("documentation" 0 21136) ("ancestors" 0 18207) ("parents" 0 17521)
 ("abbreviation" 0 17518) ("predicates" 0 14847) ("superDomain" 0 NIL)
 ("operationAlist" 0 9108) ("modemaps" 0 5959) ("sourceFile" 0 5925)
 ("constructorCategory" 0 3080) ("constructorModemap" 0 44)
 ("constructorKind" 0 35) ("constructorForm" 0 20))