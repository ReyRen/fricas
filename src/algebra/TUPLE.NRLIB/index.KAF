3121                (|Tuple| S)
|domain|
(((|Tuple| |#1|)
  (|Join| (|CoercibleTo| (|PrimitiveArray| |#1|))
          (CATEGORY |domain| (SIGNATURE |coerce| ($ (|PrimitiveArray| |#1|)))
           (SIGNATURE |select| (|#1| $ (|NonNegativeInteger|)))
           (SIGNATURE |#| ((|NonNegativeInteger|) $))
           (IF (|has| |#1| (|CoercibleTo| (|OutputForm|)))
               (ATTRIBUTE (|CoercibleTo| (|OutputForm|)))
               |noBranch|)
           (IF (|has| |#1| (|SetCategory|))
               (ATTRIBUTE (|SetCategory|))
               |noBranch|)))
  (|Type|))
 (T |Tuple|))
(|Join| (|CoercibleTo| (|PrimitiveArray| |#1|))
        (CATEGORY |domain| (SIGNATURE |coerce| ($ (|PrimitiveArray| |#1|)))
         (SIGNATURE |select| (|#1| $ (|NonNegativeInteger|)))
         (SIGNATURE |#| ((|NonNegativeInteger|) $))
         (IF (|has| |#1| (|CoercibleTo| (|OutputForm|)))
             (ATTRIBUTE (|CoercibleTo| (|OutputForm|)))
             |noBranch|)
         (IF (|has| |#1| (|SetCategory|))
             (ATTRIBUTE (|SetCategory|))
             |noBranch|)))
"/git/fricas/src/algebra/TUPLE.spad"
((|coerce| (*1 *1 *2)
           (AND (|isDomain| *2 (|PrimitiveArray| *3))
                (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Tuple| *3))))
 (|select| (*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *2))
       (|ofCategory| *2 (|Type|))))
 (|#| (*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *3))
       (|ofCategory| *3 (|Type|)))))
((~= (((|Boolean|) $ $) NIL (|has| |#1| (|SetCategory|))))
 (|select| ((|#1| $ (|NonNegativeInteger|)) 13))
 (|latex| (((|String|) $) NIL (|has| |#1| (|SetCategory|))))
 (|hashUpdate!|
  (((|HashState|) (|HashState|) $) NIL (|has| |#1| (|SetCategory|))))
 (|hash| (((|SingleInteger|) $) NIL (|has| |#1| (|SetCategory|))))
 (|coerce| (((|PrimitiveArray| |#1|) $) 10)
           (((|OutputForm|) $) 23 (|has| |#1| (|CoercibleTo| (|OutputForm|))))
           (($ (|PrimitiveArray| |#1|)) 9))
 (= (((|Boolean|) $ $) 16 (|has| |#1| (|SetCategory|))))
 (|#| (((|NonNegativeInteger|) $) 12)))
((|HasCategory| |#1| '(|SetCategory|))
 (|HasCategory| |#1| (LIST '|CoercibleTo| '(|OutputForm|))))
TUPLE
(((|CoercibleTo| (|PrimitiveArray| |#1|)) . T)
 ((|CoercibleTo| (|OutputForm|)) |has| |#1| (|CoercibleTo| (|OutputForm|)))
 ((|SetCategory|) |has| |#1| (|SetCategory|)))
(((|BasicType|) |has| |#1| (|SetCategory|))
 ((|CoercibleTo| (|OutputForm|)) |has| |#1| (|CoercibleTo| (|OutputForm|)))
 ((|CoercibleTo| (|PrimitiveArray| |#1|)) . T)
 ((|SetCategory|) |has| |#1| (|SetCategory|)))
((|constructor|
  (NIL
   "\\indented{1}{This domain is used to interface with the interpreter\\spad{'s} notion} of comma-delimited sequences of values."))
 (|#|
  (((|NonNegativeInteger|) $)
   "\\spad{\\#(x)} returns the number of elements in tuple \\spad{x}"))
 (|select|
  ((|#1| $ (|NonNegativeInteger|))
   "\\spad{select(x,{} n)} returns the \\spad{n}-th element of tuple \\spad{x}. tuples are 0-based"))
 (|coerce|
  (($ (|PrimitiveArray| |#1|))
   "\\spad{coerce(a)} makes a tuple from primitive array a")))
(("documentation" 0 2604) ("ancestors" 0 2390) ("parents" 0 2220)
 ("abbreviation" 0 2214) ("predicates" 0 2114) ("superDomain" 0 NIL)
 ("operationAlist" 0 1528) ("modemaps" 0 1113) ("sourceFile" 0 1076)
 ("constructorCategory" 0 590) ("constructorModemap" 0 41)
 ("constructorKind" 0 32) ("constructorForm" 0 20))