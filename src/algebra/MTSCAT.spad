)abbrev category MTSCAT MultivariateTaylorSeriesCategory
++ Author: Clifton J. Williamson
++ Date Created: 6 March 1990
++ Basic Operations:
++ Related Domains:
++ Also See:
++ AMS Classifications:
++ Keywords: multivariate, Taylor, series
++ Examples:
++ References:
++ Description:
++   \spadtype{MultivariateTaylorSeriesCategory} is the most general
++   multivariate Taylor series category.
MultivariateTaylorSeriesCategory(Coef, Var) : Category == Definition where
  Coef  : Ring
  Var   : OrderedSet
  L   ==> List
  NNI ==> NonNegativeInteger

  Definition ==> Join(PartialDifferentialRing Var, _
                     PowerSeriesCategory(Coef, IndexedExponents Var, Var), _
                     InnerEvalable(Var, %), Evalable %) with
    coefficient : (%, Var, NNI) -> %
      ++ \spad{coefficient(f, x, n)} returns the coefficient of \spad{x^n} in f.
    coefficient : (%, L Var, L NNI) -> %
      ++ \spad{coefficient(f, [x1, x2, ..., xk], [n1, n2, ..., nk])} returns the
      ++ coefficient of \spad{x1^n1 * ... * xk^nk} in f.
    extend : (%, NNI) -> %
      ++ \spad{extend(f, n)} causes all terms of f of degree
      ++ \spad{<= n} to be computed.
    monomial : (%, Var, NNI) -> %
      ++ \spad{monomial(a, x, n)} returns  \spad{a*x^n}.
    monomial : (%, L Var, L NNI) -> %
      ++ \spad{monomial(a, [x1, x2, ..., xk], [n1, n2, ..., nk])} returns
      ++ \spad{a * x1^n1 * ... * xk^nk}.
    order : (%, Var) -> NNI
      ++ \spad{order(f, x)} returns the order of f viewed as a series in x
      ++ may result in an infinite loop if f has no non-zero terms.
    order : (%, Var, NNI) -> NNI
      ++ \spad{order(f, x, n)} returns \spad{min(n, order(f, x))}.
    polynomial : (%, NNI) -> Polynomial Coef
      ++ \spad{polynomial(f, k)} returns a polynomial consisting of the sum
      ++ of all terms of f of degree \spad{<= k}.
    polynomial : (%, NNI, NNI) -> Polynomial Coef
      ++ \spad{polynomial(f, k1, k2)} returns a polynomial consisting of the
      ++ sum of all terms of f of degree d with \spad{k1 <= d <= k2}.
    if Coef has Algebra Fraction Integer then
      integrate : (%, Var) -> %
        ++ \spad{integrate(f, x)} returns the anti-derivative of the power
        ++ series \spad{f(x)} with respect to the variable x with constant
        ++ coefficient 1.  We may integrate a series when we can divide
        ++ coefficients by integers.
      RadicalCategory
        --++ We provide rational powers when we can divide coefficients
        --++ by integers.
      TranscendentalFunctionCategory
        --++ We provide transcendental functions when we can divide
        --++ coefficients by integers.

   add

    coefficient(s : %, v : Var, n : NNI) : % == coefficient(s, [v], [n])



--Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
--All rights reserved.
--
--Redistribution and use in source and binary forms, with or without
--modification, are permitted provided that the following conditions are
--met:
--
--    - Redistributions of source code must retain the above copyright
--      notice, this list of conditions and the following disclaimer.
--
--    - Redistributions in binary form must reproduce the above copyright
--      notice, this list of conditions and the following disclaimer in
--      the documentation and/or other materials provided with the
--      distribution.
--
--    - Neither the name of The Numerical ALgorithms Group Ltd. nor the
--      names of its contributors may be used to endorse or promote products
--      derived from this software without specific prior written permission.
--
--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
--IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
--TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
--PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
--OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
--EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
--PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
--PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
--LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
--NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
--SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
