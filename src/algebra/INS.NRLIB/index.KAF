11710               (MAKEPROP '|IntegerNumberSystem| 'NILADIC T)
(|IntegerNumberSystem|)
|category|
(((|IntegerNumberSystem|) (|Category|)) (T |IntegerNumberSystem|))
(|Join| (|UniqueFactorizationDomain|) (|EuclideanDomain|)
        (|OrderedIntegralDomain|) (|DifferentialRing|)
        (|ConvertibleTo| (|Integer|)) (|RetractableTo| (|Integer|))
        (|ConvertibleTo| (|InputForm|))
        (|ConvertibleTo| (|Pattern| (|Integer|)))
        (|PatternMatchable| (|Integer|)) (|CombinatorialFunctionCategory|)
        (|RealConstant|) (|CharacteristicZero|) (|StepThrough|)
        (|canonicalUnitNormal|) (|multiplicativeValuation|)
        (CATEGORY |domain| (SIGNATURE |odd?| ((|Boolean|) $))
         (SIGNATURE |even?| ((|Boolean|) $)) (SIGNATURE |base| ($))
         (SIGNATURE |length| ($ $)) (SIGNATURE |shift| ($ $ $))
         (SIGNATURE |bit?| ((|Boolean|) $ $))
         (SIGNATURE |positiveRemainder| ($ $ $))
         (SIGNATURE |symmetricRemainder| ($ $ $))
         (SIGNATURE |rational?| ((|Boolean|) $))
         (SIGNATURE |rational| ((|Fraction| (|Integer|)) $))
         (SIGNATURE |rationalIfCan|
          ((|Union| (|Fraction| (|Integer|)) "failed") $))
         (SIGNATURE |random| ($ $)) (SIGNATURE |copy| ($ $))
         (SIGNATURE |inc| ($ $)) (SIGNATURE |dec| ($ $))
         (SIGNATURE |mask| ($ $)) (SIGNATURE |addmod| ($ $ $ $))
         (SIGNATURE |submod| ($ $ $ $)) (SIGNATURE |mulmod| ($ $ $ $))
         (SIGNATURE |powmod| ($ $ $ $)) (SIGNATURE |invmod| ($ $ $))))
"/git/fricas/src/algebra/INS.spad"
((|odd?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 (|even?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 (|base| (*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|length| (*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|shift| (*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|bit?| (*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 (|positiveRemainder| (*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|symmetricRemainder| (*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|rational?| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 (|rational| (*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 (|rationalIfCan| (*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 (|random| (*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|copy| (*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|inc| (*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|dec| (*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|mask| (*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|addmod| (*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|submod| (*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|mulmod| (*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|powmod| (*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 (|invmod| (*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))))
((~= (((|Boolean|) $ $) 6)) (|zero?| (((|Boolean|) $) 6))
 (|unitNormal|
  (((|Record| (|:| |unit| $) (|:| |canonical| $) (|:| |associate| $)) $) 6))
 (|unitCanonical| (($ $) 6)) (|unit?| (((|Boolean|) $) 6))
 (|symmetricRemainder| (($ $ $) 6))
 (|subtractIfCan| (((|Union| $ "failed") $ $) 6)) (|submod| (($ $ $ $) 6))
 (|squareFreePart| (($ $) 6)) (|squareFree| (((|Factored| $) $) 6))
 (|smaller?| (((|Boolean|) $ $) 6)) (|sizeLess?| (((|Boolean|) $ $) 6))
 (|sign| (((|Integer|) $) 6)) (|shift| (($ $ $) 6)) (|sample| (($) 6 T CONST))
 (|rightRecip| (((|Union| $ #1="failed") $) 6))
 (|rightPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|retractIfCan| (((|Union| (|Integer|) "failed") $) 6))
 (|retract| (((|Integer|) $) 6)) (|rem| (($ $ $) 6))
 (|recip| (((|Union| $ #1#) $) 6))
 (|rationalIfCan| (((|Union| (|Fraction| (|Integer|)) "failed") $) 6))
 (|rational?| (((|Boolean|) $) 6))
 (|rational| (((|Fraction| (|Integer|)) $) 6)) (|random| (($ $) 6))
 (|quo| (($ $ $) 6))
 (|principalIdeal|
  (((|Record| (|:| |coef| (|List| $)) (|:| |generator| $)) (|List| $)) 6))
 (|prime?| (((|Boolean|) $) 6)) (|powmod| (($ $ $ $) 6))
 (|positiveRemainder| (($ $ $) 6)) (|positive?| (((|Boolean|) $) 6))
 (|permutation| (($ $ $) 6))
 (|patternMatch|
  (((|PatternMatchResult| (|Integer|) $) $ (|Pattern| (|Integer|))
    (|PatternMatchResult| (|Integer|) $))
   6))
 (|opposite?| (((|Boolean|) $ $) 6)) (|one?| (((|Boolean|) $) 6))
 (|odd?| (((|Boolean|) $) 6)) (|nextItem| (((|Union| $ "failed") $) 6))
 (|negative?| (((|Boolean|) $) 6))
 (|multiEuclidean| (((|Union| (|List| $) #2="failed") (|List| $) $) 6))
 (|mulmod| (($ $ $ $) 6)) (|min| (($ $ $) 6)) (|max| (($ $ $) 6))
 (|mask| (($ $) 6)) (|length| (($ $) 6)) (|leftRecip| (((|Union| $ #1#) $) 6))
 (|leftPower| (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|lcmCoef|
  (((|Record| (|:| |llcm_res| $) (|:| |coeff1| $) (|:| |coeff2| $)) $ $) 6))
 (|lcm| (($ $ $) 6) (($ (|List| $)) 6)) (|latex| (((|String|) $) 6))
 (|invmod| (($ $ $) 6)) (|init| (($) 6 T CONST)) (|inc| (($ $) 6))
 (|hashUpdate!| (((|HashState|) (|HashState|) $) 6))
 (|hash| (((|SingleInteger|) $) 6))
 (|gcdPolynomial|
  (((|SparseUnivariatePolynomial| $) (|SparseUnivariatePolynomial| $)
    (|SparseUnivariatePolynomial| $))
   6))
 (|gcd| (($ $ $) 6) (($ (|List| $)) 6)) (|factorial| (($ $) 6))
 (|factor| (((|Factored| $) $) 6))
 (|extendedEuclidean|
  (((|Union| (|Record| (|:| |coef1| $) (|:| |coef2| $)) #2#) $ $ $) 6)
  (((|Record| (|:| |coef1| $) (|:| |coef2| $) (|:| |generator| $)) $ $) 6))
 (|exquo| (((|Union| $ "failed") $ $) 6))
 (|expressIdealMember| (((|Union| (|List| $) "failed") (|List| $) $) 6))
 (|even?| (((|Boolean|) $) 6)) (|euclideanSize| (((|NonNegativeInteger|) $) 6))
 (|divide| (((|Record| (|:| |quotient| $) (|:| |remainder| $)) $ $) 6))
 (|differentiate| (($ $ (|NonNegativeInteger|)) 6) (($ $) 6)) (|dec| (($ $) 6))
 (|copy| (($ $) 6))
 (|convert| (((|Integer|) $) 6) (((|InputForm|) $) 6)
            (((|Pattern| (|Integer|)) $) 6) (((|Float|) $) 6)
            (((|DoubleFloat|) $) 6))
 (|commutator| (($ $ $) 6))
 (|coerce| (((|OutputForm|) $) 6) (($ $) 6) (($ (|Integer|)) 6))
 (|characteristic| (((|NonNegativeInteger|)) 6)) (|bit?| (((|Boolean|) $ $) 6))
 (|binomial| (($ $ $) 6)) (|base| (($) 6)) (|associator| (($ $ $ $) 6))
 (|associates?| (((|Boolean|) $ $) 6)) (|antiCommutator| (($ $ $) 6))
 (|annihilate?| (((|Boolean|) $ $) 6)) (|addmod| (($ $ $ $) 6))
 (|abs| (($ $) 6))
 (^ (($ $ (|PositiveInteger|)) 6) (($ $ (|NonNegativeInteger|)) 6))
 (|Zero| (($) 6 T CONST)) (|One| (($) 6 T CONST))
 (D (($ $ (|NonNegativeInteger|)) 6) (($ $) 6)) (>= (((|Boolean|) $ $) 6))
 (> (((|Boolean|) $ $) 6)) (= (((|Boolean|) $ $) 6)) (<= (((|Boolean|) $ $) 6))
 (< (((|Boolean|) $ $) 6)) (- (($ $ $) 6) (($ $) 6)) (+ (($ $ $) 6))
 (* (($ (|PositiveInteger|) $) 6) (($ $ $) 6) (($ (|Integer|) $) 6)
    (($ (|NonNegativeInteger|) $) 6)))
INS
(((|UniqueFactorizationDomain|) . T) ((|EuclideanDomain|) . T)
 ((|OrderedIntegralDomain|) . T) ((|DifferentialRing|) . T)
 ((|ConvertibleTo| (|Integer|)) . T) ((|RetractableTo| (|Integer|)) . T)
 ((|ConvertibleTo| (|InputForm|)) . T)
 ((|ConvertibleTo| (|Pattern| (|Integer|))) . T)
 ((|PatternMatchable| (|Integer|)) . T) ((|CombinatorialFunctionCategory|) . T)
 ((|RealConstant|) . T) ((|CharacteristicZero|) . T) ((|StepThrough|) . T)
 ((|canonicalUnitNormal|) . T) ((|multiplicativeValuation|) . T))
(((|AbelianGroup|) . T) ((|AbelianMonoid|) . T) ((|AbelianSemiGroup|) . T)
 ((|Algebra| $) . T) ((|BasicType|) . T) ((|BiModule| |t#1| |t#1|) . T)
 ((|BiModule| $ $) . T) ((|CancellationAbelianMonoid|) . T)
 ((|CharacteristicZero|) . T) ((|CoercibleTo| (|OutputForm|)) . T)
 ((|CombinatorialFunctionCategory|) . T) ((|CommutativeRing|) . T)
 ((|CommutativeStar|) . T) ((|Comparable|) . T)
 ((|ConvertibleTo| (|Float|)) . T) ((|ConvertibleTo| (|DoubleFloat|)) . T)
 ((|ConvertibleTo| (|Pattern| (|Integer|))) . T)
 ((|ConvertibleTo| (|InputForm|)) . T) ((|ConvertibleTo| (|Integer|)) . T)
 ((|DifferentialRing|) . T) ((|EntireRing|) . T) ((|EuclideanDomain|) . T)
 ((|GcdDomain|) . T) ((|IntegralDomain|) . T) ((|LeftModule| |t#1|) . T)
 ((|LeftOreRing|) . T) ((|Magma|) . T) ((|MagmaWithUnit|) . T)
 ((|Module| |t#1|) . T) ((|Monoid|) . T) ((|NonAssociativeRing|) . T)
 ((|NonAssociativeRng|) . T) ((|NonAssociativeSemiRing|) . T)
 ((|NonAssociativeSemiRng|) . T) ((|OrderedAbelianGroup|) . T)
 ((|OrderedAbelianMonoid|) . T) ((|OrderedAbelianSemiGroup|) . T)
 ((|OrderedCancellationAbelianMonoid|) . T) ((|OrderedIntegralDomain|) . T)
 ((|OrderedRing|) . T) ((|OrderedSet|) . T) ((|PartialOrder|) . T)
 ((|PatternMatchable| (|Integer|)) . T) ((|PrincipalIdealDomain|) . T)
 ((|RealConstant|) . T) ((|RetractableTo| (|Integer|)) . T)
 ((|RightModule| |t#2|) . T) ((|Ring|) . T) ((|Rng|) . T) ((|SemiGroup|) . T)
 ((|SemiRing|) . T) ((|SemiRng|) . T) ((|SetCategory|) . T)
 ((|StepThrough|) . T) ((|TwoSidedRecip|) . T)
 ((|UniqueFactorizationDomain|) . T) ((|canonicalUnitNormal|) . T)
 ((|multiplicativeValuation|) . T) ((|noZeroDivisors|) . T)
 ((|unitsKnown|) . T))
((|constructor|
  (NIL "An \\spad{IntegerNumberSystem} is a model for the integers."))
 (|invmod|
  (($ $ $)
   "\\spad{invmod(a,{} b)},{} \\spad{0<=a<b>1},{} \\spad{(a,{} b)=1} means \\spad{1/a mod b}."))
 (|powmod|
  (($ $ $ $)
   "\\spad{powmod(a,{} b,{} p)},{} \\spad{0<=a,{} b<p>1},{} means \\spad{a^b mod p}."))
 (|mulmod|
  (($ $ $ $)
   "\\spad{mulmod(a,{} b,{} p)},{} \\spad{0<=a,{} b<p>1},{} means \\spad{a*b mod p}."))
 (|submod|
  (($ $ $ $)
   "\\spad{submod(a,{} b,{} p)},{} \\spad{0<=a,{} b<p>1},{} means \\spad{a-b mod p}."))
 (|addmod|
  (($ $ $ $)
   "\\spad{addmod(a,{} b,{} p)},{} \\spad{0<=a,{} b<p>1},{} means \\spad{a+b mod p}."))
 (|mask|
  (($ $) "\\spad{mask(n)} returns \\spad{2^n-1} (an \\spad{n} bit mask)."))
 (|dec| (($ $) "\\spad{dec(x)} returns \\spad{x - 1}."))
 (|inc| (($ $) "\\spad{inc(x)} returns \\spad{x + 1}."))
 (|copy| (($ $) "\\spad{copy(n)} gives a copy of \\spad{n}."))
 (|random|
  (($ $) "\\spad{random(n)} creates a random element from 0 to \\spad{n-1}."))
 (|rationalIfCan|
  (((|Union| (|Fraction| (|Integer|)) "failed") $)
   "\\spad{rationalIfCan(n)} creates a rational number,{} or returns \"failed\" if this is not possible."))
 (|rational|
  (((|Fraction| (|Integer|)) $)
   "\\spad{rational(n)} creates a rational number (see \\spadtype{Fraction Integer})."))
 (|rational?|
  (((|Boolean|) $)
   "\\spad{rational?(n)} tests if \\spad{n} is a rational number (see \\spadtype{Fraction Integer})."))
 (|symmetricRemainder|
  (($ $ $)
   "\\spad{symmetricRemainder(a,{} b)} (where \\spad{b > 1}) yields \\spad{r} where \\spad{ -b/2 <= r < b/2 }."))
 (|positiveRemainder|
  (($ $ $)
   "\\spad{positiveRemainder(a,{} b)} (where \\spad{b > 1}) yields \\spad{r} where \\spad{0 <= r < b} and \\spad{r = a rem b}."))
 (|bit?|
  (((|Boolean|) $ $)
   "\\spad{bit?(n,{} i)} returns \\spad{true} if and only if \\spad{i}-th bit of \\spad{n} is a 1."))
 (|shift|
  (($ $ $) "\\spad{shift(a,{} i)} shift \\spad{a} by \\spad{i} digits."))
 (|length| (($ $) "\\spad{length(a)} length of \\spad{a} in digits."))
 (|base|
  (($)
   "\\spad{base()} returns the base for the operations of \\spad{IntegerNumberSystem}."))
 (|even?|
  (((|Boolean|) $)
   "\\spad{even?(n)} returns \\spad{true} if and only if \\spad{n} is even."))
 (|odd?|
  (((|Boolean|) $)
   "\\spad{odd?(n)} returns \\spad{true} if and only if \\spad{n} is odd.")))
(("documentation" 0 9338) ("ancestors" 0 7669) ("parents" 0 7164)
 ("abbreviation" 0 7160) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 3222) ("modemaps" 0 1541) ("sourceFile" 0 1506)
 ("constructorCategory" 0 167) ("constructorModemap" 0 100)
 ("constructorKind" 0 89) ("constructorForm" 0 65) ("NILADIC" 0 20))