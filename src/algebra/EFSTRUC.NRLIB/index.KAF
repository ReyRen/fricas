18166               (|ElementaryFunctionStructurePackage| R F)
|package|
(((|ElementaryFunctionStructurePackage| |#1| |#2|)
  (CATEGORY |package| (SIGNATURE |normalize| (|#2| |#2|))
   (SIGNATURE |normalize| ((|List| |#2|) (|List| |#2|)))
   (SIGNATURE |normalize| (|#2| |#2| (|Symbol|)))
   (SIGNATURE |normalize| ((|List| |#2|) (|List| |#2|) (|List| (|Symbol|))))
   (SIGNATURE |rischNormalize|
    ((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
               (|:| |vals| (|List| |#2|)))
     |#2| (|Symbol|)))
   (SIGNATURE |rischNormalize|
    ((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
               (|:| |vals| (|List| |#2|)))
     |#2| (|List| (|Symbol|))))
   (SIGNATURE |rischNormalize|
    ((|Record| (|:| |funcs| (|List| |#2|))
               (|:| |kers| (|List| (|Kernel| |#2|)))
               (|:| |vals| (|List| |#2|)))
     (|List| |#2|) (|List| (|Symbol|))))
   (SIGNATURE |realElementary| (|#2| |#2|))
   (SIGNATURE |realLiouvillian| (|#2| |#2|))
   (SIGNATURE |realLiouvillian| (|#2| |#2| (|Symbol|)))
   (SIGNATURE |realElementary| (|#2| |#2| (|Symbol|)))
   (SIGNATURE |validExponential|
    ((|Union| |#2| "failed") (|List| (|Kernel| |#2|)) |#2| (|Symbol|)))
   (SIGNATURE |rootNormalize| (|#2| |#2| (|Kernel| |#2|)))
   (SIGNATURE |rmap| (|#2| (|Mapping| |#2| (|Kernel| |#2|)) |#2|))
   (SIGNATURE |tanQ| (|#2| (|Fraction| (|Integer|)) |#2|))
   (SIGNATURE |irootDep|
    ((|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|)))) (|:| |func| |#2|)
              (|:| |fail| (|Boolean|)))
     (|Kernel| |#2|))))
  (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| (|Integer|))
          (|LinearlyExplicitOver| (|Integer|)))
  (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|)
          (|FunctionSpace| |#1|)))
 (T |ElementaryFunctionStructurePackage|))
(CATEGORY |package| (SIGNATURE |normalize| (|#2| |#2|))
 (SIGNATURE |normalize| ((|List| |#2|) (|List| |#2|)))
 (SIGNATURE |normalize| (|#2| |#2| (|Symbol|)))
 (SIGNATURE |normalize| ((|List| |#2|) (|List| |#2|) (|List| (|Symbol|))))
 (SIGNATURE |rischNormalize|
  ((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
             (|:| |vals| (|List| |#2|)))
   |#2| (|Symbol|)))
 (SIGNATURE |rischNormalize|
  ((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
             (|:| |vals| (|List| |#2|)))
   |#2| (|List| (|Symbol|))))
 (SIGNATURE |rischNormalize|
  ((|Record| (|:| |funcs| (|List| |#2|)) (|:| |kers| (|List| (|Kernel| |#2|)))
             (|:| |vals| (|List| |#2|)))
   (|List| |#2|) (|List| (|Symbol|))))
 (SIGNATURE |realElementary| (|#2| |#2|))
 (SIGNATURE |realLiouvillian| (|#2| |#2|))
 (SIGNATURE |realLiouvillian| (|#2| |#2| (|Symbol|)))
 (SIGNATURE |realElementary| (|#2| |#2| (|Symbol|)))
 (SIGNATURE |validExponential|
  ((|Union| |#2| "failed") (|List| (|Kernel| |#2|)) |#2| (|Symbol|)))
 (SIGNATURE |rootNormalize| (|#2| |#2| (|Kernel| |#2|)))
 (SIGNATURE |rmap| (|#2| (|Mapping| |#2| (|Kernel| |#2|)) |#2|))
 (SIGNATURE |tanQ| (|#2| (|Fraction| (|Integer|)) |#2|))
 (SIGNATURE |irootDep|
  ((|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|)))) (|:| |func| |#2|)
            (|:| |fail| (|Boolean|)))
   (|Kernel| |#2|))))
"/git/fricas/src/algebra/EFSTRUC.spad"
((|irootDep| (*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|))))
                            (|:| |func| *5) (|:| |fail| (|Boolean|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))
 (|tanQ| (*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 (|rmap| (*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))
 (|rootNormalize| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))
 (|validExponential| (*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Kernel| *2)))
   (|isDomain| *4 (|Symbol|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *2))))
 (|realElementary| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 (|realLiouvillian| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 (|realLiouvillian| (*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 (|realElementary| (*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 (|rischNormalize| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |funcs| (|List| *6))
                             (|:| |kers| (|List| (|Kernel| *6)))
                             (|:| |vals| (|List| *6))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *6))))
 (|rischNormalize| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 (|rischNormalize| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 (|normalize| (*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))
 (|normalize| (*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 (|normalize| (*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofCategory| *3
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *4))))
 (|normalize| (*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3))))))
((|validExponential|
  (((|Union| |#2| "failed") (|List| (|Kernel| |#2|)) |#2| (|Symbol|)) 186))
 (|tanQ| ((|#2| (|Fraction| (|Integer|)) |#2|) 50))
 (|rootNormalize| ((|#2| |#2| (|Kernel| |#2|)) 182))
 (|rmap| ((|#2| (|Mapping| |#2| (|Kernel| |#2|)) |#2|) 18))
 (|rischNormalize|
  (((|Record| (|:| |funcs| (|List| |#2|)) (|:| |kers| (|List| (|Kernel| |#2|)))
              (|:| |vals| (|List| |#2|)))
    (|List| |#2|) (|List| (|Symbol|)))
   176)
  (((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
              (|:| |vals| (|List| |#2|)))
    |#2| (|List| (|Symbol|)))
   179)
  (((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
              (|:| |vals| (|List| |#2|)))
    |#2| (|Symbol|))
   180))
 (|realLiouvillian| ((|#2| |#2| (|Symbol|)) 25) ((|#2| |#2|) 24))
 (|realElementary| ((|#2| |#2| (|Symbol|)) 20) ((|#2| |#2|) 23))
 (|normalize| (((|List| |#2|) (|List| |#2|) (|List| (|Symbol|))) 193)
  ((|#2| |#2| (|Symbol|)) 196) (((|List| |#2|) (|List| |#2|)) 195)
  ((|#2| |#2|) 194))
 (|irootDep|
  (((|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|)))) (|:| |func| |#2|)
             (|:| |fail| (|Boolean|)))
    (|Kernel| |#2|))
   191)))
EFSTRUC
((|constructor|
  (NIL
   "ElementaryFunctionStructurePackage provides functions to test the algebraic independence of various elementary functions,{} using the Risch structure theorem (real and complex versions). It also provides transformations on elementary functions which are not considered simplifications."))
 (|irootDep|
  (((|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|)))) (|:| |func| |#2|)
             (|:| |fail| (|Boolean|)))
    (|Kernel| |#2|))
   "\\spad{irootDep(k)} is a local function with a conditional implementation."))
 (|tanQ|
  ((|#2| (|Fraction| (|Integer|)) |#2|)
   "\\spad{tanQ(q,{} a)} is a local function with a conditional implementation."))
 (|rmap|
  ((|#2| (|Mapping| |#2| (|Kernel| |#2|)) |#2|)
   "\\spad{rmap(f,{} e)} rewrites \\spad{e} replacing each kernel \\spad{k} in \\spad{e} by \\spad{f}(\\spad{k})"))
 (|rootNormalize|
  ((|#2| |#2| (|Kernel| |#2|))
   "\\spad{rootNormalize(f,{} k)} returns \\spad{f} rewriting either \\spad{k} which must be an \\spad{n}th-root in terms of radicals already in \\spad{f},{} or some radicals in \\spad{f} in terms of \\spad{k}."))
 (|validExponential|
  (((|Union| |#2| "failed") (|List| (|Kernel| |#2|)) |#2| (|Symbol|))
   "\\spad{validExponential([k1,{} ...,{} kn],{} f,{} x)} returns \\spad{g} if \\spad{exp(f)=g} and \\spad{g} involves only \\spad{k1...kn},{} and \"failed\" otherwise."))
 (|realLiouvillian|
  ((|#2| |#2| (|Symbol|))
   "\\spad{realLiouvillian(f,{} x)} rewrites \\spad{f} elementary kernels of \\spad{f} in terms 4 fundamental real elementary functions: \\spad{log,{} exp,{} tan,{} atan}. Additionally,{} it rewrites Liouvillian functions of \\spad{x} as indefinite integrals to support better normalization.")
  ((|#2| |#2|)
   "\\spad{realLiouvillian(f)} rewrites \\spad{f} elementary kernels of \\spad{f} in terms 4 fundamental real elementary functions: \\spad{log,{} exp,{} tan,{} atan}. Additionally,{} it rewrites Liouvillian functions as indefinite integrals to support better normalization."))
 (|realElementary|
  ((|#2| |#2| (|Symbol|))
   "\\spad{realElementary(f,{} x)} rewrites the kernels of \\spad{f} involving \\spad{x} in terms of the 4 fundamental real transcendental elementary functions: \\spad{log,{} exp,{} tan,{} atan}.")
  ((|#2| |#2|)
   "\\spad{realElementary(f)} rewrites \\spad{f} in terms of the 4 fundamental real transcendental elementary functions: \\spad{log,{} exp,{} tan,{} atan}."))
 (|rischNormalize|
  (((|Record| (|:| |funcs| (|List| |#2|)) (|:| |kers| (|List| (|Kernel| |#2|)))
              (|:| |vals| (|List| |#2|)))
    (|List| |#2|) (|List| (|Symbol|)))
   "\\spad{rischNormalize(lf,{} lx)} returns \\spad{[lg,{} [k1,{} ...,{} kn],{} [h1,{} ...,{} hn]]} such that \\spad{lg = normalize(lf,{} lx)} and each \\spad{\\spad{ki}} was rewritten as \\spad{\\spad{hi}} during the normalization.")
  (((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
              (|:| |vals| (|List| |#2|)))
    |#2| (|List| (|Symbol|)))
   "\\spad{rischNormalize(f,{} lx)} is rischNormalize([\\spad{f}],{} \\spad{lx})")
  (((|Record| (|:| |func| |#2|) (|:| |kers| (|List| (|Kernel| |#2|)))
              (|:| |vals| (|List| |#2|)))
    |#2| (|Symbol|))
   "\\spad{rischNormalize(f,{} x)} is rischNormalize([\\spad{f}],{} [\\spad{x}]) rischNormalize(\\spad{f},{} \\spad{x}) returns \\spad{[g,{} [k1,{} ...,{} kn],{} [h1,{} ...,{} hn]]} such that \\spad{g = normalize(f,{} x)} and each \\spad{\\spad{ki}} was rewritten as \\spad{\\spad{hi}} during the normalization."))
 (|normalize|
  (((|List| |#2|) (|List| |#2|) (|List| (|Symbol|)))
   "\\spad{normalize([f1,{} ...,{} fn],{} lx)} rewrites \\spad{f1,{} ...,{} fn} using the least possible number of real algebraically independent kernels. Additionally,{} it tries to ensure that any expression in resulting kernels which syntactically depends on a variable \\spad{x} from \\spad{lx} has nonzero derivative with respect to \\spad{x}.")
  ((|#2| |#2| (|Symbol|))
   "\\spad{normalize(f,{} x)} is normalize([\\spad{f}],{} [\\spad{x}])")
  (((|List| |#2|) (|List| |#2|))
   "\\spad{normalize(lf)} is normalize(\\spad{lf},{} [])")
  ((|#2| |#2|)
   "\\spad{normalize(f)} rewrites \\spad{f} using the least possible number of real algebraically independent kernels.")))
(("documentation" 0 13901) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 13893) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 12700) ("modemaps" 0 3278) ("sourceFile" 0 3239)
 ("constructorCategory" 0 1855) ("constructorModemap" 0 73)
 ("constructorKind" 0 63) ("constructorForm" 0 20))