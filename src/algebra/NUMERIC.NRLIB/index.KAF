34617               (|Numeric| S)
|package|
(((|Numeric| |#1|)
  (CATEGORY |package| (SIGNATURE |numeric| ((|Float|) |#1|))
   (SIGNATURE |numeric| ((|Float|) |#1| (|PositiveInteger|)))
   (SIGNATURE |complexNumeric| ((|Complex| (|Float|)) |#1|))
   (SIGNATURE |complexNumeric|
    ((|Complex| (|Float|)) |#1| (|PositiveInteger|)))
   (IF (|has| |#1| (|CommutativeRing|))
       (PROGN
        (SIGNATURE |complexNumeric| ((|Complex| (|Float|)) (|Complex| |#1|)))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Complex| |#1|) (|PositiveInteger|)))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|))))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|))
          (|PositiveInteger|))))
       |noBranch|)
   (IF (|has| |#1| (|Ring|))
       (PROGN
        (SIGNATURE |numeric| ((|Float|) (|Polynomial| |#1|)))
        (SIGNATURE |numeric|
         ((|Float|) (|Polynomial| |#1|) (|PositiveInteger|)))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Polynomial| |#1|)))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Polynomial| |#1|) (|PositiveInteger|))))
       |noBranch|)
   (IF (|has| |#1| (|IntegralDomain|))
       (PROGN
        (SIGNATURE |numeric| ((|Float|) (|Fraction| (|Polynomial| |#1|))))
        (SIGNATURE |numeric|
         ((|Float|) (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|)))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|))))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|))
          (|PositiveInteger|)))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|)))))
        (SIGNATURE |complexNumeric|
         ((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|)))
          (|PositiveInteger|)))
        (IF (|has| |#1| (|OrderedSet|))
            (PROGN
             (SIGNATURE |numeric| ((|Float|) (|Expression| |#1|)))
             (SIGNATURE |numeric|
              ((|Float|) (|Expression| |#1|) (|PositiveInteger|)))
             (SIGNATURE |complexNumeric|
              ((|Complex| (|Float|)) (|Expression| |#1|)))
             (SIGNATURE |complexNumeric|
              ((|Complex| (|Float|)) (|Expression| |#1|) (|PositiveInteger|)))
             (SIGNATURE |complexNumeric|
              ((|Complex| (|Float|)) (|Expression| (|Complex| |#1|))))
             (SIGNATURE |complexNumeric|
              ((|Complex| (|Float|)) (|Expression| (|Complex| |#1|))
               (|PositiveInteger|))))
            |noBranch|))
       |noBranch|)
   (IF (|has| |#1| (|CommutativeRing|))
       (PROGN
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed")
          (|Polynomial| (|Complex| |#1|))))
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed")
          (|Polynomial| (|Complex| |#1|)) (|PositiveInteger|))))
       |noBranch|)
   (IF (|has| |#1| (|Ring|))
       (PROGN
        (SIGNATURE |numericIfCan|
         ((|Union| (|Float|) "failed") (|Polynomial| |#1|)))
        (SIGNATURE |numericIfCan|
         ((|Union| (|Float|) "failed") (|Polynomial| |#1|)
          (|PositiveInteger|)))
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|)))
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|)
          (|PositiveInteger|))))
       |noBranch|)
   (IF (|has| |#1| (|IntegralDomain|))
       (PROGN
        (SIGNATURE |numericIfCan|
         ((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|))))
        (SIGNATURE |numericIfCan|
         ((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|))
          (|PositiveInteger|)))
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed")
          (|Fraction| (|Polynomial| |#1|))))
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed")
          (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|)))
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed")
          (|Fraction| (|Polynomial| (|Complex| |#1|)))))
        (SIGNATURE |complexNumericIfCan|
         ((|Union| (|Complex| (|Float|)) "failed")
          (|Fraction| (|Polynomial| (|Complex| |#1|))) (|PositiveInteger|)))
        (IF (|has| |#1| (|OrderedSet|))
            (PROGN
             (SIGNATURE |numericIfCan|
              ((|Union| (|Float|) "failed") (|Expression| |#1|)))
             (SIGNATURE |numericIfCan|
              ((|Union| (|Float|) "failed") (|Expression| |#1|)
               (|PositiveInteger|)))
             (SIGNATURE |complexNumericIfCan|
              ((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|)))
             (SIGNATURE |complexNumericIfCan|
              ((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|)
               (|PositiveInteger|)))
             (SIGNATURE |complexNumericIfCan|
              ((|Union| (|Complex| (|Float|)) "failed")
               (|Expression| (|Complex| |#1|))))
             (SIGNATURE |complexNumericIfCan|
              ((|Union| (|Complex| (|Float|)) "failed")
               (|Expression| (|Complex| |#1|)) (|PositiveInteger|))))
            |noBranch|))
       |noBranch|))
  (|ConvertibleTo| (|Float|)))
 (T |Numeric|))
(CATEGORY |package| (SIGNATURE |numeric| ((|Float|) |#1|))
 (SIGNATURE |numeric| ((|Float|) |#1| (|PositiveInteger|)))
 (SIGNATURE |complexNumeric| ((|Complex| (|Float|)) |#1|))
 (SIGNATURE |complexNumeric| ((|Complex| (|Float|)) |#1| (|PositiveInteger|)))
 (IF (|has| |#1| (|CommutativeRing|))
     (PROGN
      (SIGNATURE |complexNumeric| ((|Complex| (|Float|)) (|Complex| |#1|)))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Complex| |#1|) (|PositiveInteger|)))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|))))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|))
        (|PositiveInteger|))))
     |noBranch|)
 (IF (|has| |#1| (|Ring|))
     (PROGN
      (SIGNATURE |numeric| ((|Float|) (|Polynomial| |#1|)))
      (SIGNATURE |numeric| ((|Float|) (|Polynomial| |#1|) (|PositiveInteger|)))
      (SIGNATURE |complexNumeric| ((|Complex| (|Float|)) (|Polynomial| |#1|)))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Polynomial| |#1|) (|PositiveInteger|))))
     |noBranch|)
 (IF (|has| |#1| (|IntegralDomain|))
     (PROGN
      (SIGNATURE |numeric| ((|Float|) (|Fraction| (|Polynomial| |#1|))))
      (SIGNATURE |numeric|
       ((|Float|) (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|)))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|))))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|))
        (|PositiveInteger|)))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|)))))
      (SIGNATURE |complexNumeric|
       ((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|)))
        (|PositiveInteger|)))
      (IF (|has| |#1| (|OrderedSet|))
          (PROGN
           (SIGNATURE |numeric| ((|Float|) (|Expression| |#1|)))
           (SIGNATURE |numeric|
            ((|Float|) (|Expression| |#1|) (|PositiveInteger|)))
           (SIGNATURE |complexNumeric|
            ((|Complex| (|Float|)) (|Expression| |#1|)))
           (SIGNATURE |complexNumeric|
            ((|Complex| (|Float|)) (|Expression| |#1|) (|PositiveInteger|)))
           (SIGNATURE |complexNumeric|
            ((|Complex| (|Float|)) (|Expression| (|Complex| |#1|))))
           (SIGNATURE |complexNumeric|
            ((|Complex| (|Float|)) (|Expression| (|Complex| |#1|))
             (|PositiveInteger|))))
          |noBranch|))
     |noBranch|)
 (IF (|has| |#1| (|CommutativeRing|))
     (PROGN
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed")
        (|Polynomial| (|Complex| |#1|))))
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed")
        (|Polynomial| (|Complex| |#1|)) (|PositiveInteger|))))
     |noBranch|)
 (IF (|has| |#1| (|Ring|))
     (PROGN
      (SIGNATURE |numericIfCan|
       ((|Union| (|Float|) "failed") (|Polynomial| |#1|)))
      (SIGNATURE |numericIfCan|
       ((|Union| (|Float|) "failed") (|Polynomial| |#1|) (|PositiveInteger|)))
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|)))
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|)
        (|PositiveInteger|))))
     |noBranch|)
 (IF (|has| |#1| (|IntegralDomain|))
     (PROGN
      (SIGNATURE |numericIfCan|
       ((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|))))
      (SIGNATURE |numericIfCan|
       ((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|))
        (|PositiveInteger|)))
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed")
        (|Fraction| (|Polynomial| |#1|))))
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed")
        (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|)))
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed")
        (|Fraction| (|Polynomial| (|Complex| |#1|)))))
      (SIGNATURE |complexNumericIfCan|
       ((|Union| (|Complex| (|Float|)) "failed")
        (|Fraction| (|Polynomial| (|Complex| |#1|))) (|PositiveInteger|)))
      (IF (|has| |#1| (|OrderedSet|))
          (PROGN
           (SIGNATURE |numericIfCan|
            ((|Union| (|Float|) "failed") (|Expression| |#1|)))
           (SIGNATURE |numericIfCan|
            ((|Union| (|Float|) "failed") (|Expression| |#1|)
             (|PositiveInteger|)))
           (SIGNATURE |complexNumericIfCan|
            ((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|)))
           (SIGNATURE |complexNumericIfCan|
            ((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|)
             (|PositiveInteger|)))
           (SIGNATURE |complexNumericIfCan|
            ((|Union| (|Complex| (|Float|)) "failed")
             (|Expression| (|Complex| |#1|))))
           (SIGNATURE |complexNumericIfCan|
            ((|Union| (|Complex| (|Float|)) "failed")
             (|Expression| (|Complex| |#1|)) (|PositiveInteger|))))
          |noBranch|))
     |noBranch|))
"/git/fricas/src/algebra/NUMERIC.spad"
((|complexNumericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|numericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))
 (|numericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 (|complexNumericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|numericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 (|numericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|numericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 (|numericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 (|complexNumericIfCan| (*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumericIfCan| (*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
   (|ofCategory| *4 (|CommutativeRing|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Complex| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|numeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))
 (|numeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|numeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))
 (|numeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|numeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))
 (|numeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 (|complexNumeric| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 (|complexNumeric| (*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 (|numeric| (*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2))))
 (|numeric| (*1 *2 *3)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| *2)))))
((|numericIfCan|
  (((|Union| (|Float|) "failed") (|Expression| |#1|) (|PositiveInteger|)) 62
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Union| (|Float|) "failed") (|Expression| |#1|)) 52
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|))
    (|PositiveInteger|))
   39 (|has| |#1| (|IntegralDomain|)))
  (((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|))) 35
   (|has| |#1| (|IntegralDomain|)))
  (((|Union| (|Float|) "failed") (|Polynomial| |#1|) (|PositiveInteger|)) 30
   (|has| |#1| (|Ring|)))
  (((|Union| (|Float|) "failed") (|Polynomial| |#1|)) 24
   (|has| |#1| (|Ring|))))
 (|numeric|
  (((|Float|) (|Expression| |#1|) (|PositiveInteger|)) 94
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Float|) (|Expression| |#1|)) 89
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Float|) (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|)) 86
   (|has| |#1| (|IntegralDomain|)))
  (((|Float|) (|Fraction| (|Polynomial| |#1|))) 83
   (|has| |#1| (|IntegralDomain|)))
  (((|Float|) (|Polynomial| |#1|) (|PositiveInteger|)) 82
   (|has| |#1| (|Ring|)))
  (((|Float|) (|Polynomial| |#1|)) 79 (|has| |#1| (|Ring|)))
  (((|Float|) |#1| (|PositiveInteger|)) 75) (((|Float|) |#1|) 22))
 (|complexNumericIfCan|
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| (|Complex| |#1|))
    (|PositiveInteger|))
   70 (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| (|Complex| |#1|)))
   58 (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|)
    (|PositiveInteger|))
   63 (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|)) 59
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Union| (|Complex| (|Float|)) "failed")
    (|Fraction| (|Polynomial| (|Complex| |#1|))) (|PositiveInteger|))
   44 (|has| |#1| (|IntegralDomain|)))
  (((|Union| (|Complex| (|Float|)) "failed")
    (|Fraction| (|Polynomial| (|Complex| |#1|))))
   43 (|has| |#1| (|IntegralDomain|)))
  (((|Union| (|Complex| (|Float|)) "failed") (|Fraction| (|Polynomial| |#1|))
    (|PositiveInteger|))
   38 (|has| |#1| (|IntegralDomain|)))
  (((|Union| (|Complex| (|Float|)) "failed") (|Fraction| (|Polynomial| |#1|)))
   37 (|has| |#1| (|IntegralDomain|)))
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|)
    (|PositiveInteger|))
   28 (|has| |#1| (|Ring|)))
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|)) 26
   (|has| |#1| (|Ring|)))
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| (|Complex| |#1|))
    (|PositiveInteger|))
   17 (|has| |#1| (|CommutativeRing|)))
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| (|Complex| |#1|)))
   14 (|has| |#1| (|CommutativeRing|))))
 (|complexNumeric|
  (((|Complex| (|Float|)) (|Expression| (|Complex| |#1|)) (|PositiveInteger|))
   97 (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Complex| (|Float|)) (|Expression| (|Complex| |#1|))) 96
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Complex| (|Float|)) (|Expression| |#1|) (|PositiveInteger|)) 95
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Complex| (|Float|)) (|Expression| |#1|)) 93
   (AND (|has| |#1| (|IntegralDomain|)) (|has| |#1| (|OrderedSet|))))
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|)))
    (|PositiveInteger|))
   88 (|has| |#1| (|IntegralDomain|)))
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|)))) 87
   (|has| |#1| (|IntegralDomain|)))
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|))
   85 (|has| |#1| (|IntegralDomain|)))
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|))) 84
   (|has| |#1| (|IntegralDomain|)))
  (((|Complex| (|Float|)) (|Polynomial| |#1|) (|PositiveInteger|)) 81
   (|has| |#1| (|Ring|)))
  (((|Complex| (|Float|)) (|Polynomial| |#1|)) 80 (|has| |#1| (|Ring|)))
  (((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|)) (|PositiveInteger|))
   77 (|has| |#1| (|CommutativeRing|)))
  (((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|))) 76
   (|has| |#1| (|CommutativeRing|)))
  (((|Complex| (|Float|)) (|Complex| |#1|) (|PositiveInteger|)) 16
   (|has| |#1| (|CommutativeRing|)))
  (((|Complex| (|Float|)) (|Complex| |#1|)) 12
   (|has| |#1| (|CommutativeRing|)))
  (((|Complex| (|Float|)) |#1| (|PositiveInteger|)) 27)
  (((|Complex| (|Float|)) |#1|) 25)))
((|HasCategory| |#1| '(|IntegralDomain|))
 (AND (|HasCategory| |#1| '(|IntegralDomain|))
      (|HasCategory| |#1| '(|OrderedSet|)))
 (|HasCategory| |#1| '(|Ring|)) (|HasCategory| |#1| '(|CommutativeRing|)))
NUMERIC
((|constructor|
  (NIL
   "Numeric provides real and complex numerical evaluation functions for various symbolic types."))
 (|numericIfCan|
  (((|Union| (|Float|) "failed") (|Expression| |#1|) (|PositiveInteger|))
   "\\spad{numericIfCan(x,{} n)} returns a real approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Float|) "failed") (|Expression| |#1|))
   "\\spad{numericIfCan(x)} returns a real approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|))
    (|PositiveInteger|))
   "\\spad{numericIfCan(x,{} n)} returns a real approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Float|) "failed") (|Fraction| (|Polynomial| |#1|)))
   "\\spad{numericIfCan(x)} returns a real approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Float|) "failed") (|Polynomial| |#1|) (|PositiveInteger|))
   "\\spad{numericIfCan(x,{} n)} returns a real approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Float|) "failed") (|Polynomial| |#1|))
   "\\spad{numericIfCan(x)} returns a real approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant."))
 (|complexNumericIfCan|
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| (|Complex| |#1|))
    (|PositiveInteger|))
   "\\spad{complexNumericIfCan(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| (|Complex| |#1|)))
   "\\spad{complexNumericIfCan(x)} returns a complex approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|)
    (|PositiveInteger|))
   "\\spad{complexNumericIfCan(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Expression| |#1|))
   "\\spad{complexNumericIfCan(x)} returns a complex approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed")
    (|Fraction| (|Polynomial| (|Complex| |#1|))) (|PositiveInteger|))
   "\\spad{complexNumericIfCan(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed")
    (|Fraction| (|Polynomial| (|Complex| |#1|))))
   "\\spad{complexNumericIfCan(x)} returns a complex approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Fraction| (|Polynomial| |#1|))
    (|PositiveInteger|))
   "\\spad{complexNumericIfCan(x,{} n)} returns a complex approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Fraction| (|Polynomial| |#1|)))
   "\\spad{complexNumericIfCan(x)} returns a complex approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|)
    (|PositiveInteger|))
   "\\spad{complexNumericIfCan(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| |#1|))
   "\\spad{complexNumericIfCan(x)} returns a complex approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| (|Complex| |#1|))
    (|PositiveInteger|))
   "\\spad{complexNumericIfCan(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places,{} or \"failed\" if \\spad{x} is not a constant.")
  (((|Union| (|Complex| (|Float|)) "failed") (|Polynomial| (|Complex| |#1|)))
   "\\spad{complexNumericIfCan(x)} returns a complex approximation of \\spad{x},{} or \"failed\" if \\spad{x} is not constant."))
 (|complexNumeric|
  (((|Complex| (|Float|)) (|Expression| (|Complex| |#1|)) (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Complex| (|Float|)) (|Expression| (|Complex| |#1|)))
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}.")
  (((|Complex| (|Float|)) (|Expression| |#1|) (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Complex| (|Float|)) (|Expression| |#1|))
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}.")
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|)))
    (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| (|Complex| |#1|))))
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}.")
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x}")
  (((|Complex| (|Float|)) (|Fraction| (|Polynomial| |#1|)))
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}.")
  (((|Complex| (|Float|)) (|Polynomial| |#1|) (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Complex| (|Float|)) (|Polynomial| |#1|))
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}.")
  (((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|)) (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Complex| (|Float|)) (|Polynomial| (|Complex| |#1|)))
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}.")
  (((|Complex| (|Float|)) (|Complex| |#1|) (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Complex| (|Float|)) (|Complex| |#1|))
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}.")
  (((|Complex| (|Float|)) |#1| (|PositiveInteger|))
   "\\spad{complexNumeric(x,{} n)} returns a complex approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Complex| (|Float|)) |#1|)
   "\\spad{complexNumeric(x)} returns a complex approximation of \\spad{x}."))
 (|numeric|
  (((|Float|) (|Expression| |#1|) (|PositiveInteger|))
   "\\spad{numeric(x,{} n)} returns a real approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Float|) (|Expression| |#1|))
   "\\spad{numeric(x)} returns a real approximation of \\spad{x}.")
  (((|Float|) (|Fraction| (|Polynomial| |#1|)) (|PositiveInteger|))
   "\\spad{numeric(x,{} n)} returns a real approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Float|) (|Fraction| (|Polynomial| |#1|)))
   "\\spad{numeric(x)} returns a real approximation of \\spad{x}.")
  (((|Float|) (|Polynomial| |#1|) (|PositiveInteger|))
   "\\spad{numeric(x,{} n)} returns a real approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Float|) (|Polynomial| |#1|))
   "\\spad{numeric(x)} returns a real approximation of \\spad{x}.")
  (((|Float|) |#1| (|PositiveInteger|))
   "\\spad{numeric(x,{} n)} returns a real approximation of \\spad{x} up to \\spad{n} decimal places.")
  (((|Float|) |#1|)
   "\\spad{numeric(x)} returns a real approximation of \\spad{x}.")))
(("documentation" 0 26798) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 26790) ("predicates" 0 26582) ("superDomain" 0 NIL)
 ("operationAlist" 0 21843) ("modemaps" 0 10749) ("sourceFile" 0 10710)
 ("constructorCategory" 0 5540) ("constructorModemap" 0 44)
 ("constructorKind" 0 34) ("constructorForm" 0 20))