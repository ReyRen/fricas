2330                (MAKEPROP '|compCode| 'NILADIC T)
(|compCode|)
|package|
(((|compCode|)
  (CATEGORY |package|
   (SIGNATURE |writeCategory|
    ((|Void|) (|List| (|ILogic|)) (|String|) (|String|) (|String|)))
   (SIGNATURE |writePackage|
    ((|Void|) (|List| (|Lambda| (|Typed|))) (|String|) (|String|) (|String|)
     (|String|)))))
 (T |compCode|))
(CATEGORY |package|
 (SIGNATURE |writeCategory|
  ((|Void|) (|List| (|ILogic|)) (|String|) (|String|) (|String|)))
 (SIGNATURE |writePackage|
  ((|Void|) (|List| (|Lambda| (|Typed|))) (|String|) (|String|) (|String|)
   (|String|))))
"/git/fricas/src/algebra/COMPCODE.spad"
((|writePackage| (*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Lambda| (|Typed|)))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))
 (|writeCategory| (*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|ILogic|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|)))))
((|writePackage|
  (((|Void|) (|List| (|Lambda| (|Typed|))) (|String|) (|String|) (|String|)
    (|String|))
   47))
 (|writeCategory|
  (((|Void|) (|List| (|ILogic|)) (|String|) (|String|) (|String|)) 46)))
COMPCODE
((|constructor|
  (NIL
   "Maps abstract computational structures to real-world FriCAS code \\blankline This allows FriCAS domains to be created from an instance of Lambda it also allows FriCAS categories to be created from an instance of intuitionisticLogic. \\blankline So by the Curry-Howard isomorphism we can coerce to the intuitionisticLogic from Lambda. This gives an isomorphism where theorems in intuitionistic logic correspond to type signatures in combinatory logic and programs in intuitionistic logic correspond to the proofs of those theorems in combinatory logic. \\blankline As an example of this in Haskell see \"Djinn,{} a theorem prover in Haskell,{} for Haskell\" here: http://lambda-the-ultimate.\\spad{org/node/1178} \\blankline see also: Philip Wadler - Theorems for free! http://homepages.inf.ed.ac.uk/wadler/topics/parametricity.html"))
 (|writePackage|
  (((|Void|) (|List| (|Lambda| (|Typed|))) (|String|) (|String|) (|String|)
    (|String|))
   "writes a package to a file."))
 (|writeCategory|
  (((|Void|) (|List| (|ILogic|)) (|String|) (|String|) (|String|))
   "writes a category to a file.")))
(("documentation" 0 1202) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 1193) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 985) ("modemaps" 0 630) ("sourceFile" 0 590)
 ("constructorCategory" 0 356) ("constructorModemap" 0 77)
 ("constructorKind" 0 67) ("constructorForm" 0 54) ("NILADIC" 0 20))