)abbrev domain QUEUE Queue
++ Author: Michael Monagan and Stephen Watt
++ Date Created: June 86 and July 87
++ Basic Operations:
++ Related Domains:
++ Also See:
++ AMS Classifications:
++ Keywords:
++ Examples:
++ References:
++ Description:

++ Linked List implementation of a Queue

Queue(S : SetCategory) : QueueAggregate S with
    queue : List S -> %
      ++ queue([x, y, ..., z]) creates a queue with first (top)
      ++ element x, second element y, ..., and last (bottom) element z.
  == Stack S add
    Rep := Reference List S
    lastTail==> LAST$Lisp

    enqueue!(e, q) ==
        if empty?(deref(q)) then setref(q, list e)
        else lastTail.(deref q).rest := list e
        e
    insert!(e, q) == (enqueue!(e, q);q)
    dequeue! q ==
        empty? q => error "empty queue"
        e := first deref q
        setref(q, rest deref q)
        e
    extract! q == dequeue! q
    rotate! q == if empty? q then q else (enqueue!(dequeue! q, q); q)
    front q == if empty? q then error "empty queue" else first deref q
    inspect q == front q
    back q == if empty? q then error "empty queue" else last deref q
    queue q == construct(q)

