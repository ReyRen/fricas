6050                (|ListToMap| A B)
|package|
(((|ListToMap| |#1| |#2|)
  (CATEGORY |package|
   (SIGNATURE |match| ((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|)))
   (SIGNATURE |match| (|#2| (|List| |#1|) (|List| |#2|) |#1|))
   (SIGNATURE |match| ((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) |#2|))
   (SIGNATURE |match| (|#2| (|List| |#1|) (|List| |#2|) |#1| |#2|))
   (SIGNATURE |match|
    ((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) (|Mapping| |#2| |#1|)))
   (SIGNATURE |match|
    (|#2| (|List| |#1|) (|List| |#2|) |#1| (|Mapping| |#2| |#1|))))
  (|SetCategory|) (|Type|))
 (T |ListToMap|))
(CATEGORY |package|
 (SIGNATURE |match| ((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|)))
 (SIGNATURE |match| (|#2| (|List| |#1|) (|List| |#2|) |#1|))
 (SIGNATURE |match| ((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) |#2|))
 (SIGNATURE |match| (|#2| (|List| |#1|) (|List| |#2|) |#1| |#2|))
 (SIGNATURE |match|
  ((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) (|Mapping| |#2| |#1|)))
 (SIGNATURE |match|
  (|#2| (|List| |#1|) (|List| |#2|) |#1| (|Mapping| |#2| |#1|))))
"/git/fricas/src/algebra/LIST2MAP.spad"
((|match| (*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|isDomain| *6 (|Mapping| *2 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2))))
 (|match| (*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *6))))
 (|match| (*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 (|match| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Mapping| *5 *6)) (|isDomain| *1 (|ListToMap| *6 *5))))
 (|match| (*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 (|match| (*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|ListToMap| *5 *6)))))
((|match| ((|#2| (|List| |#1|) (|List| |#2|) |#1| (|Mapping| |#2| |#1|)) 18)
  (((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) (|Mapping| |#2| |#1|))
   19)
  ((|#2| (|List| |#1|) (|List| |#2|) |#1| |#2|) 16)
  (((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) |#2|) 17)
  ((|#2| (|List| |#1|) (|List| |#2|) |#1|) 10)
  (((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|)) 12)))
LIST2MAP
((|constructor|
  (NIL
   "\\spadtype{ListToMap} allows mappings to be described by a pair of lists of equal lengths. The image of an element \\spad{x},{} which appears in position \\spad{n} in the first list,{} is then the \\spad{n}th element of the second list. A default value or default function can be specified to be used when \\spad{x} does not appear in the first list. In the absence of defaults,{} an error will occur in that case."))
 (|match|
  ((|#2| (|List| |#1|) (|List| |#2|) |#1| (|Mapping| |#2| |#1|))
   "\\spad{match(la,{} lb,{} a,{} f)} creates a map defined by lists \\spad{la} and \\spad{lb} of equal length,{} and applies this map to a. The target of a source value \\spad{x} in \\spad{la} is the value \\spad{y} with the same index in \\spad{lb}. Argument \\spad{f} is a default function to call if a is not in \\spad{la}. The value returned is then obtained by applying \\spad{f} to argument a.")
  (((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) (|Mapping| |#2| |#1|))
   "\\spad{match(la,{} lb,{} f)} creates a map defined by lists \\spad{la} and \\spad{lb} of equal length. The target of a source value \\spad{x} in \\spad{la} is the value \\spad{y} with the same index in \\spad{lb}. Argument \\spad{f} is used as the function to call when the given function argument is not in \\spad{la}. The value returned is \\spad{f} applied to that argument.")
  ((|#2| (|List| |#1|) (|List| |#2|) |#1| |#2|)
   "\\spad{match(la,{} lb,{} a,{} b)} creates a map defined by lists \\spad{la} and \\spad{lb} of equal length,{} and applies this map to a. The target of a source value \\spad{x} in \\spad{la} is the value \\spad{y} with the same index in \\spad{lb}. Argument \\spad{b} is the default target value if a is not in \\spad{la}. Error: if \\spad{la} and \\spad{lb} are not of equal length.")
  (((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|) |#2|)
   "\\spad{match(la,{} lb,{} b)} creates a map defined by lists \\spad{la} and \\spad{lb} of equal length,{} where \\spad{b} is used as the default target value if the given function argument is not in \\spad{la}. The target of a source value \\spad{x} in \\spad{la} is the value \\spad{y} with the same index in \\spad{lb}. Error: if \\spad{la} and \\spad{lb} are not of equal length.")
  ((|#2| (|List| |#1|) (|List| |#2|) |#1|)
   "\\spad{match(la,{} lb,{} a)} creates a map defined by lists \\spad{la} and \\spad{lb} of equal length,{} where \\spad{a} is used as the default source value if the given one is not in \\spad{la}. The target of a source value \\spad{x} in \\spad{la} is the value \\spad{y} with the same index in \\spad{lb}. Error: if \\spad{la} and \\spad{lb} are not of equal length.")
  (((|Mapping| |#2| |#1|) (|List| |#1|) (|List| |#2|))
   "\\spad{match(la,{} lb)} creates a map with no default source or target values defined by lists \\spad{la} and \\spad{lb} of equal length. The target of a source value \\spad{x} in \\spad{la} is the value \\spad{y} with the same index in \\spad{lb}. Error: if \\spad{la} and \\spad{lb} are not of equal length. Note: when this map is applied,{} an error occurs when applied to a value missing from \\spad{la}.")))
(("documentation" 0 2892) ("ancestors" 0 NIL) ("parents" 0 NIL)
 ("abbreviation" 0 2883) ("predicates" 0 NIL) ("superDomain" 0 NIL)
 ("operationAlist" 0 2498) ("modemaps" 0 1140) ("sourceFile" 0 1100)
 ("constructorCategory" 0 619) ("constructorModemap" 0 48)
 ("constructorKind" 0 38) ("constructorForm" 0 20))